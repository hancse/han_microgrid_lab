[
    {
        "id": "ec06544c.0674a8",
        "type": "tab",
        "label": "meter graphs",
        "disabled": false,
        "info": ""
    },
    {
        "id": "7fe9098.21bfff8",
        "type": "tab",
        "label": "overall",
        "disabled": false,
        "info": ""
    },
    {
        "id": "49f6a65a.0777d8",
        "type": "tab",
        "label": "EVchargers",
        "disabled": false,
        "info": ""
    },
    {
        "id": "c11e4362.d41f9",
        "type": "tab",
        "label": "user register",
        "disabled": false,
        "info": ""
    },
    {
        "id": "b8cf085c.d7fe68",
        "type": "tab",
        "label": "password crypt generate",
        "disabled": false,
        "info": ""
    },
    {
        "id": "4d9afbc9.f0b6b4",
        "type": "tab",
        "label": "Flow 7",
        "disabled": true,
        "info": ""
    },
    {
        "id": "54366890.831598",
        "type": "tab",
        "label": "Prediction",
        "disabled": false,
        "info": ""
    },
    {
        "id": "81c110d8.48675",
        "type": "tab",
        "label": "Upload script",
        "disabled": false,
        "info": ""
    },
    {
        "id": "75ab9946.be732",
        "type": "subflow",
        "name": "List Files",
        "info": "# List files\n\nWill list files in a directory.\n\nPath can be set in `msg.payload` or by setting the `DIRECTORY` environment variable.\n\nExtensions can be filtered by settings the `EXTENSIONS` environment variable to an Array of extensions.\n",
        "category": "",
        "in": [
            {
                "x": 80,
                "y": 80,
                "wires": [
                    {
                        "id": "6fb4822d.0a411c"
                    }
                ]
            }
        ],
        "out": [
            {
                "x": 840,
                "y": 40,
                "wires": [
                    {
                        "id": "d9976519.de1828",
                        "port": 0
                    }
                ]
            }
        ],
        "env": [
            {
                "name": "DIRECTORY",
                "type": "str",
                "value": ""
            },
            {
                "name": "EXTENSIONS",
                "type": "json",
                "value": "[]"
            }
        ]
    },
    {
        "id": "e001098b.ca9728",
        "type": "subflow",
        "name": "FIle Upload",
        "info": "",
        "category": "",
        "in": [],
        "out": [
            {
                "x": 1140,
                "y": 280,
                "wires": [
                    {
                        "id": "8c1d20f4.1849",
                        "port": 0
                    },
                    {
                        "id": "3870a863.667dc",
                        "port": 0
                    }
                ]
            }
        ],
        "env": [
            {
                "name": "UPLOAD_DIR",
                "type": "str",
                "value": "."
            },
            {
                "name": "EXTENSIONS",
                "type": "json",
                "value": "[]"
            }
        ],
        "outputLabels": [
            "fileWritten"
        ]
    },
    {
        "id": "7473c6dc.951318",
        "type": "sqlitedb",
        "z": "",
        "db": "/media/usb/userList",
        "mode": "RO"
    },
    {
        "id": "eacf9c1b.e4c86",
        "type": "sqlitedb",
        "z": "",
        "db": "/media/DATABASE/usertable.sqlite3",
        "mode": "RW"
    },
    {
        "id": "c415c421.fc2138",
        "type": "ui_base",
        "theme": {
            "name": "theme-custom",
            "lightTheme": {
                "default": "#0094CE",
                "baseColor": "#0094CE",
                "baseFont": "-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Oxygen-Sans,Ubuntu,Cantarell,Helvetica Neue,sans-serif",
                "edited": true,
                "reset": false
            },
            "darkTheme": {
                "default": "#097479",
                "baseColor": "#097479",
                "baseFont": "Gill Sans,Geneva,sans-serif",
                "edited": true,
                "reset": false
            },
            "customTheme": {
                "name": "Untitled Theme 1",
                "default": "#4B7930",
                "baseColor": "#097479",
                "baseFont": "Arial,Arial,Helvetica,sans-serif",
                "reset": false
            },
            "themeState": {
                "base-color": {
                    "default": "#4B7930",
                    "value": "#097479",
                    "edited": true
                },
                "page-titlebar-backgroundColor": {
                    "value": "#097479",
                    "edited": false
                },
                "page-backgroundColor": {
                    "value": "#111111",
                    "edited": false
                },
                "page-sidebar-backgroundColor": {
                    "value": "#000000",
                    "edited": false
                },
                "group-textColor": {
                    "value": "#0eb8c0",
                    "edited": false
                },
                "group-borderColor": {
                    "value": "#555555",
                    "edited": false
                },
                "group-backgroundColor": {
                    "value": "#333333",
                    "edited": false
                },
                "widget-textColor": {
                    "value": "#eeeeee",
                    "edited": false
                },
                "widget-backgroundColor": {
                    "value": "#097479",
                    "edited": false
                },
                "widget-borderColor": {
                    "value": "#333333",
                    "edited": false
                },
                "base-font": {
                    "value": "Arial,Arial,Helvetica,sans-serif"
                }
            },
            "angularTheme": {
                "primary": "indigo",
                "accents": "blue",
                "warn": "red",
                "background": "grey"
            }
        },
        "site": {
            "name": "Measured Data",
            "hideToolbar": "false",
            "allowSwipe": "true",
            "lockMenu": "false",
            "allowTempTheme": "false",
            "dateFormat": "DD/MM/YYYY",
            "sizes": {
                "sx": 33,
                "sy": 39,
                "gx": 10,
                "gy": 10,
                "cx": 7,
                "cy": 7,
                "px": 0,
                "py": 0
            }
        }
    },
    {
        "id": "cea0288d.9250e8",
        "type": "ui_tab",
        "z": "",
        "name": "Demonstration",
        "icon": "dashboard",
        "order": 1,
        "disabled": false,
        "hidden": false
    },
    {
        "id": "dfd14421.0131b8",
        "type": "ui_group",
        "z": "",
        "name": "Phase Voltage",
        "tab": "cea0288d.9250e8",
        "order": 1,
        "disp": false,
        "width": "8",
        "collapse": false
    },
    {
        "id": "e476f0d6.52ab",
        "type": "ui_group",
        "z": "",
        "name": "Phase Current",
        "tab": "cea0288d.9250e8",
        "order": 2,
        "disp": false,
        "width": 8,
        "collapse": false
    },
    {
        "id": "9268bddf.ab4da",
        "type": "ui_group",
        "z": "",
        "name": "Phase Power",
        "tab": "cea0288d.9250e8",
        "order": 3,
        "disp": false,
        "width": 8,
        "collapse": false
    },
    {
        "id": "c7e074e4.034958",
        "type": "ui_group",
        "z": "",
        "name": "Frequency",
        "tab": "cea0288d.9250e8",
        "order": 4,
        "disp": false,
        "width": 8,
        "collapse": false
    },
    {
        "id": "63788eed.bddff",
        "type": "ui_tab",
        "z": "",
        "name": "Reserve",
        "icon": "dashboard",
        "order": 2,
        "disabled": false,
        "hidden": false
    },
    {
        "id": "1c898a3e.e09466",
        "type": "ui_tab",
        "z": "",
        "name": "PV",
        "icon": "dashboard",
        "order": 3,
        "disabled": false,
        "hidden": false
    },
    {
        "id": "8bcd15fb.5af798",
        "type": "ui_group",
        "z": "",
        "name": "Phase Voltage",
        "tab": "1c898a3e.e09466",
        "order": 1,
        "disp": false,
        "width": 8,
        "collapse": false
    },
    {
        "id": "964e7f1.5d5328",
        "type": "ui_tab",
        "z": "",
        "name": "Battery",
        "icon": "dashboard",
        "order": 4,
        "disabled": false,
        "hidden": false
    },
    {
        "id": "500a310d.d2a5e",
        "type": "ui_tab",
        "z": "",
        "name": "Grid",
        "icon": "dashboard",
        "order": 5,
        "disabled": false,
        "hidden": false
    },
    {
        "id": "d79c6951.4f1ba8",
        "type": "ui_group",
        "z": "",
        "name": "Phase Voltage",
        "tab": "63788eed.bddff",
        "order": 1,
        "disp": false,
        "width": 8,
        "collapse": false
    },
    {
        "id": "596d8da.fe2e074",
        "type": "ui_group",
        "z": "",
        "name": "Phase Current",
        "tab": "63788eed.bddff",
        "order": 2,
        "disp": false,
        "width": 8,
        "collapse": false
    },
    {
        "id": "c36d1e23.0c203",
        "type": "ui_group",
        "z": "",
        "name": "Phase Power",
        "tab": "63788eed.bddff",
        "order": 3,
        "disp": false,
        "width": 8,
        "collapse": false
    },
    {
        "id": "28cbcfdd.3809",
        "type": "ui_group",
        "z": "",
        "name": "Frequency",
        "tab": "63788eed.bddff",
        "order": 4,
        "disp": false,
        "width": 8,
        "collapse": false
    },
    {
        "id": "9e5378ec.4d6618",
        "type": "ui_group",
        "z": "",
        "name": "Phase Current",
        "tab": "1c898a3e.e09466",
        "order": 2,
        "disp": false,
        "width": 8,
        "collapse": false
    },
    {
        "id": "c9e1a2ff.28bba",
        "type": "ui_group",
        "z": "",
        "name": "Phase Power",
        "tab": "1c898a3e.e09466",
        "order": 3,
        "disp": false,
        "width": 8,
        "collapse": false
    },
    {
        "id": "7338e849.a0fa78",
        "type": "ui_group",
        "z": "",
        "name": "Frequency",
        "tab": "1c898a3e.e09466",
        "order": 4,
        "disp": false,
        "width": 8,
        "collapse": false
    },
    {
        "id": "a33c6c34.27bb7",
        "type": "ui_group",
        "z": "",
        "name": "Phase Voltage",
        "tab": "964e7f1.5d5328",
        "order": 1,
        "disp": false,
        "width": 8,
        "collapse": false
    },
    {
        "id": "1647578d.713058",
        "type": "ui_group",
        "z": "",
        "name": "Phase Current",
        "tab": "964e7f1.5d5328",
        "order": 2,
        "disp": false,
        "width": 8,
        "collapse": false
    },
    {
        "id": "b7db0a05.88faf8",
        "type": "ui_group",
        "z": "",
        "name": "Phase Power",
        "tab": "964e7f1.5d5328",
        "order": 3,
        "disp": false,
        "width": 8,
        "collapse": false
    },
    {
        "id": "9d4f667a.0986b8",
        "type": "ui_group",
        "z": "",
        "name": "Phase Voltage",
        "tab": "500a310d.d2a5e",
        "order": 1,
        "disp": false,
        "width": 8,
        "collapse": false
    },
    {
        "id": "fc3e11ad.58936",
        "type": "ui_group",
        "z": "",
        "name": "Phase Current",
        "tab": "500a310d.d2a5e",
        "order": 2,
        "disp": false,
        "width": 8,
        "collapse": false
    },
    {
        "id": "6e68121e.c4427c",
        "type": "ui_group",
        "z": "",
        "name": "Phase Power",
        "tab": "500a310d.d2a5e",
        "order": 3,
        "disp": false,
        "width": 8,
        "collapse": false
    },
    {
        "id": "71a695c8.7017ec",
        "type": "ui_group",
        "z": "",
        "name": "Frequency",
        "tab": "500a310d.d2a5e",
        "order": 4,
        "disp": false,
        "width": 8,
        "collapse": false
    },
    {
        "id": "9b1d82d.f4ee38",
        "type": "ui_group",
        "z": "",
        "name": "Frequency",
        "tab": "964e7f1.5d5328",
        "order": 4,
        "disp": false,
        "width": 8,
        "collapse": false
    },
    {
        "id": "4eb1a5cd.8de6ec",
        "type": "ui_tab",
        "z": "",
        "name": "Overall",
        "icon": "dashboard",
        "order": 6,
        "disabled": false,
        "hidden": false
    },
    {
        "id": "18a07384.7d320c",
        "type": "ui_group",
        "z": "",
        "name": "PV",
        "tab": "4eb1a5cd.8de6ec",
        "order": 1,
        "disp": true,
        "width": 9,
        "collapse": false
    },
    {
        "id": "8bfe8745.735b78",
        "type": "ui_group",
        "z": "",
        "name": "Battery",
        "tab": "4eb1a5cd.8de6ec",
        "order": 2,
        "disp": true,
        "width": 9,
        "collapse": false
    },
    {
        "id": "3ab13b54.a45af4",
        "type": "ui_group",
        "z": "",
        "name": "Grid",
        "tab": "4eb1a5cd.8de6ec",
        "order": 3,
        "disp": true,
        "width": 9,
        "collapse": false
    },
    {
        "id": "19f714cf.267cbb",
        "type": "ui_spacer",
        "name": "spacer",
        "group": "18a07384.7d320c",
        "order": 3,
        "width": 1,
        "height": 1
    },
    {
        "id": "7ec7bc85.878ef4",
        "type": "ui_spacer",
        "name": "spacer",
        "group": "18a07384.7d320c",
        "order": 6,
        "width": 1,
        "height": 1
    },
    {
        "id": "87568dc1.44d58",
        "type": "ui_spacer",
        "name": "spacer",
        "group": "18a07384.7d320c",
        "order": 9,
        "width": 1,
        "height": 1
    },
    {
        "id": "ce7b0a70.061478",
        "type": "ui_spacer",
        "name": "spacer",
        "group": "18a07384.7d320c",
        "order": 10,
        "width": 9,
        "height": 1
    },
    {
        "id": "c78a511d.8859d",
        "type": "ui_spacer",
        "name": "spacer",
        "group": "18a07384.7d320c",
        "order": 13,
        "width": 1,
        "height": 1
    },
    {
        "id": "55300eba.2d71f",
        "type": "ui_spacer",
        "name": "spacer",
        "group": "18a07384.7d320c",
        "order": 16,
        "width": 1,
        "height": 1
    },
    {
        "id": "14870f0d.65acb1",
        "type": "ui_spacer",
        "name": "spacer",
        "group": "18a07384.7d320c",
        "order": 19,
        "width": 1,
        "height": 1
    },
    {
        "id": "1cbad2ba.ff2ccd",
        "type": "ui_spacer",
        "name": "spacer",
        "group": "18a07384.7d320c",
        "order": 20,
        "width": 9,
        "height": 1
    },
    {
        "id": "18ea4222.964cce",
        "type": "ui_spacer",
        "name": "spacer",
        "group": "18a07384.7d320c",
        "order": 23,
        "width": 1,
        "height": 1
    },
    {
        "id": "ebe5dfdf.7eb4f",
        "type": "ui_spacer",
        "name": "spacer",
        "group": "18a07384.7d320c",
        "order": 26,
        "width": 1,
        "height": 1
    },
    {
        "id": "2491d9b0.17e9f6",
        "type": "ui_spacer",
        "name": "spacer",
        "group": "18a07384.7d320c",
        "order": 29,
        "width": 1,
        "height": 1
    },
    {
        "id": "9f47daa0.c82ee8",
        "type": "ui_spacer",
        "name": "spacer",
        "group": "18a07384.7d320c",
        "order": 31,
        "width": 1,
        "height": 1
    },
    {
        "id": "435a53f1.d4c00c",
        "type": "ui_spacer",
        "name": "spacer",
        "group": "18a07384.7d320c",
        "order": 32,
        "width": 1,
        "height": 1
    },
    {
        "id": "8726c8b6.ef3928",
        "type": "ui_spacer",
        "name": "spacer",
        "group": "18a07384.7d320c",
        "order": 33,
        "width": 1,
        "height": 1
    },
    {
        "id": "9dd594b3.b50638",
        "type": "ui_spacer",
        "name": "spacer",
        "group": "18a07384.7d320c",
        "order": 34,
        "width": 1,
        "height": 1
    },
    {
        "id": "8a41b721.db8b38",
        "type": "ui_spacer",
        "name": "spacer",
        "group": "8bfe8745.735b78",
        "order": 3,
        "width": 1,
        "height": 1
    },
    {
        "id": "c6398ba3.950e28",
        "type": "ui_spacer",
        "name": "spacer",
        "group": "8bfe8745.735b78",
        "order": 6,
        "width": 1,
        "height": 1
    },
    {
        "id": "979ccdb8.3211a",
        "type": "ui_spacer",
        "name": "spacer",
        "group": "8bfe8745.735b78",
        "order": 9,
        "width": 1,
        "height": 1
    },
    {
        "id": "f3a3fb44.198748",
        "type": "ui_spacer",
        "name": "spacer",
        "group": "8bfe8745.735b78",
        "order": 10,
        "width": 9,
        "height": 1
    },
    {
        "id": "e2374d0c.2e5c6",
        "type": "ui_spacer",
        "name": "spacer",
        "group": "8bfe8745.735b78",
        "order": 13,
        "width": 1,
        "height": 1
    },
    {
        "id": "f86c65d3.f94a68",
        "type": "ui_spacer",
        "name": "spacer",
        "group": "8bfe8745.735b78",
        "order": 16,
        "width": 1,
        "height": 1
    },
    {
        "id": "768b08da.29cf18",
        "type": "ui_spacer",
        "name": "spacer",
        "group": "8bfe8745.735b78",
        "order": 19,
        "width": 1,
        "height": 1
    },
    {
        "id": "83f6a41a.9f2648",
        "type": "ui_spacer",
        "name": "spacer",
        "group": "8bfe8745.735b78",
        "order": 20,
        "width": 9,
        "height": 1
    },
    {
        "id": "9d6bf6d0.8ed518",
        "type": "ui_spacer",
        "name": "spacer",
        "group": "8bfe8745.735b78",
        "order": 23,
        "width": 1,
        "height": 1
    },
    {
        "id": "a4f26575.397f38",
        "type": "ui_spacer",
        "name": "spacer",
        "group": "8bfe8745.735b78",
        "order": 26,
        "width": 1,
        "height": 1
    },
    {
        "id": "c23f8bf7.89c9d8",
        "type": "ui_spacer",
        "name": "spacer",
        "group": "8bfe8745.735b78",
        "order": 29,
        "width": 1,
        "height": 1
    },
    {
        "id": "bd9ea5b6.e95218",
        "type": "ui_spacer",
        "name": "spacer",
        "group": "3ab13b54.a45af4",
        "order": 3,
        "width": 1,
        "height": 1
    },
    {
        "id": "51f0165d.501fa8",
        "type": "ui_spacer",
        "name": "spacer",
        "group": "3ab13b54.a45af4",
        "order": 6,
        "width": 1,
        "height": 1
    },
    {
        "id": "8e930ac6.6d0b08",
        "type": "ui_spacer",
        "name": "spacer",
        "group": "3ab13b54.a45af4",
        "order": 9,
        "width": 1,
        "height": 1
    },
    {
        "id": "e927586c.9f2f68",
        "type": "ui_spacer",
        "name": "spacer",
        "group": "3ab13b54.a45af4",
        "order": 10,
        "width": 9,
        "height": 1
    },
    {
        "id": "51387c6d.c701c4",
        "type": "ui_spacer",
        "name": "spacer",
        "group": "3ab13b54.a45af4",
        "order": 13,
        "width": 1,
        "height": 1
    },
    {
        "id": "1e5f074d.629f99",
        "type": "ui_spacer",
        "name": "spacer",
        "group": "3ab13b54.a45af4",
        "order": 16,
        "width": 1,
        "height": 1
    },
    {
        "id": "fc2e3b66.96a1a8",
        "type": "ui_spacer",
        "name": "spacer",
        "group": "3ab13b54.a45af4",
        "order": 19,
        "width": 1,
        "height": 1
    },
    {
        "id": "27ca598c.4e5ee6",
        "type": "ui_spacer",
        "name": "spacer",
        "group": "3ab13b54.a45af4",
        "order": 20,
        "width": 9,
        "height": 1
    },
    {
        "id": "a099b2f7.5ae21",
        "type": "ui_spacer",
        "name": "spacer",
        "group": "3ab13b54.a45af4",
        "order": 23,
        "width": 1,
        "height": 1
    },
    {
        "id": "fafa48fb.58c5b8",
        "type": "ui_spacer",
        "name": "spacer",
        "group": "3ab13b54.a45af4",
        "order": 26,
        "width": 1,
        "height": 1
    },
    {
        "id": "f8fe0345.42aa8",
        "type": "ui_spacer",
        "name": "spacer",
        "group": "3ab13b54.a45af4",
        "order": 29,
        "width": 1,
        "height": 1
    },
    {
        "id": "933b80c6.0add1",
        "type": "sqlitedb",
        "z": "",
        "db": "/mnt/dav/Data/modbusData.db",
        "mode": "RO"
    },
    {
        "id": "9befc88e.28ef18",
        "type": "sqlitedb",
        "z": "",
        "db": "/mnt/dav/Data/usertable.sqlite3",
        "mode": "RW"
    },
    {
        "id": "936ba976.2c4878",
        "type": "ui_tab",
        "z": "49f6a65a.0777d8",
        "name": "Chargers",
        "icon": "dashboard",
        "order": 7,
        "disabled": false,
        "hidden": false
    },
    {
        "id": "23f9abd1.a832d4",
        "type": "ui_group",
        "z": "49f6a65a.0777d8",
        "name": "Charger1",
        "tab": "936ba976.2c4878",
        "order": 1,
        "disp": true,
        "width": "12",
        "collapse": false
    },
    {
        "id": "df69e39.f63442",
        "type": "mqtt-broker",
        "z": "",
        "name": "Charger_Messages",
        "broker": "broker.hivemq.com",
        "port": "1883",
        "clientid": "Pi-Node",
        "usetls": false,
        "compatmode": false,
        "keepalive": "60",
        "cleansession": false,
        "birthTopic": "",
        "birthQos": "0",
        "birthPayload": "",
        "closeTopic": "",
        "closeQos": "0",
        "closePayload": "",
        "willTopic": "",
        "willQos": "0",
        "willPayload": ""
    },
    {
        "id": "1160d3df.5a9eec",
        "type": "ui_group",
        "z": "",
        "name": "Charger2",
        "tab": "936ba976.2c4878",
        "order": 2,
        "disp": true,
        "width": "12",
        "collapse": false
    },
    {
        "id": "655de677.31fa58",
        "type": "ui_group",
        "z": "",
        "name": "ExtraInfo",
        "tab": "936ba976.2c4878",
        "order": 5,
        "disp": false,
        "width": "10",
        "collapse": false
    },
    {
        "id": "252f88bd.cf0998",
        "type": "ui_group",
        "z": "",
        "name": "Charts",
        "tab": "c2e1ff70.f09fd",
        "order": 2,
        "disp": false,
        "width": "6"
    },
    {
        "id": "2d4c7e70.188212",
        "type": "ui_group",
        "z": "",
        "name": "Inputs",
        "tab": "c2e1ff70.f09fd",
        "order": 1,
        "disp": false,
        "width": "6"
    },
    {
        "id": "57f47cbf.d72824",
        "type": "ui_group",
        "z": "",
        "name": "Group 3",
        "tab": "c2e1ff70.f09fd",
        "order": 3,
        "disp": false,
        "width": "6"
    },
    {
        "id": "c2e1ff70.f09fd",
        "type": "ui_tab",
        "z": "",
        "name": "Charts",
        "icon": "dashboard",
        "order": 8
    },
    {
        "id": "b52f469d.907fe8",
        "type": "ui_tab",
        "z": "c11e4362.d41f9",
        "name": "Register",
        "icon": "dashboard",
        "order": 9,
        "disabled": false,
        "hidden": false
    },
    {
        "id": "1b4cce16.12a892",
        "type": "ui_group",
        "z": "c11e4362.d41f9",
        "name": "Register User",
        "tab": "b52f469d.907fe8",
        "order": 1,
        "disp": true,
        "width": "20",
        "collapse": false
    },
    {
        "id": "5a10e5e5.513ffc",
        "type": "sqlitedb",
        "db": "test.sqlite"
    },
    {
        "id": "3cecb3bd.22f5ac",
        "type": "ui_group",
        "z": "",
        "name": "Feedback",
        "tab": "b52f469d.907fe8",
        "order": 2,
        "disp": false,
        "width": "20",
        "collapse": false
    },
    {
        "id": "1b51a493.87779b",
        "type": "ui_tab",
        "z": "",
        "name": "Admin",
        "icon": "dashboard",
        "order": 10,
        "disabled": false,
        "hidden": false
    },
    {
        "id": "e4fa98aa.1a5438",
        "type": "ui_group",
        "z": "",
        "name": "login",
        "tab": "1b51a493.87779b",
        "order": 1,
        "disp": false,
        "width": "36",
        "collapse": false
    },
    {
        "id": "890333f8.e584b",
        "type": "ui_tab",
        "z": "",
        "name": "Simulation",
        "icon": "dashboard",
        "order": 13,
        "disabled": false,
        "hidden": false
    },
    {
        "id": "d832f525.fbe818",
        "type": "ui_group",
        "z": "",
        "name": "Script",
        "tab": "890333f8.e584b",
        "order": 3,
        "disp": true,
        "width": 22,
        "collapse": false
    },
    {
        "id": "81473245.9274b8",
        "type": "ui_tab",
        "z": "",
        "name": "File Upload",
        "icon": "dashboard",
        "order": 12
    },
    {
        "id": "581bfac2.8d90bc",
        "type": "ui_group",
        "z": "",
        "name": "Show data",
        "tab": "890333f8.e584b",
        "order": 2,
        "disp": false,
        "width": 12,
        "collapse": false
    },
    {
        "id": "3609bd62.7b085a",
        "type": "mqtt-broker",
        "z": "",
        "name": "Photon_Messages",
        "broker": "broker.hivemq.com",
        "port": "1883",
        "clientid": "photon-Node",
        "usetls": false,
        "compatmode": false,
        "keepalive": "60",
        "cleansession": true,
        "birthTopic": "",
        "birthQos": "0",
        "birthPayload": "",
        "closeTopic": "",
        "closeQos": "0",
        "closePayload": "",
        "willTopic": "",
        "willQos": "0",
        "willPayload": ""
    },
    {
        "id": "172b1117.e88f3f",
        "type": "ui_spacer",
        "name": "spacer",
        "group": "d832f525.fbe818",
        "order": 1,
        "width": 5,
        "height": 1
    },
    {
        "id": "50f2ee96.c7dd8",
        "type": "ui_spacer",
        "name": "spacer",
        "group": "d832f525.fbe818",
        "order": 3,
        "width": 6,
        "height": 1
    },
    {
        "id": "1d42eab6.192aa5",
        "type": "ui_spacer",
        "name": "spacer",
        "group": "d832f525.fbe818",
        "order": 4,
        "width": 5,
        "height": 1
    },
    {
        "id": "6efdde47.2cfb9",
        "type": "ui_spacer",
        "name": "spacer",
        "group": "d832f525.fbe818",
        "order": 5,
        "width": 6,
        "height": 1
    },
    {
        "id": "c568316d.e9108",
        "type": "ui_spacer",
        "name": "spacer",
        "group": "d832f525.fbe818",
        "order": 6,
        "width": 5,
        "height": 1
    },
    {
        "id": "b32dc831.bdb7f8",
        "type": "ui_spacer",
        "name": "spacer",
        "group": "d832f525.fbe818",
        "order": 7,
        "width": 6,
        "height": 1
    },
    {
        "id": "df4c6152.33f9a",
        "type": "ui_spacer",
        "name": "spacer",
        "group": "d832f525.fbe818",
        "order": 8,
        "width": 5,
        "height": 1
    },
    {
        "id": "b40cdbb1.267cc8",
        "type": "ui_spacer",
        "name": "spacer",
        "group": "d832f525.fbe818",
        "order": 9,
        "width": 6,
        "height": 1
    },
    {
        "id": "7c03682f.0bcb18",
        "type": "ui_spacer",
        "name": "spacer",
        "group": "d832f525.fbe818",
        "order": 10,
        "width": 5,
        "height": 1
    },
    {
        "id": "95a0f8bb.c8bd78",
        "type": "ui_spacer",
        "name": "spacer",
        "group": "d832f525.fbe818",
        "order": 11,
        "width": 6,
        "height": 1
    },
    {
        "id": "17bad1c3.1e90be",
        "type": "sqlitedb",
        "z": "",
        "db": "/mnt/dav/Data/Prediction.db",
        "mode": "RWC"
    },
    {
        "id": "7ddf1d72.6fb1e4",
        "type": "sqlitedb",
        "z": "",
        "db": "/media/16 GB Volume/Prediction.db",
        "mode": "RWC"
    },
    {
        "id": "b2756df4.be01e",
        "type": "sqlite",
        "z": "ec06544c.0674a8",
        "mydb": "933b80c6.0add1",
        "sqlquery": "fixed",
        "sql": "select * from Demonstration LIMIT 20 OFFSET (SELECT COUNT(*) FROM Demonstration)-20;\n",
        "name": "MeasuredData",
        "x": 460,
        "y": 320,
        "wires": [
            [
                "d9df2d51.ca9c8",
                "45a2c425.10921c"
            ]
        ]
    },
    {
        "id": "d9df2d51.ca9c8",
        "type": "debug",
        "z": "ec06544c.0674a8",
        "name": "demo",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "x": 650,
        "y": 320,
        "wires": []
    },
    {
        "id": "756e7340.52ef7c",
        "type": "inject",
        "z": "ec06544c.0674a8",
        "name": "",
        "topic": "1",
        "payload": "",
        "payloadType": "date",
        "repeat": "30",
        "crontab": "",
        "once": true,
        "onceDelay": 0.1,
        "x": 140,
        "y": 1200,
        "wires": [
            [
                "cbf51229.d98f3",
                "b2756df4.be01e",
                "b1e43a74.a4b748",
                "c0304977.9e65a8",
                "7b23226f.6232ac"
            ]
        ]
    },
    {
        "id": "176b6fc1.c64c1",
        "type": "ui_chart",
        "z": "ec06544c.0674a8",
        "name": "",
        "group": "dfd14421.0131b8",
        "order": 1,
        "width": 0,
        "height": 0,
        "label": "Voltage phase 1 (V)",
        "chartType": "line",
        "legend": "false",
        "xformat": "HH:mm:ss",
        "interpolate": "linear",
        "nodata": "",
        "dot": false,
        "ymin": "",
        "ymax": "",
        "removeOlder": "10",
        "removeOlderPoints": "",
        "removeOlderUnit": "60",
        "cutout": 0,
        "useOneColor": false,
        "useUTC": true,
        "colors": [
            "#1f77b4",
            "#aec7e8",
            "#ff7f0e",
            "#2ca02c",
            "#98df8a",
            "#d62728",
            "#ff9896",
            "#9467bd",
            "#c5b0d5"
        ],
        "useOldStyle": false,
        "outputs": 1,
        "x": 1030,
        "y": 300,
        "wires": [
            []
        ]
    },
    {
        "id": "45a2c425.10921c",
        "type": "function",
        "z": "ec06544c.0674a8",
        "name": "Data format Demo",
        "func": " var offset = context.get(\"offset\")||3600;\n if (msg.topic == \"timezone\") {\n     offset =  msg.payload;\n     context.set(\"offset\", offset);\n     return null;\n }\n\n //  \n // Create a data variable   \n //  \n var i = 0;\n var series_V1 = [\"V1\"];  \n var labels_V1 = [\"Data Values\"];  \n var data_V1 = \"[[\";  \n   \n for (i=0; i < msg.payload.length; i++) {  \n   data_V1 += '{ \"x\":' + ((offset+parseInt(msg.payload[i].Time))*1000).toString() + ', \"y\":' + msg.payload[i].V1 + '}';  \n   if (i < (msg.payload.length - 1)) {  \n     data_V1 += \",\"  \n   } else {  \n     data_V1 += \"]]\"  \n   }  \n }  \n var jsondata_V1 = JSON.parse(data_V1);\n \n var msg_V1 = {\n     payload : [{\"series\": series_V1, \"data\": jsondata_V1, \"labels\": labels_V1}],\n     topic : \"V1\"\n }\n \n var series_V2 = [\"V2\"];  \n var labels_V2 = [\"Data Values\"];  \n var data_V2 = \"[[\";  \n   \n for (i=0; i < msg.payload.length; i++) {  \n   data_V2 += '{ \"x\":' + ((offset+parseInt(msg.payload[i].Time))*1000).toString() + ', \"y\":' + msg.payload[i].V2 + '}';  \n   if (i < (msg.payload.length - 1)) {  \n     data_V2 += \",\"  \n   } else {  \n     data_V2 += \"]]\"  \n   }  \n }  \n var jsondata_V2 = JSON.parse(data_V2);\n \n var msg_V2 = {\n     payload : [{\"series\": series_V2, \"data\": jsondata_V2, \"labels\": labels_V2}],\n     topic : \"V2\"\n }\n   \n var series_V3 = [\"V3\"];  \n var labels_V3 = [\"Data Values\"];  \n var data_V3 = \"[[\";  \n   \n for (i=0; i < msg.payload.length; i++) {  \n   data_V3 += '{ \"x\":' + ((offset+parseInt(msg.payload[i].Time))*1000).toString() + ', \"y\":' + msg.payload[i].V3 + '}';  \n   if (i < (msg.payload.length - 1)) {  \n     data_V3 += \",\"  \n   } else {  \n     data_V3 += \"]]\"  \n   }  \n }  \n var jsondata_V3 = JSON.parse(data_V3);\n \n var msg_V3 = {\n     payload : [{\"series\": series_V3, \"data\": jsondata_V3, \"labels\": labels_V3}],\n     topic : \"V3\"\n }\n \n var series_I1 = [\"I1\"];  \n var labels_I1 = [\"Data Values\"];  \n var data_I1 = \"[[\";  \n   \n for (i=0; i < msg.payload.length; i++) {  \n   data_I1 += '{ \"x\":' + ((offset+parseInt(msg.payload[i].Time))*1000).toString() + ', \"y\":' + msg.payload[i].I1 + '}';  \n   if (i < (msg.payload.length - 1)) {  \n     data_I1 += \",\"  \n   } else {  \n     data_I1 += \"]]\"  \n   }  \n }  \n var jsondata_I1 = JSON.parse(data_I1);\n \n var msg_I1 = {\n     payload : [{\"series\": series_I1, \"data\": jsondata_I1, \"labels\": labels_I1}],\n     topic : \"I1\"\n }\n \n var series_I2 = [\"I2\"];  \n var labels_I2 = [\"Data Values\"];  \n var data_I2 = \"[[\";  \n   \n for (i=0; i < msg.payload.length; i++) {  \n   data_I2 += '{ \"x\":' + ((offset+parseInt(msg.payload[i].Time))*1000).toString() + ', \"y\":' + msg.payload[i].I2 + '}';  \n   if (i < (msg.payload.length - 1)) {  \n     data_I2 += \",\"  \n   } else {  \n     data_I2 += \"]]\"  \n   }  \n }  \n var jsondata_I2 = JSON.parse(data_I2);\n \n var msg_I2 = {\n     payload : [{\"series\": series_I2, \"data\": jsondata_I2, \"labels\": labels_I2}],\n     topic : \"I2\"\n }\n \n var series_I3= [\"I3\"];  \n var labels_I3 = [\"Data Values\"];  \n var data_I3 = \"[[\";  \n   \n for (i=0; i < msg.payload.length; i++) {  \n   data_I3 += '{ \"x\":' + ((offset+parseInt(msg.payload[i].Time))*1000).toString() + ', \"y\":' + msg.payload[i].I3 + '}';  \n   if (i < (msg.payload.length - 1)) {  \n     data_I3 += \",\"  \n   } else {  \n     data_I3 += \"]]\"  \n   }  \n }  \n var jsondata_I3 = JSON.parse(data_I3);\n \n var msg_I3 = {\n     payload : [{\"series\": series_I3, \"data\": jsondata_I3, \"labels\": labels_I3}],\n     topic : \"I3\"\n }\n \n var series_P1 = [\"P1\"];  \n var labels_P1 = [\"Data Values\"];  \n var data_P1 = \"[[\";  \n   \n for (i=0; i < msg.payload.length; i++) {  \n   data_P1 += '{ \"x\":' + ((offset+parseInt(msg.payload[i].Time))*1000).toString() + ', \"y\":' + msg.payload[i].P1 + '}';  \n   if (i < (msg.payload.length - 1)) {  \n     data_P1 += \",\"  \n   } else {  \n     data_P1 += \"]]\"  \n   }  \n }  \n var jsondata_P1 = JSON.parse(data_P1);\n \n var msg_P1 = {\n     payload : [{\"series\": series_P1, \"data\": jsondata_P1, \"labels\": labels_P1}],\n     topic : \"P1\"\n }\n \n var series_P2 = [\"P2\"];  \n var labels_P2 = [\"Data Values\"];  \n var data_P2 = \"[[\";  \n   \n for (i=0; i < msg.payload.length; i++) {  \n   data_P2 += '{ \"x\":' + ((offset+parseInt(msg.payload[i].Time))*1000).toString() + ', \"y\":' + msg.payload[i].P2 + '}';  \n   if (i < (msg.payload.length - 1)) {  \n     data_P2 += \",\"  \n   } else {  \n     data_P2 += \"]]\"  \n   }  \n }  \n var jsondata_P2 = JSON.parse(data_P2);\n \n var msg_P2 = {\n     payload : [{\"series\": series_P2, \"data\": jsondata_P2, \"labels\": labels_P2}],\n     topic : \"P2\"\n }\n \n var series_P3 = [\"P3\"];  \n var labels_P3 = [\"Data Values\"];  \n var data_P3 = \"[[\";  \n   \n for (i=0; i < msg.payload.length; i++) {  \n   data_P3 += '{ \"x\":' + ((offset+parseInt(msg.payload[i].Time))*1000).toString() + ', \"y\":' + msg.payload[i].P3 + '}';  \n   if (i < (msg.payload.length - 1)) {  \n     data_P3 += \",\"  \n   } else {  \n     data_P3 += \"]]\"  \n   }  \n }  \n var jsondata_P3 = JSON.parse(data_P3);\n \n var msg_P3 = {\n     payload : [{\"series\": series_P3, \"data\": jsondata_P3, \"labels\": labels_P3}],\n     topic : \"P3\"\n }\n \n //var series_F = [\"F\"];  \n //var labels_F = [\"Data Values\"];  \n \n //var data_F = (msg.payload[(msg.payload).length]).F;\n //var data_F = '50';\n //var jsondata_F = JSON.parse(data_F);\n \n var msg_F = {payload: msg.payload[msg.payload.length - 1].F};\n \n return [msg_V1, msg_V2, msg_V3, msg_I1, msg_I2, msg_I3, msg_P1, msg_P2, msg_P3, msg_F];",
        "outputs": 10,
        "noerr": 0,
        "x": 690,
        "y": 460,
        "wires": [
            [
                "176b6fc1.c64c1"
            ],
            [
                "e65106f7.0fab48"
            ],
            [
                "2fc3b069.5f4fe"
            ],
            [
                "ead92ea0.e6d2e"
            ],
            [
                "6fba8283.13e14c"
            ],
            [
                "d7654d65.05271"
            ],
            [
                "a2499430.03b828"
            ],
            [
                "52aa455e.ad4bec"
            ],
            [
                "943162b4.9dec6"
            ],
            [
                "c3f1f4ad.0279d8"
            ]
        ]
    },
    {
        "id": "e65106f7.0fab48",
        "type": "ui_chart",
        "z": "ec06544c.0674a8",
        "name": "",
        "group": "dfd14421.0131b8",
        "order": 2,
        "width": 0,
        "height": 0,
        "label": "Voltage phase 2 (V)",
        "chartType": "line",
        "legend": "false",
        "xformat": "HH:mm:ss",
        "interpolate": "linear",
        "nodata": "",
        "dot": false,
        "ymin": "",
        "ymax": "",
        "removeOlder": "10",
        "removeOlderPoints": "",
        "removeOlderUnit": "60",
        "cutout": 0,
        "useOneColor": false,
        "useUTC": true,
        "colors": [
            "#1f77b4",
            "#aec7e8",
            "#ff7f0e",
            "#2ca02c",
            "#98df8a",
            "#d62728",
            "#ff9896",
            "#9467bd",
            "#c5b0d5"
        ],
        "useOldStyle": false,
        "outputs": 1,
        "x": 1030,
        "y": 340,
        "wires": [
            []
        ]
    },
    {
        "id": "2fc3b069.5f4fe",
        "type": "ui_chart",
        "z": "ec06544c.0674a8",
        "name": "",
        "group": "dfd14421.0131b8",
        "order": 3,
        "width": 0,
        "height": 0,
        "label": "Voltage phase 3 (V)",
        "chartType": "line",
        "legend": "false",
        "xformat": "HH:mm:ss",
        "interpolate": "linear",
        "nodata": "",
        "dot": false,
        "ymin": "",
        "ymax": "",
        "removeOlder": "10",
        "removeOlderPoints": "",
        "removeOlderUnit": "60",
        "cutout": 0,
        "useOneColor": false,
        "useUTC": true,
        "colors": [
            "#1f77b4",
            "#aec7e8",
            "#ff7f0e",
            "#2ca02c",
            "#98df8a",
            "#d62728",
            "#ff9896",
            "#9467bd",
            "#c5b0d5"
        ],
        "useOldStyle": false,
        "outputs": 1,
        "x": 1030,
        "y": 380,
        "wires": [
            []
        ]
    },
    {
        "id": "ead92ea0.e6d2e",
        "type": "ui_chart",
        "z": "ec06544c.0674a8",
        "name": "",
        "group": "e476f0d6.52ab",
        "order": 1,
        "width": 0,
        "height": 0,
        "label": "Current phase 1 (A)",
        "chartType": "line",
        "legend": "false",
        "xformat": "HH:mm:ss",
        "interpolate": "linear",
        "nodata": "",
        "dot": false,
        "ymin": "",
        "ymax": "",
        "removeOlder": "10",
        "removeOlderPoints": "",
        "removeOlderUnit": "60",
        "cutout": 0,
        "useOneColor": false,
        "useUTC": true,
        "colors": [
            "#1f77b4",
            "#aec7e8",
            "#ff7f0e",
            "#2ca02c",
            "#98df8a",
            "#d62728",
            "#ff9896",
            "#9467bd",
            "#c5b0d5"
        ],
        "useOldStyle": false,
        "outputs": 1,
        "x": 1030,
        "y": 420,
        "wires": [
            []
        ]
    },
    {
        "id": "6fba8283.13e14c",
        "type": "ui_chart",
        "z": "ec06544c.0674a8",
        "name": "",
        "group": "e476f0d6.52ab",
        "order": 2,
        "width": 0,
        "height": 0,
        "label": "Current phase 2 (A)",
        "chartType": "line",
        "legend": "false",
        "xformat": "HH:mm:ss",
        "interpolate": "linear",
        "nodata": "",
        "dot": false,
        "ymin": "",
        "ymax": "",
        "removeOlder": "10",
        "removeOlderPoints": "",
        "removeOlderUnit": "60",
        "cutout": 0,
        "useOneColor": false,
        "useUTC": true,
        "colors": [
            "#1f77b4",
            "#aec7e8",
            "#ff7f0e",
            "#2ca02c",
            "#98df8a",
            "#d62728",
            "#ff9896",
            "#9467bd",
            "#c5b0d5"
        ],
        "useOldStyle": false,
        "outputs": 1,
        "x": 1030,
        "y": 460,
        "wires": [
            []
        ]
    },
    {
        "id": "d7654d65.05271",
        "type": "ui_chart",
        "z": "ec06544c.0674a8",
        "name": "",
        "group": "e476f0d6.52ab",
        "order": 3,
        "width": 0,
        "height": 0,
        "label": "Current phase 3 (A)",
        "chartType": "line",
        "legend": "false",
        "xformat": "HH:mm:ss",
        "interpolate": "linear",
        "nodata": "",
        "dot": false,
        "ymin": "",
        "ymax": "",
        "removeOlder": "10",
        "removeOlderPoints": "",
        "removeOlderUnit": "60",
        "cutout": 0,
        "useOneColor": false,
        "useUTC": true,
        "colors": [
            "#1f77b4",
            "#aec7e8",
            "#ff7f0e",
            "#2ca02c",
            "#98df8a",
            "#d62728",
            "#ff9896",
            "#9467bd",
            "#c5b0d5"
        ],
        "useOldStyle": false,
        "outputs": 1,
        "x": 1030,
        "y": 500,
        "wires": [
            []
        ]
    },
    {
        "id": "a2499430.03b828",
        "type": "ui_chart",
        "z": "ec06544c.0674a8",
        "name": "",
        "group": "9268bddf.ab4da",
        "order": 1,
        "width": 0,
        "height": 0,
        "label": "Power phase 1 (W)",
        "chartType": "line",
        "legend": "false",
        "xformat": "HH:mm:ss",
        "interpolate": "linear",
        "nodata": "",
        "dot": false,
        "ymin": "",
        "ymax": "",
        "removeOlder": "10",
        "removeOlderPoints": "",
        "removeOlderUnit": "60",
        "cutout": 0,
        "useOneColor": false,
        "useUTC": true,
        "colors": [
            "#1f77b4",
            "#aec7e8",
            "#ff7f0e",
            "#2ca02c",
            "#98df8a",
            "#d62728",
            "#ff9896",
            "#9467bd",
            "#c5b0d5"
        ],
        "useOldStyle": false,
        "outputs": 1,
        "x": 1030,
        "y": 540,
        "wires": [
            []
        ]
    },
    {
        "id": "943162b4.9dec6",
        "type": "ui_chart",
        "z": "ec06544c.0674a8",
        "name": "",
        "group": "9268bddf.ab4da",
        "order": 3,
        "width": 0,
        "height": 0,
        "label": "Power phase 3 (W)",
        "chartType": "line",
        "legend": "false",
        "xformat": "HH:mm:ss",
        "interpolate": "linear",
        "nodata": "",
        "dot": false,
        "ymin": "",
        "ymax": "",
        "removeOlder": "10",
        "removeOlderPoints": "",
        "removeOlderUnit": "60",
        "cutout": 0,
        "useOneColor": false,
        "useUTC": true,
        "colors": [
            "#1f77b4",
            "#aec7e8",
            "#ff7f0e",
            "#2ca02c",
            "#98df8a",
            "#d62728",
            "#ff9896",
            "#9467bd",
            "#c5b0d5"
        ],
        "useOldStyle": false,
        "outputs": 1,
        "x": 1030,
        "y": 620,
        "wires": [
            []
        ]
    },
    {
        "id": "52aa455e.ad4bec",
        "type": "ui_chart",
        "z": "ec06544c.0674a8",
        "name": "",
        "group": "9268bddf.ab4da",
        "order": 2,
        "width": 0,
        "height": 0,
        "label": "Power phase 2 (W)",
        "chartType": "line",
        "legend": "false",
        "xformat": "HH:mm:ss",
        "interpolate": "linear",
        "nodata": "",
        "dot": false,
        "ymin": "",
        "ymax": "",
        "removeOlder": "10",
        "removeOlderPoints": "",
        "removeOlderUnit": "60",
        "cutout": 0,
        "useOneColor": false,
        "useUTC": true,
        "colors": [
            "#1f77b4",
            "#aec7e8",
            "#ff7f0e",
            "#2ca02c",
            "#98df8a",
            "#d62728",
            "#ff9896",
            "#9467bd",
            "#c5b0d5"
        ],
        "useOldStyle": false,
        "outputs": 1,
        "x": 1030,
        "y": 580,
        "wires": [
            []
        ]
    },
    {
        "id": "b1e43a74.a4b748",
        "type": "sqlite",
        "z": "ec06544c.0674a8",
        "mydb": "933b80c6.0add1",
        "sqlquery": "fixed",
        "sql": "select * from Reserve LIMIT 20 OFFSET (SELECT COUNT(*) FROM Reserve)-20;\n",
        "name": "MeasuredData",
        "x": 460,
        "y": 760,
        "wires": [
            [
                "aabb84ae.aa8d08",
                "fafbbf0c.a974f"
            ]
        ]
    },
    {
        "id": "aabb84ae.aa8d08",
        "type": "debug",
        "z": "ec06544c.0674a8",
        "name": "reserve",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "x": 660,
        "y": 760,
        "wires": []
    },
    {
        "id": "d6123d9a.c50b4",
        "type": "ui_chart",
        "z": "ec06544c.0674a8",
        "name": "",
        "group": "d79c6951.4f1ba8",
        "order": 1,
        "width": 0,
        "height": 0,
        "label": "Voltage phase 1 (V)",
        "chartType": "line",
        "legend": "false",
        "xformat": "HH:mm:ss",
        "interpolate": "linear",
        "nodata": "",
        "dot": false,
        "ymin": "",
        "ymax": "",
        "removeOlder": "10",
        "removeOlderPoints": "",
        "removeOlderUnit": "60",
        "cutout": 0,
        "useOneColor": false,
        "useUTC": true,
        "colors": [
            "#1f77b4",
            "#aec7e8",
            "#ff7f0e",
            "#2ca02c",
            "#98df8a",
            "#d62728",
            "#ff9896",
            "#9467bd",
            "#c5b0d5"
        ],
        "useOldStyle": false,
        "outputs": 1,
        "x": 1030,
        "y": 740,
        "wires": [
            []
        ]
    },
    {
        "id": "fafbbf0c.a974f",
        "type": "function",
        "z": "ec06544c.0674a8",
        "name": "Data format Reserve",
        "func": " var offset = context.get(\"offset\")||3600;\n if (msg.topic == \"timezone\") {\n     offset =  msg.payload;\n     context.set(\"offset\", offset);\n     return null;\n }\n\n //  \n // Create a data variable   \n //  \n var i = 0;\n var series_V1 = [\"V1\"];  \n var labels_V1 = [\"Data Values\"];  \n var data_V1 = \"[[\";  \n   \n for (i=0; i < msg.payload.length; i++) {  \n   data_V1 += '{ \"x\":' + ((offset+parseInt(msg.payload[i].Time))*1000).toString() + ', \"y\":' + msg.payload[i].V1 + '}';  \n   if (i < (msg.payload.length - 1)) {  \n     data_V1 += \",\"  \n   } else {  \n     data_V1 += \"]]\"  \n   }  \n }  \n var jsondata_V1 = JSON.parse(data_V1);\n \n var msg_V1 = {\n     payload : [{\"series\": series_V1, \"data\": jsondata_V1, \"labels\": labels_V1}],\n     topic : \"V1\"\n }\n \n var series_V2 = [\"V2\"];  \n var labels_V2 = [\"Data Values\"];  \n var data_V2 = \"[[\";  \n   \n for (i=0; i < msg.payload.length; i++) {  \n   data_V2 += '{ \"x\":' + ((offset+parseInt(msg.payload[i].Time))*1000).toString() + ', \"y\":' + msg.payload[i].V2 + '}';  \n   if (i < (msg.payload.length - 1)) {  \n     data_V2 += \",\"  \n   } else {  \n     data_V2 += \"]]\"  \n   }  \n }  \n var jsondata_V2 = JSON.parse(data_V2);\n \n var msg_V2 = {\n     payload : [{\"series\": series_V2, \"data\": jsondata_V2, \"labels\": labels_V2}],\n     topic : \"V2\"\n }\n   \n var series_V3 = [\"V3\"];  \n var labels_V3 = [\"Data Values\"];  \n var data_V3 = \"[[\";  \n   \n for (i=0; i < msg.payload.length; i++) {  \n   data_V3 += '{ \"x\":' + ((offset+parseInt(msg.payload[i].Time))*1000).toString() + ', \"y\":' + msg.payload[i].V3 + '}';  \n   if (i < (msg.payload.length - 1)) {  \n     data_V3 += \",\"  \n   } else {  \n     data_V3 += \"]]\"  \n   }  \n }  \n var jsondata_V3 = JSON.parse(data_V3);\n \n var msg_V3 = {\n     payload : [{\"series\": series_V3, \"data\": jsondata_V3, \"labels\": labels_V3}],\n     topic : \"V3\"\n }\n \n var series_I1 = [\"I1\"];  \n var labels_I1 = [\"Data Values\"];  \n var data_I1 = \"[[\";  \n   \n for (i=0; i < msg.payload.length; i++) {  \n   data_I1 += '{ \"x\":' + ((offset+parseInt(msg.payload[i].Time))*1000).toString() + ', \"y\":' + msg.payload[i].I1 + '}';  \n   if (i < (msg.payload.length - 1)) {  \n     data_I1 += \",\"  \n   } else {  \n     data_I1 += \"]]\"  \n   }  \n }  \n var jsondata_I1 = JSON.parse(data_I1);\n \n var msg_I1 = {\n     payload : [{\"series\": series_I1, \"data\": jsondata_I1, \"labels\": labels_I1}],\n     topic : \"I1\"\n }\n \n var series_I2 = [\"I2\"];  \n var labels_I2 = [\"Data Values\"];  \n var data_I2 = \"[[\";  \n   \n for (i=0; i < msg.payload.length; i++) {  \n   data_I2 += '{ \"x\":' + ((offset+parseInt(msg.payload[i].Time))*1000).toString() + ', \"y\":' + msg.payload[i].I2 + '}';  \n   if (i < (msg.payload.length - 1)) {  \n     data_I2 += \",\"  \n   } else {  \n     data_I2 += \"]]\"  \n   }  \n }  \n var jsondata_I2 = JSON.parse(data_I2);\n \n var msg_I2 = {\n     payload : [{\"series\": series_I2, \"data\": jsondata_I2, \"labels\": labels_I2}],\n     topic : \"I2\"\n }\n \n var series_I3= [\"I3\"];  \n var labels_I3 = [\"Data Values\"];  \n var data_I3 = \"[[\";  \n   \n for (i=0; i < msg.payload.length; i++) {  \n   data_I3 += '{ \"x\":' + ((offset+parseInt(msg.payload[i].Time))*1000).toString() + ', \"y\":' + msg.payload[i].I3 + '}';  \n   if (i < (msg.payload.length - 1)) {  \n     data_I3 += \",\"  \n   } else {  \n     data_I3 += \"]]\"  \n   }  \n }  \n var jsondata_I3 = JSON.parse(data_I3);\n \n var msg_I3 = {\n     payload : [{\"series\": series_I3, \"data\": jsondata_I3, \"labels\": labels_I3}],\n     topic : \"I3\"\n }\n \n var series_P1 = [\"P1\"];  \n var labels_P1 = [\"Data Values\"];  \n var data_P1 = \"[[\";  \n   \n for (i=0; i < msg.payload.length; i++) {  \n   data_P1 += '{ \"x\":' + ((offset+parseInt(msg.payload[i].Time))*1000).toString() + ', \"y\":' + msg.payload[i].P1 + '}';  \n   if (i < (msg.payload.length - 1)) {  \n     data_P1 += \",\"  \n   } else {  \n     data_P1 += \"]]\"  \n   }  \n }  \n var jsondata_P1 = JSON.parse(data_P1);\n \n var msg_P1 = {\n     payload : [{\"series\": series_P1, \"data\": jsondata_P1, \"labels\": labels_P1}],\n     topic : \"P1\"\n }\n \n var series_P2 = [\"P2\"];  \n var labels_P2 = [\"Data Values\"];  \n var data_P2 = \"[[\";  \n   \n for (i=0; i < msg.payload.length; i++) {  \n   data_P2 += '{ \"x\":' + ((offset+parseInt(msg.payload[i].Time))*1000).toString() + ', \"y\":' + msg.payload[i].P2 + '}';  \n   if (i < (msg.payload.length - 1)) {  \n     data_P2 += \",\"  \n   } else {  \n     data_P2 += \"]]\"  \n   }  \n }  \n var jsondata_P2 = JSON.parse(data_P2);\n \n var msg_P2 = {\n     payload : [{\"series\": series_P2, \"data\": jsondata_P2, \"labels\": labels_P2}],\n     topic : \"P2\"\n }\n \n var series_P3 = [\"P3\"];  \n var labels_P3 = [\"Data Values\"];  \n var data_P3 = \"[[\";  \n   \n for (i=0; i < msg.payload.length; i++) {  \n   data_P3 += '{ \"x\":' + ((offset+parseInt(msg.payload[i].Time))*1000).toString() + ', \"y\":' + msg.payload[i].P3 + '}';  \n   if (i < (msg.payload.length - 1)) {  \n     data_P3 += \",\"  \n   } else {  \n     data_P3 += \"]]\"  \n   }  \n }  \n var jsondata_P3 = JSON.parse(data_P3);\n \n var msg_P3 = {\n     payload : [{\"series\": series_P3, \"data\": jsondata_P3, \"labels\": labels_P3}],\n     topic : \"P3\"\n }\n \n //var series_F = [\"F\"];  \n //var labels_F = [\"Data Values\"];  \n \n //var data_F = (msg.payload[(msg.payload).length]).F;\n //var data_F = '50';\n //var jsondata_F = JSON.parse(data_F);\n \n var msg_F = {payload: msg.payload[msg.payload.length - 1].F};\n \n return [msg_V1, msg_V2, msg_V3, msg_I1, msg_I2, msg_I3, msg_P1, msg_P2, msg_P3, msg_F];",
        "outputs": 10,
        "noerr": 0,
        "x": 700,
        "y": 900,
        "wires": [
            [
                "d6123d9a.c50b4"
            ],
            [
                "751ae2b4.71d1ec"
            ],
            [
                "c7fa5c90.6e932"
            ],
            [
                "d7ec84ca.40dac8"
            ],
            [
                "4c3ffcb9.0619b4"
            ],
            [
                "3598275d.608d78"
            ],
            [
                "df28134d.40c0d"
            ],
            [
                "cf5735d9.b4c358"
            ],
            [
                "fcbd3a2c.1e3968"
            ],
            [
                "cb063c4b.31f4f"
            ]
        ]
    },
    {
        "id": "751ae2b4.71d1ec",
        "type": "ui_chart",
        "z": "ec06544c.0674a8",
        "name": "",
        "group": "d79c6951.4f1ba8",
        "order": 2,
        "width": 0,
        "height": 0,
        "label": "Voltage phase 2 (V)",
        "chartType": "line",
        "legend": "false",
        "xformat": "HH:mm:ss",
        "interpolate": "linear",
        "nodata": "",
        "dot": false,
        "ymin": "",
        "ymax": "",
        "removeOlder": "10",
        "removeOlderPoints": "",
        "removeOlderUnit": "60",
        "cutout": 0,
        "useOneColor": false,
        "useUTC": true,
        "colors": [
            "#1f77b4",
            "#aec7e8",
            "#ff7f0e",
            "#2ca02c",
            "#98df8a",
            "#d62728",
            "#ff9896",
            "#9467bd",
            "#c5b0d5"
        ],
        "useOldStyle": false,
        "outputs": 1,
        "x": 1030,
        "y": 780,
        "wires": [
            []
        ]
    },
    {
        "id": "c7fa5c90.6e932",
        "type": "ui_chart",
        "z": "ec06544c.0674a8",
        "name": "",
        "group": "d79c6951.4f1ba8",
        "order": 3,
        "width": 0,
        "height": 0,
        "label": "Voltage phase 3 (V)",
        "chartType": "line",
        "legend": "false",
        "xformat": "HH:mm:ss",
        "interpolate": "linear",
        "nodata": "",
        "dot": false,
        "ymin": "",
        "ymax": "",
        "removeOlder": "10",
        "removeOlderPoints": "",
        "removeOlderUnit": "60",
        "cutout": 0,
        "useOneColor": false,
        "useUTC": true,
        "colors": [
            "#1f77b4",
            "#aec7e8",
            "#ff7f0e",
            "#2ca02c",
            "#98df8a",
            "#d62728",
            "#ff9896",
            "#9467bd",
            "#c5b0d5"
        ],
        "useOldStyle": false,
        "outputs": 1,
        "x": 1030,
        "y": 820,
        "wires": [
            []
        ]
    },
    {
        "id": "d7ec84ca.40dac8",
        "type": "ui_chart",
        "z": "ec06544c.0674a8",
        "name": "",
        "group": "596d8da.fe2e074",
        "order": 1,
        "width": 0,
        "height": 0,
        "label": "Current phase 1 (A)",
        "chartType": "line",
        "legend": "false",
        "xformat": "HH:mm:ss",
        "interpolate": "linear",
        "nodata": "",
        "dot": false,
        "ymin": "",
        "ymax": "",
        "removeOlder": "10",
        "removeOlderPoints": "",
        "removeOlderUnit": "60",
        "cutout": 0,
        "useOneColor": false,
        "useUTC": true,
        "colors": [
            "#1f77b4",
            "#aec7e8",
            "#ff7f0e",
            "#2ca02c",
            "#98df8a",
            "#d62728",
            "#ff9896",
            "#9467bd",
            "#c5b0d5"
        ],
        "useOldStyle": false,
        "outputs": 1,
        "x": 1030,
        "y": 860,
        "wires": [
            []
        ]
    },
    {
        "id": "4c3ffcb9.0619b4",
        "type": "ui_chart",
        "z": "ec06544c.0674a8",
        "name": "",
        "group": "596d8da.fe2e074",
        "order": 2,
        "width": 0,
        "height": 0,
        "label": "Current phase 2 (A)",
        "chartType": "line",
        "legend": "false",
        "xformat": "HH:mm:ss",
        "interpolate": "linear",
        "nodata": "",
        "dot": false,
        "ymin": "",
        "ymax": "",
        "removeOlder": "10",
        "removeOlderPoints": "",
        "removeOlderUnit": "60",
        "cutout": 0,
        "useOneColor": false,
        "useUTC": true,
        "colors": [
            "#1f77b4",
            "#aec7e8",
            "#ff7f0e",
            "#2ca02c",
            "#98df8a",
            "#d62728",
            "#ff9896",
            "#9467bd",
            "#c5b0d5"
        ],
        "useOldStyle": false,
        "outputs": 1,
        "x": 1030,
        "y": 900,
        "wires": [
            []
        ]
    },
    {
        "id": "3598275d.608d78",
        "type": "ui_chart",
        "z": "ec06544c.0674a8",
        "name": "",
        "group": "596d8da.fe2e074",
        "order": 3,
        "width": 0,
        "height": 0,
        "label": "Current phase 3 (A)",
        "chartType": "line",
        "legend": "false",
        "xformat": "HH:mm:ss",
        "interpolate": "linear",
        "nodata": "",
        "dot": false,
        "ymin": "",
        "ymax": "",
        "removeOlder": "10",
        "removeOlderPoints": "",
        "removeOlderUnit": "60",
        "cutout": 0,
        "useOneColor": false,
        "useUTC": true,
        "colors": [
            "#1f77b4",
            "#aec7e8",
            "#ff7f0e",
            "#2ca02c",
            "#98df8a",
            "#d62728",
            "#ff9896",
            "#9467bd",
            "#c5b0d5"
        ],
        "useOldStyle": false,
        "outputs": 1,
        "x": 1030,
        "y": 940,
        "wires": [
            []
        ]
    },
    {
        "id": "df28134d.40c0d",
        "type": "ui_chart",
        "z": "ec06544c.0674a8",
        "name": "",
        "group": "c36d1e23.0c203",
        "order": 1,
        "width": 0,
        "height": 0,
        "label": "Power phase 1 (W)",
        "chartType": "line",
        "legend": "false",
        "xformat": "HH:mm:ss",
        "interpolate": "linear",
        "nodata": "",
        "dot": false,
        "ymin": "",
        "ymax": "",
        "removeOlder": "10",
        "removeOlderPoints": "",
        "removeOlderUnit": "60",
        "cutout": 0,
        "useOneColor": false,
        "useUTC": true,
        "colors": [
            "#1f77b4",
            "#aec7e8",
            "#ff7f0e",
            "#2ca02c",
            "#98df8a",
            "#d62728",
            "#ff9896",
            "#9467bd",
            "#c5b0d5"
        ],
        "useOldStyle": false,
        "outputs": 1,
        "x": 1030,
        "y": 980,
        "wires": [
            []
        ]
    },
    {
        "id": "fcbd3a2c.1e3968",
        "type": "ui_chart",
        "z": "ec06544c.0674a8",
        "name": "",
        "group": "c36d1e23.0c203",
        "order": 3,
        "width": 0,
        "height": 0,
        "label": "Power phase 3 (W)",
        "chartType": "line",
        "legend": "false",
        "xformat": "HH:mm:ss",
        "interpolate": "linear",
        "nodata": "",
        "dot": false,
        "ymin": "",
        "ymax": "",
        "removeOlder": "10",
        "removeOlderPoints": "",
        "removeOlderUnit": "60",
        "cutout": 0,
        "useOneColor": false,
        "useUTC": true,
        "colors": [
            "#1f77b4",
            "#aec7e8",
            "#ff7f0e",
            "#2ca02c",
            "#98df8a",
            "#d62728",
            "#ff9896",
            "#9467bd",
            "#c5b0d5"
        ],
        "useOldStyle": false,
        "outputs": 1,
        "x": 1030,
        "y": 1060,
        "wires": [
            []
        ]
    },
    {
        "id": "cf5735d9.b4c358",
        "type": "ui_chart",
        "z": "ec06544c.0674a8",
        "name": "",
        "group": "c36d1e23.0c203",
        "order": 2,
        "width": 0,
        "height": 0,
        "label": "Power phase 2 (W)",
        "chartType": "line",
        "legend": "false",
        "xformat": "HH:mm:ss",
        "interpolate": "linear",
        "nodata": "",
        "dot": false,
        "ymin": "",
        "ymax": "",
        "removeOlder": "10",
        "removeOlderPoints": "",
        "removeOlderUnit": "60",
        "cutout": 0,
        "useOneColor": false,
        "useUTC": true,
        "colors": [
            "#1f77b4",
            "#aec7e8",
            "#ff7f0e",
            "#2ca02c",
            "#98df8a",
            "#d62728",
            "#ff9896",
            "#9467bd",
            "#c5b0d5"
        ],
        "useOldStyle": false,
        "outputs": 1,
        "x": 1030,
        "y": 1020,
        "wires": [
            []
        ]
    },
    {
        "id": "cbf51229.d98f3",
        "type": "sqlite",
        "z": "ec06544c.0674a8",
        "mydb": "933b80c6.0add1",
        "sqlquery": "fixed",
        "sql": "select * from PV LIMIT 20 OFFSET (SELECT COUNT(*) FROM PV)-20;\n",
        "name": "MeasuredData",
        "x": 460,
        "y": 1200,
        "wires": [
            [
                "cef82e2b.2cbf3",
                "9d353fd6.57955"
            ]
        ]
    },
    {
        "id": "cef82e2b.2cbf3",
        "type": "debug",
        "z": "ec06544c.0674a8",
        "name": "pv",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "x": 650,
        "y": 1200,
        "wires": []
    },
    {
        "id": "b9374f78.bbac4",
        "type": "ui_chart",
        "z": "ec06544c.0674a8",
        "name": "",
        "group": "8bcd15fb.5af798",
        "order": 1,
        "width": 0,
        "height": 0,
        "label": "Voltage phase 1 (V)",
        "chartType": "line",
        "legend": "false",
        "xformat": "HH:mm:ss",
        "interpolate": "linear",
        "nodata": "",
        "dot": false,
        "ymin": "",
        "ymax": "",
        "removeOlder": "10",
        "removeOlderPoints": "",
        "removeOlderUnit": "60",
        "cutout": 0,
        "useOneColor": false,
        "useUTC": true,
        "colors": [
            "#1f77b4",
            "#aec7e8",
            "#ff7f0e",
            "#2ca02c",
            "#98df8a",
            "#d62728",
            "#ff9896",
            "#9467bd",
            "#c5b0d5"
        ],
        "useOldStyle": false,
        "outputs": 1,
        "x": 1030,
        "y": 1180,
        "wires": [
            []
        ]
    },
    {
        "id": "9d353fd6.57955",
        "type": "function",
        "z": "ec06544c.0674a8",
        "name": "Data format PV",
        "func": " var offset = context.get(\"offset\")||3600;\n if (msg.topic == \"timezone\") {\n     offset =  msg.payload;\n     context.set(\"offset\", offset);\n     return null;\n }\n\n //  \n // Create a data variable   \n //  \n var i = 0;\n var series_V1 = [\"V1\"];  \n var labels_V1 = [\"Data Values\"];  \n var data_V1 = \"[[\";  \n   \n for (i=0; i < msg.payload.length; i++) {  \n   data_V1 += '{ \"x\":' + ((offset+parseInt(msg.payload[i].Time))*1000).toString() + ', \"y\":' + msg.payload[i].V1 + '}';  \n   if (i < (msg.payload.length - 1)) {  \n     data_V1 += \",\"  \n   } else {  \n     data_V1 += \"]]\"  \n   }  \n }  \n var jsondata_V1 = JSON.parse(data_V1);\n \n var msg_V1 = {\n     payload : [{\"series\": series_V1, \"data\": jsondata_V1, \"labels\": labels_V1}],\n     topic : \"V1\"\n }\n \n var series_V2 = [\"V2\"];  \n var labels_V2 = [\"Data Values\"];  \n var data_V2 = \"[[\";  \n   \n for (i=0; i < msg.payload.length; i++) {  \n   data_V2 += '{ \"x\":' + ((offset+parseInt(msg.payload[i].Time))*1000).toString() + ', \"y\":' + msg.payload[i].V2 + '}';  \n   if (i < (msg.payload.length - 1)) {  \n     data_V2 += \",\"  \n   } else {  \n     data_V2 += \"]]\"  \n   }  \n }  \n var jsondata_V2 = JSON.parse(data_V2);\n \n var msg_V2 = {\n     payload : [{\"series\": series_V2, \"data\": jsondata_V2, \"labels\": labels_V2}],\n     topic : \"V2\"\n }\n   \n var series_V3 = [\"V3\"];  \n var labels_V3 = [\"Data Values\"];  \n var data_V3 = \"[[\";  \n   \n for (i=0; i < msg.payload.length; i++) {  \n   data_V3 += '{ \"x\":' + ((offset+parseInt(msg.payload[i].Time))*1000).toString() + ', \"y\":' + msg.payload[i].V3 + '}';  \n   if (i < (msg.payload.length - 1)) {  \n     data_V3 += \",\"  \n   } else {  \n     data_V3 += \"]]\"  \n   }  \n }  \n var jsondata_V3 = JSON.parse(data_V3);\n \n var msg_V3 = {\n     payload : [{\"series\": series_V3, \"data\": jsondata_V3, \"labels\": labels_V3}],\n     topic : \"V3\"\n }\n \n var series_I1 = [\"I1\"];  \n var labels_I1 = [\"Data Values\"];  \n var data_I1 = \"[[\";  \n   \n for (i=0; i < msg.payload.length; i++) {  \n   data_I1 += '{ \"x\":' + ((offset+parseInt(msg.payload[i].Time))*1000).toString() + ', \"y\":' + msg.payload[i].I1 + '}';  \n   if (i < (msg.payload.length - 1)) {  \n     data_I1 += \",\"  \n   } else {  \n     data_I1 += \"]]\"  \n   }  \n }  \n var jsondata_I1 = JSON.parse(data_I1);\n \n var msg_I1 = {\n     payload : [{\"series\": series_I1, \"data\": jsondata_I1, \"labels\": labels_I1}],\n     topic : \"I1\"\n }\n \n var series_I2 = [\"I2\"];  \n var labels_I2 = [\"Data Values\"];  \n var data_I2 = \"[[\";  \n   \n for (i=0; i < msg.payload.length; i++) {  \n   data_I2 += '{ \"x\":' + ((offset+parseInt(msg.payload[i].Time))*1000).toString() + ', \"y\":' + msg.payload[i].I2 + '}';  \n   if (i < (msg.payload.length - 1)) {  \n     data_I2 += \",\"  \n   } else {  \n     data_I2 += \"]]\"  \n   }  \n }  \n var jsondata_I2 = JSON.parse(data_I2);\n \n var msg_I2 = {\n     payload : [{\"series\": series_I2, \"data\": jsondata_I2, \"labels\": labels_I2}],\n     topic : \"I2\"\n }\n \n var series_I3= [\"I3\"];  \n var labels_I3 = [\"Data Values\"];  \n var data_I3 = \"[[\";  \n   \n for (i=0; i < msg.payload.length; i++) {  \n   data_I3 += '{ \"x\":' + ((offset+parseInt(msg.payload[i].Time))*1000).toString() + ', \"y\":' + msg.payload[i].I3 + '}';  \n   if (i < (msg.payload.length - 1)) {  \n     data_I3 += \",\"  \n   } else {  \n     data_I3 += \"]]\"  \n   }  \n }  \n var jsondata_I3 = JSON.parse(data_I3);\n \n var msg_I3 = {\n     payload : [{\"series\": series_I3, \"data\": jsondata_I3, \"labels\": labels_I3}],\n     topic : \"I3\"\n }\n \n var series_P1 = [\"P1\"];  \n var labels_P1 = [\"Data Values\"];  \n var data_P1 = \"[[\";  \n   \n for (i=0; i < msg.payload.length; i++) {  \n   data_P1 += '{ \"x\":' + ((offset+parseInt(msg.payload[i].Time))*1000).toString() + ', \"y\":' + msg.payload[i].P1 + '}';  \n   if (i < (msg.payload.length - 1)) {  \n     data_P1 += \",\"  \n   } else {  \n     data_P1 += \"]]\"  \n   }  \n }  \n var jsondata_P1 = JSON.parse(data_P1);\n \n var msg_P1 = {\n     payload : [{\"series\": series_P1, \"data\": jsondata_P1, \"labels\": labels_P1}],\n     topic : \"P1\"\n }\n \n var series_P2 = [\"P2\"];  \n var labels_P2 = [\"Data Values\"];  \n var data_P2 = \"[[\";  \n   \n for (i=0; i < msg.payload.length; i++) {  \n   data_P2 += '{ \"x\":' + ((offset+parseInt(msg.payload[i].Time))*1000).toString() + ', \"y\":' + msg.payload[i].P2 + '}';  \n   if (i < (msg.payload.length - 1)) {  \n     data_P2 += \",\"  \n   } else {  \n     data_P2 += \"]]\"  \n   }  \n }  \n var jsondata_P2 = JSON.parse(data_P2);\n \n var msg_P2 = {\n     payload : [{\"series\": series_P2, \"data\": jsondata_P2, \"labels\": labels_P2}],\n     topic : \"P2\"\n }\n \n var series_P3 = [\"P3\"];  \n var labels_P3 = [\"Data Values\"];  \n var data_P3 = \"[[\";  \n   \n for (i=0; i < msg.payload.length; i++) {  \n   data_P3 += '{ \"x\":' + ((offset+parseInt(msg.payload[i].Time))*1000).toString() + ', \"y\":' + msg.payload[i].P3 + '}';  \n   if (i < (msg.payload.length - 1)) {  \n     data_P3 += \",\"  \n   } else {  \n     data_P3 += \"]]\"  \n   }  \n }  \n var jsondata_P3 = JSON.parse(data_P3);\n \n var msg_P3 = {\n     payload : [{\"series\": series_P3, \"data\": jsondata_P3, \"labels\": labels_P3}],\n     topic : \"P3\"\n }\n \n //var series_F = [\"F\"];  \n //var labels_F = [\"Data Values\"];  \n \n //var data_F = (msg.payload[(msg.payload).length]).F;\n //var data_F = '50';\n //var jsondata_F = JSON.parse(data_F);\n \n var msg_F = {payload: msg.payload[msg.payload.length - 1].F};\n \n return [msg_V1, msg_V2, msg_V3, msg_I1, msg_I2, msg_I3, msg_P1, msg_P2, msg_P3, msg_F];",
        "outputs": 10,
        "noerr": 0,
        "x": 680,
        "y": 1340,
        "wires": [
            [
                "b9374f78.bbac4"
            ],
            [
                "a36f330f.3733d"
            ],
            [
                "5b9e36cc.2cabe8"
            ],
            [
                "68d26120.dd5eb"
            ],
            [
                "3e022a1b.5ec666"
            ],
            [
                "17804e83.88dd61"
            ],
            [
                "3a0aa427.d79e4c"
            ],
            [
                "29d71fa2.3ac69"
            ],
            [
                "c36f89de.077bd8"
            ],
            [
                "9a123ebf.2fdea"
            ]
        ]
    },
    {
        "id": "a36f330f.3733d",
        "type": "ui_chart",
        "z": "ec06544c.0674a8",
        "name": "",
        "group": "8bcd15fb.5af798",
        "order": 2,
        "width": 0,
        "height": 0,
        "label": "Voltage phase 2 (V)",
        "chartType": "line",
        "legend": "false",
        "xformat": "HH:mm:ss",
        "interpolate": "linear",
        "nodata": "",
        "dot": false,
        "ymin": "",
        "ymax": "",
        "removeOlder": "10",
        "removeOlderPoints": "",
        "removeOlderUnit": "60",
        "cutout": 0,
        "useOneColor": false,
        "useUTC": true,
        "colors": [
            "#1f77b4",
            "#aec7e8",
            "#ff7f0e",
            "#2ca02c",
            "#98df8a",
            "#d62728",
            "#ff9896",
            "#9467bd",
            "#c5b0d5"
        ],
        "useOldStyle": false,
        "outputs": 1,
        "x": 1030,
        "y": 1220,
        "wires": [
            []
        ]
    },
    {
        "id": "5b9e36cc.2cabe8",
        "type": "ui_chart",
        "z": "ec06544c.0674a8",
        "name": "",
        "group": "8bcd15fb.5af798",
        "order": 3,
        "width": 0,
        "height": 0,
        "label": "Voltage phase 3 (V)",
        "chartType": "line",
        "legend": "false",
        "xformat": "HH:mm:ss",
        "interpolate": "linear",
        "nodata": "",
        "dot": false,
        "ymin": "",
        "ymax": "",
        "removeOlder": "10",
        "removeOlderPoints": "",
        "removeOlderUnit": "60",
        "cutout": 0,
        "useOneColor": false,
        "useUTC": true,
        "colors": [
            "#1f77b4",
            "#aec7e8",
            "#ff7f0e",
            "#2ca02c",
            "#98df8a",
            "#d62728",
            "#ff9896",
            "#9467bd",
            "#c5b0d5"
        ],
        "useOldStyle": false,
        "outputs": 1,
        "x": 1030,
        "y": 1260,
        "wires": [
            []
        ]
    },
    {
        "id": "68d26120.dd5eb",
        "type": "ui_chart",
        "z": "ec06544c.0674a8",
        "name": "",
        "group": "9e5378ec.4d6618",
        "order": 1,
        "width": 0,
        "height": 0,
        "label": "Current phase 1 (A)",
        "chartType": "line",
        "legend": "false",
        "xformat": "HH:mm:ss",
        "interpolate": "linear",
        "nodata": "",
        "dot": false,
        "ymin": "",
        "ymax": "",
        "removeOlder": "10",
        "removeOlderPoints": "",
        "removeOlderUnit": "60",
        "cutout": 0,
        "useOneColor": false,
        "useUTC": true,
        "colors": [
            "#1f77b4",
            "#aec7e8",
            "#ff7f0e",
            "#2ca02c",
            "#98df8a",
            "#d62728",
            "#ff9896",
            "#9467bd",
            "#c5b0d5"
        ],
        "useOldStyle": false,
        "outputs": 1,
        "x": 1030,
        "y": 1300,
        "wires": [
            []
        ]
    },
    {
        "id": "3e022a1b.5ec666",
        "type": "ui_chart",
        "z": "ec06544c.0674a8",
        "name": "",
        "group": "9e5378ec.4d6618",
        "order": 2,
        "width": 0,
        "height": 0,
        "label": "Current phase 2 (A)",
        "chartType": "line",
        "legend": "false",
        "xformat": "HH:mm:ss",
        "interpolate": "linear",
        "nodata": "",
        "dot": false,
        "ymin": "",
        "ymax": "",
        "removeOlder": "10",
        "removeOlderPoints": "",
        "removeOlderUnit": "60",
        "cutout": 0,
        "useOneColor": false,
        "useUTC": true,
        "colors": [
            "#1f77b4",
            "#aec7e8",
            "#ff7f0e",
            "#2ca02c",
            "#98df8a",
            "#d62728",
            "#ff9896",
            "#9467bd",
            "#c5b0d5"
        ],
        "useOldStyle": false,
        "outputs": 1,
        "x": 1030,
        "y": 1340,
        "wires": [
            []
        ]
    },
    {
        "id": "17804e83.88dd61",
        "type": "ui_chart",
        "z": "ec06544c.0674a8",
        "name": "",
        "group": "9e5378ec.4d6618",
        "order": 3,
        "width": 0,
        "height": 0,
        "label": "Current phase 3 (A)",
        "chartType": "line",
        "legend": "false",
        "xformat": "HH:mm:ss",
        "interpolate": "linear",
        "nodata": "",
        "dot": false,
        "ymin": "",
        "ymax": "",
        "removeOlder": "10",
        "removeOlderPoints": "",
        "removeOlderUnit": "60",
        "cutout": 0,
        "useOneColor": false,
        "useUTC": true,
        "colors": [
            "#1f77b4",
            "#aec7e8",
            "#ff7f0e",
            "#2ca02c",
            "#98df8a",
            "#d62728",
            "#ff9896",
            "#9467bd",
            "#c5b0d5"
        ],
        "useOldStyle": false,
        "outputs": 1,
        "x": 1030,
        "y": 1380,
        "wires": [
            []
        ]
    },
    {
        "id": "3a0aa427.d79e4c",
        "type": "ui_chart",
        "z": "ec06544c.0674a8",
        "name": "",
        "group": "c9e1a2ff.28bba",
        "order": 1,
        "width": 0,
        "height": 0,
        "label": "Power phase 1 (W)",
        "chartType": "line",
        "legend": "false",
        "xformat": "HH:mm:ss",
        "interpolate": "linear",
        "nodata": "",
        "dot": false,
        "ymin": "",
        "ymax": "",
        "removeOlder": "10",
        "removeOlderPoints": "",
        "removeOlderUnit": "60",
        "cutout": 0,
        "useOneColor": false,
        "useUTC": true,
        "colors": [
            "#1f77b4",
            "#aec7e8",
            "#ff7f0e",
            "#2ca02c",
            "#98df8a",
            "#d62728",
            "#ff9896",
            "#9467bd",
            "#c5b0d5"
        ],
        "useOldStyle": false,
        "outputs": 1,
        "x": 1030,
        "y": 1420,
        "wires": [
            []
        ]
    },
    {
        "id": "c36f89de.077bd8",
        "type": "ui_chart",
        "z": "ec06544c.0674a8",
        "name": "",
        "group": "c9e1a2ff.28bba",
        "order": 3,
        "width": 0,
        "height": 0,
        "label": "Power phase 3 (W)",
        "chartType": "line",
        "legend": "false",
        "xformat": "HH:mm:ss",
        "interpolate": "linear",
        "nodata": "",
        "dot": false,
        "ymin": "",
        "ymax": "",
        "removeOlder": "10",
        "removeOlderPoints": "",
        "removeOlderUnit": "60",
        "cutout": 0,
        "useOneColor": false,
        "useUTC": true,
        "colors": [
            "#1f77b4",
            "#aec7e8",
            "#ff7f0e",
            "#2ca02c",
            "#98df8a",
            "#d62728",
            "#ff9896",
            "#9467bd",
            "#c5b0d5"
        ],
        "useOldStyle": false,
        "outputs": 1,
        "x": 1030,
        "y": 1500,
        "wires": [
            []
        ]
    },
    {
        "id": "29d71fa2.3ac69",
        "type": "ui_chart",
        "z": "ec06544c.0674a8",
        "name": "",
        "group": "c9e1a2ff.28bba",
        "order": 2,
        "width": 0,
        "height": 0,
        "label": "Power phase 2 (W)",
        "chartType": "line",
        "legend": "false",
        "xformat": "HH:mm:ss",
        "interpolate": "linear",
        "nodata": "",
        "dot": false,
        "ymin": "",
        "ymax": "",
        "removeOlder": "10",
        "removeOlderPoints": "",
        "removeOlderUnit": "60",
        "cutout": 0,
        "useOneColor": false,
        "useUTC": true,
        "colors": [
            "#1f77b4",
            "#aec7e8",
            "#ff7f0e",
            "#2ca02c",
            "#98df8a",
            "#d62728",
            "#ff9896",
            "#9467bd",
            "#c5b0d5"
        ],
        "useOldStyle": false,
        "outputs": 1,
        "x": 1030,
        "y": 1460,
        "wires": [
            []
        ]
    },
    {
        "id": "7b23226f.6232ac",
        "type": "sqlite",
        "z": "ec06544c.0674a8",
        "mydb": "933b80c6.0add1",
        "sqlquery": "fixed",
        "sql": "select * from Battery LIMIT 20 OFFSET (SELECT COUNT(*) FROM Battery)-20;\n",
        "name": "MeasuredData",
        "x": 460,
        "y": 1640,
        "wires": [
            [
                "1fa74c03.1df914",
                "48fdab5a.a3a304"
            ]
        ]
    },
    {
        "id": "1fa74c03.1df914",
        "type": "debug",
        "z": "ec06544c.0674a8",
        "name": "battery",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "x": 650,
        "y": 1640,
        "wires": []
    },
    {
        "id": "fbacc53e.558558",
        "type": "ui_chart",
        "z": "ec06544c.0674a8",
        "name": "",
        "group": "a33c6c34.27bb7",
        "order": 1,
        "width": 0,
        "height": 0,
        "label": "Voltage phase 1 (V)",
        "chartType": "line",
        "legend": "false",
        "xformat": "HH:mm:ss",
        "interpolate": "linear",
        "nodata": "",
        "dot": false,
        "ymin": "",
        "ymax": "",
        "removeOlder": "10",
        "removeOlderPoints": "",
        "removeOlderUnit": "60",
        "cutout": 0,
        "useOneColor": false,
        "useUTC": true,
        "colors": [
            "#1f77b4",
            "#aec7e8",
            "#ff7f0e",
            "#2ca02c",
            "#98df8a",
            "#d62728",
            "#ff9896",
            "#9467bd",
            "#c5b0d5"
        ],
        "useOldStyle": false,
        "outputs": 1,
        "x": 1030,
        "y": 1620,
        "wires": [
            []
        ]
    },
    {
        "id": "48fdab5a.a3a304",
        "type": "function",
        "z": "ec06544c.0674a8",
        "name": "Data format Battery",
        "func": " var offset = context.get(\"offset\")||3600;\n if (msg.topic == \"timezone\") {\n     offset =  msg.payload;\n     context.set(\"offset\", offset);\n     return null;\n }\n\n //  \n // Create a data variable   \n //  \n var i = 0;\n var series_V1 = [\"V1\"];  \n var labels_V1 = [\"Data Values\"];  \n var data_V1 = \"[[\";  \n   \n for (i=0; i < msg.payload.length; i++) {  \n   data_V1 += '{ \"x\":' + ((offset+parseInt(msg.payload[i].Time))*1000).toString() + ', \"y\":' + msg.payload[i].V1 + '}';  \n   if (i < (msg.payload.length - 1)) {  \n     data_V1 += \",\"  \n   } else {  \n     data_V1 += \"]]\"  \n   }  \n }  \n var jsondata_V1 = JSON.parse(data_V1);\n \n var msg_V1 = {\n     payload : [{\"series\": series_V1, \"data\": jsondata_V1, \"labels\": labels_V1}],\n     topic : \"V1\"\n }\n \n var series_V2 = [\"V2\"];  \n var labels_V2 = [\"Data Values\"];  \n var data_V2 = \"[[\";  \n   \n for (i=0; i < msg.payload.length; i++) {  \n   data_V2 += '{ \"x\":' + ((offset+parseInt(msg.payload[i].Time))*1000).toString() + ', \"y\":' + msg.payload[i].V2 + '}';  \n   if (i < (msg.payload.length - 1)) {  \n     data_V2 += \",\"  \n   } else {  \n     data_V2 += \"]]\"  \n   }  \n }  \n var jsondata_V2 = JSON.parse(data_V2);\n \n var msg_V2 = {\n     payload : [{\"series\": series_V2, \"data\": jsondata_V2, \"labels\": labels_V2}],\n     topic : \"V2\"\n }\n   \n var series_V3 = [\"V3\"];  \n var labels_V3 = [\"Data Values\"];  \n var data_V3 = \"[[\";  \n   \n for (i=0; i < msg.payload.length; i++) {  \n   data_V3 += '{ \"x\":' + ((offset+parseInt(msg.payload[i].Time))*1000).toString() + ', \"y\":' + msg.payload[i].V3 + '}';  \n   if (i < (msg.payload.length - 1)) {  \n     data_V3 += \",\"  \n   } else {  \n     data_V3 += \"]]\"  \n   }  \n }  \n var jsondata_V3 = JSON.parse(data_V3);\n \n var msg_V3 = {\n     payload : [{\"series\": series_V3, \"data\": jsondata_V3, \"labels\": labels_V3}],\n     topic : \"V3\"\n }\n \n var series_I1 = [\"I1\"];  \n var labels_I1 = [\"Data Values\"];  \n var data_I1 = \"[[\";  \n   \n for (i=0; i < msg.payload.length; i++) {  \n   data_I1 += '{ \"x\":' + ((offset+parseInt(msg.payload[i].Time))*1000).toString() + ', \"y\":' + msg.payload[i].I1 + '}';  \n   if (i < (msg.payload.length - 1)) {  \n     data_I1 += \",\"  \n   } else {  \n     data_I1 += \"]]\"  \n   }  \n }  \n var jsondata_I1 = JSON.parse(data_I1);\n \n var msg_I1 = {\n     payload : [{\"series\": series_I1, \"data\": jsondata_I1, \"labels\": labels_I1}],\n     topic : \"I1\"\n }\n \n var series_I2 = [\"I2\"];  \n var labels_I2 = [\"Data Values\"];  \n var data_I2 = \"[[\";  \n   \n for (i=0; i < msg.payload.length; i++) {  \n   data_I2 += '{ \"x\":' + ((offset+parseInt(msg.payload[i].Time))*1000).toString() + ', \"y\":' + msg.payload[i].I2 + '}';  \n   if (i < (msg.payload.length - 1)) {  \n     data_I2 += \",\"  \n   } else {  \n     data_I2 += \"]]\"  \n   }  \n }  \n var jsondata_I2 = JSON.parse(data_I2);\n \n var msg_I2 = {\n     payload : [{\"series\": series_I2, \"data\": jsondata_I2, \"labels\": labels_I2}],\n     topic : \"I2\"\n }\n \n var series_I3= [\"I3\"];  \n var labels_I3 = [\"Data Values\"];  \n var data_I3 = \"[[\";  \n   \n for (i=0; i < msg.payload.length; i++) {  \n   data_I3 += '{ \"x\":' + ((offset+parseInt(msg.payload[i].Time))*1000).toString() + ', \"y\":' + msg.payload[i].I3 + '}';  \n   if (i < (msg.payload.length - 1)) {  \n     data_I3 += \",\"  \n   } else {  \n     data_I3 += \"]]\"  \n   }  \n }  \n var jsondata_I3 = JSON.parse(data_I3);\n \n var msg_I3 = {\n     payload : [{\"series\": series_I3, \"data\": jsondata_I3, \"labels\": labels_I3}],\n     topic : \"I3\"\n }\n \n var series_P1 = [\"P1\"];  \n var labels_P1 = [\"Data Values\"];  \n var data_P1 = \"[[\";  \n   \n for (i=0; i < msg.payload.length; i++) {  \n   data_P1 += '{ \"x\":' + ((offset+parseInt(msg.payload[i].Time))*1000).toString() + ', \"y\":' + msg.payload[i].P1 + '}';  \n   if (i < (msg.payload.length - 1)) {  \n     data_P1 += \",\"  \n   } else {  \n     data_P1 += \"]]\"  \n   }  \n }  \n var jsondata_P1 = JSON.parse(data_P1);\n \n var msg_P1 = {\n     payload : [{\"series\": series_P1, \"data\": jsondata_P1, \"labels\": labels_P1}],\n     topic : \"P1\"\n }\n \n var series_P2 = [\"P2\"];  \n var labels_P2 = [\"Data Values\"];  \n var data_P2 = \"[[\";  \n   \n for (i=0; i < msg.payload.length; i++) {  \n   data_P2 += '{ \"x\":' + ((offset+parseInt(msg.payload[i].Time))*1000).toString() + ', \"y\":' + msg.payload[i].P2 + '}';  \n   if (i < (msg.payload.length - 1)) {  \n     data_P2 += \",\"  \n   } else {  \n     data_P2 += \"]]\"  \n   }  \n }  \n var jsondata_P2 = JSON.parse(data_P2);\n \n var msg_P2 = {\n     payload : [{\"series\": series_P2, \"data\": jsondata_P2, \"labels\": labels_P2}],\n     topic : \"P2\"\n }\n \n var series_P3 = [\"P3\"];  \n var labels_P3 = [\"Data Values\"];  \n var data_P3 = \"[[\";  \n   \n for (i=0; i < msg.payload.length; i++) {  \n   data_P3 += '{ \"x\":' + ((offset+parseInt(msg.payload[i].Time))*1000).toString() + ', \"y\":' + msg.payload[i].P3 + '}';  \n   if (i < (msg.payload.length - 1)) {  \n     data_P3 += \",\"  \n   } else {  \n     data_P3 += \"]]\"  \n   }  \n }  \n var jsondata_P3 = JSON.parse(data_P3);\n \n var msg_P3 = {\n     payload : [{\"series\": series_P3, \"data\": jsondata_P3, \"labels\": labels_P3}],\n     topic : \"P3\"\n }\n \n //var series_F = [\"F\"];  \n //var labels_F = [\"Data Values\"];  \n \n //var data_F = (msg.payload[(msg.payload).length]).F;\n //var data_F = '50';\n //var jsondata_F = JSON.parse(data_F);\n \n var msg_F = {payload: msg.payload[msg.payload.length - 1].F};\n \n return [msg_V1, msg_V2, msg_V3, msg_I1, msg_I2, msg_I3, msg_P1, msg_P2, msg_P3, msg_F];",
        "outputs": 10,
        "noerr": 0,
        "x": 690,
        "y": 1780,
        "wires": [
            [
                "fbacc53e.558558"
            ],
            [
                "ef91fcb9.9204c"
            ],
            [
                "76597ba2.f4a614"
            ],
            [
                "c44668bb.590048"
            ],
            [
                "995b1256.ef55d"
            ],
            [
                "63c45c7e.4e4c14"
            ],
            [
                "2de477af.c8a528"
            ],
            [
                "770c66f1.7bc7f8"
            ],
            [
                "22917cda.404ea4"
            ],
            [
                "b0f41dd2.7f02"
            ]
        ]
    },
    {
        "id": "ef91fcb9.9204c",
        "type": "ui_chart",
        "z": "ec06544c.0674a8",
        "name": "",
        "group": "a33c6c34.27bb7",
        "order": 2,
        "width": 0,
        "height": 0,
        "label": "Voltage phase 2 (V)",
        "chartType": "line",
        "legend": "false",
        "xformat": "HH:mm:ss",
        "interpolate": "linear",
        "nodata": "",
        "dot": false,
        "ymin": "",
        "ymax": "",
        "removeOlder": "10",
        "removeOlderPoints": "",
        "removeOlderUnit": "60",
        "cutout": 0,
        "useOneColor": false,
        "useUTC": true,
        "colors": [
            "#1f77b4",
            "#aec7e8",
            "#ff7f0e",
            "#2ca02c",
            "#98df8a",
            "#d62728",
            "#ff9896",
            "#9467bd",
            "#c5b0d5"
        ],
        "useOldStyle": false,
        "outputs": 1,
        "x": 1030,
        "y": 1660,
        "wires": [
            []
        ]
    },
    {
        "id": "76597ba2.f4a614",
        "type": "ui_chart",
        "z": "ec06544c.0674a8",
        "name": "",
        "group": "a33c6c34.27bb7",
        "order": 3,
        "width": 0,
        "height": 0,
        "label": "Voltage phase 3 (V)",
        "chartType": "line",
        "legend": "false",
        "xformat": "HH:mm:ss",
        "interpolate": "linear",
        "nodata": "",
        "dot": false,
        "ymin": "",
        "ymax": "",
        "removeOlder": "10",
        "removeOlderPoints": "",
        "removeOlderUnit": "60",
        "cutout": 0,
        "useOneColor": false,
        "useUTC": true,
        "colors": [
            "#1f77b4",
            "#aec7e8",
            "#ff7f0e",
            "#2ca02c",
            "#98df8a",
            "#d62728",
            "#ff9896",
            "#9467bd",
            "#c5b0d5"
        ],
        "useOldStyle": false,
        "outputs": 1,
        "x": 1030,
        "y": 1700,
        "wires": [
            []
        ]
    },
    {
        "id": "c44668bb.590048",
        "type": "ui_chart",
        "z": "ec06544c.0674a8",
        "name": "",
        "group": "1647578d.713058",
        "order": 1,
        "width": 0,
        "height": 0,
        "label": "Current phase 1 (A)",
        "chartType": "line",
        "legend": "false",
        "xformat": "HH:mm:ss",
        "interpolate": "linear",
        "nodata": "",
        "dot": false,
        "ymin": "",
        "ymax": "",
        "removeOlder": "10",
        "removeOlderPoints": "",
        "removeOlderUnit": "60",
        "cutout": 0,
        "useOneColor": false,
        "useUTC": true,
        "colors": [
            "#1f77b4",
            "#aec7e8",
            "#ff7f0e",
            "#2ca02c",
            "#98df8a",
            "#d62728",
            "#ff9896",
            "#9467bd",
            "#c5b0d5"
        ],
        "useOldStyle": false,
        "outputs": 1,
        "x": 1030,
        "y": 1740,
        "wires": [
            []
        ]
    },
    {
        "id": "995b1256.ef55d",
        "type": "ui_chart",
        "z": "ec06544c.0674a8",
        "name": "",
        "group": "1647578d.713058",
        "order": 2,
        "width": 0,
        "height": 0,
        "label": "Current phase 2 (A)",
        "chartType": "line",
        "legend": "false",
        "xformat": "HH:mm:ss",
        "interpolate": "linear",
        "nodata": "",
        "dot": false,
        "ymin": "",
        "ymax": "",
        "removeOlder": "10",
        "removeOlderPoints": "",
        "removeOlderUnit": "60",
        "cutout": 0,
        "useOneColor": false,
        "useUTC": true,
        "colors": [
            "#1f77b4",
            "#aec7e8",
            "#ff7f0e",
            "#2ca02c",
            "#98df8a",
            "#d62728",
            "#ff9896",
            "#9467bd",
            "#c5b0d5"
        ],
        "useOldStyle": false,
        "outputs": 1,
        "x": 1030,
        "y": 1780,
        "wires": [
            []
        ]
    },
    {
        "id": "63c45c7e.4e4c14",
        "type": "ui_chart",
        "z": "ec06544c.0674a8",
        "name": "",
        "group": "1647578d.713058",
        "order": 3,
        "width": 0,
        "height": 0,
        "label": "Current phase 3 (A)",
        "chartType": "line",
        "legend": "false",
        "xformat": "HH:mm:ss",
        "interpolate": "linear",
        "nodata": "",
        "dot": false,
        "ymin": "",
        "ymax": "",
        "removeOlder": "10",
        "removeOlderPoints": "",
        "removeOlderUnit": "60",
        "cutout": 0,
        "useOneColor": false,
        "useUTC": true,
        "colors": [
            "#1f77b4",
            "#aec7e8",
            "#ff7f0e",
            "#2ca02c",
            "#98df8a",
            "#d62728",
            "#ff9896",
            "#9467bd",
            "#c5b0d5"
        ],
        "useOldStyle": false,
        "outputs": 1,
        "x": 1030,
        "y": 1820,
        "wires": [
            []
        ]
    },
    {
        "id": "2de477af.c8a528",
        "type": "ui_chart",
        "z": "ec06544c.0674a8",
        "name": "",
        "group": "b7db0a05.88faf8",
        "order": 1,
        "width": 0,
        "height": 0,
        "label": "Power phase 1 (W)",
        "chartType": "line",
        "legend": "false",
        "xformat": "HH:mm:ss",
        "interpolate": "linear",
        "nodata": "",
        "dot": false,
        "ymin": "",
        "ymax": "",
        "removeOlder": "10",
        "removeOlderPoints": "",
        "removeOlderUnit": "60",
        "cutout": 0,
        "useOneColor": false,
        "useUTC": true,
        "colors": [
            "#1f77b4",
            "#aec7e8",
            "#ff7f0e",
            "#2ca02c",
            "#98df8a",
            "#d62728",
            "#ff9896",
            "#9467bd",
            "#c5b0d5"
        ],
        "useOldStyle": false,
        "outputs": 1,
        "x": 1030,
        "y": 1860,
        "wires": [
            []
        ]
    },
    {
        "id": "22917cda.404ea4",
        "type": "ui_chart",
        "z": "ec06544c.0674a8",
        "name": "",
        "group": "b7db0a05.88faf8",
        "order": 3,
        "width": 0,
        "height": 0,
        "label": "Power phase 3 (W)",
        "chartType": "line",
        "legend": "false",
        "xformat": "HH:mm:ss",
        "interpolate": "linear",
        "nodata": "",
        "dot": false,
        "ymin": "",
        "ymax": "",
        "removeOlder": "10",
        "removeOlderPoints": "",
        "removeOlderUnit": "60",
        "cutout": 0,
        "useOneColor": false,
        "useUTC": true,
        "colors": [
            "#1f77b4",
            "#aec7e8",
            "#ff7f0e",
            "#2ca02c",
            "#98df8a",
            "#d62728",
            "#ff9896",
            "#9467bd",
            "#c5b0d5"
        ],
        "useOldStyle": false,
        "outputs": 1,
        "x": 1030,
        "y": 1940,
        "wires": [
            []
        ]
    },
    {
        "id": "770c66f1.7bc7f8",
        "type": "ui_chart",
        "z": "ec06544c.0674a8",
        "name": "",
        "group": "b7db0a05.88faf8",
        "order": 2,
        "width": 0,
        "height": 0,
        "label": "Power phase 2 (W)",
        "chartType": "line",
        "legend": "false",
        "xformat": "HH:mm:ss",
        "interpolate": "linear",
        "nodata": "",
        "dot": false,
        "ymin": "",
        "ymax": "",
        "removeOlder": "10",
        "removeOlderPoints": "",
        "removeOlderUnit": "60",
        "cutout": 0,
        "useOneColor": false,
        "useUTC": true,
        "colors": [
            "#1f77b4",
            "#aec7e8",
            "#ff7f0e",
            "#2ca02c",
            "#98df8a",
            "#d62728",
            "#ff9896",
            "#9467bd",
            "#c5b0d5"
        ],
        "useOldStyle": false,
        "outputs": 1,
        "x": 1030,
        "y": 1900,
        "wires": [
            []
        ]
    },
    {
        "id": "c0304977.9e65a8",
        "type": "sqlite",
        "z": "ec06544c.0674a8",
        "mydb": "933b80c6.0add1",
        "sqlquery": "fixed",
        "sql": "select * from Grid LIMIT 20 OFFSET (SELECT COUNT(*) FROM Grid)-20;\n",
        "name": "MeasuredData",
        "x": 460,
        "y": 2080,
        "wires": [
            [
                "4ffdf507.6d074c",
                "9d882efc.b3045"
            ]
        ]
    },
    {
        "id": "4ffdf507.6d074c",
        "type": "debug",
        "z": "ec06544c.0674a8",
        "name": "grid",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "x": 650,
        "y": 2080,
        "wires": []
    },
    {
        "id": "ac5dec47.73d19",
        "type": "ui_chart",
        "z": "ec06544c.0674a8",
        "name": "",
        "group": "9d4f667a.0986b8",
        "order": 1,
        "width": 0,
        "height": 0,
        "label": "Voltage phase 1 (V)",
        "chartType": "line",
        "legend": "false",
        "xformat": "HH:mm:ss",
        "interpolate": "linear",
        "nodata": "",
        "dot": false,
        "ymin": "",
        "ymax": "",
        "removeOlder": "10",
        "removeOlderPoints": "",
        "removeOlderUnit": "60",
        "cutout": 0,
        "useOneColor": false,
        "useUTC": true,
        "colors": [
            "#1f77b4",
            "#aec7e8",
            "#ff7f0e",
            "#2ca02c",
            "#98df8a",
            "#d62728",
            "#ff9896",
            "#9467bd",
            "#c5b0d5"
        ],
        "useOldStyle": false,
        "outputs": 1,
        "x": 1030,
        "y": 2060,
        "wires": [
            []
        ]
    },
    {
        "id": "9d882efc.b3045",
        "type": "function",
        "z": "ec06544c.0674a8",
        "name": "Data format Grid",
        "func": " var offset = context.get(\"offset\")||3600;\n if (msg.topic == \"timezone\") {\n     offset =  msg.payload;\n     context.set(\"offset\", offset);\n     return null;\n }\n\n //  \n // Create a data variable   \n //  \n var i = 0;\n var series_V1 = [\"V1\"];  \n var labels_V1 = [\"Data Values\"];  \n var data_V1 = \"[[\";  \n   \n for (i=0; i < msg.payload.length; i++) {  \n   data_V1 += '{ \"x\":' + ((offset+parseInt(msg.payload[i].Time))*1000).toString() + ', \"y\":' + msg.payload[i].V1 + '}';  \n   if (i < (msg.payload.length - 1)) {  \n     data_V1 += \",\";  \n   } else {  \n     data_V1 += \"]]\";  \n   }  \n }  \n var jsondata_V1 = JSON.parse(data_V1);\n \n var msg_V1 = {\n     payload : [{\"series\": series_V1, \"data\": jsondata_V1, \"labels\": labels_V1}],\n     topic : \"V1\"\n };\n \n var series_V2 = [\"V2\"];  \n var labels_V2 = [\"Data Values\"];  \n var data_V2 = \"[[\";  \n   \n for (i=0; i < msg.payload.length; i++) {  \n   data_V2 += '{ \"x\":' + ((offset+parseInt(msg.payload[i].Time))*1000).toString() + ', \"y\":' + msg.payload[i].V2 + '}';  \n   if (i < (msg.payload.length - 1)) {  \n     data_V2 += \",\";  \n   } else {  \n     data_V2 += \"]]\";  \n   }  \n }  \n var jsondata_V2 = JSON.parse(data_V2);\n \n var msg_V2 = {\n     payload : [{\"series\": series_V2, \"data\": jsondata_V2, \"labels\": labels_V2}],\n     topic : \"V2\"\n };\n   \n var series_V3 = [\"V3\"];  \n var labels_V3 = [\"Data Values\"];  \n var data_V3 = \"[[\";  \n   \n for (i=0; i < msg.payload.length; i++) {  \n   data_V3 += '{ \"x\":' + ((offset+parseInt(msg.payload[i].Time))*1000).toString() + ', \"y\":' + msg.payload[i].V3 + '}';  \n   if (i < (msg.payload.length - 1)) {  \n     data_V3 += \",\";  \n   } else {  \n     data_V3 += \"]]\";  \n   }  \n }  \n var jsondata_V3 = JSON.parse(data_V3);\n \n var msg_V3 = {\n     payload : [{\"series\": series_V3, \"data\": jsondata_V3, \"labels\": labels_V3}],\n     topic : \"V3\"\n };\n \n var series_I1 = [\"I1\"];  \n var labels_I1 = [\"Data Values\"];  \n var data_I1 = \"[[\";  \n   \n for (i=0; i < msg.payload.length; i++) {  \n   data_I1 += '{ \"x\":' + ((offset+parseInt(msg.payload[i].Time))*1000).toString() + ', \"y\":' + msg.payload[i].I1 + '}';  \n   if (i < (msg.payload.length - 1)) {  \n     data_I1 += \",\"; \n   } else {  \n     data_I1 += \"]]\";  \n   }  \n }  \n var jsondata_I1 = JSON.parse(data_I1);\n \n var msg_I1 = {\n     payload : [{\"series\": series_I1, \"data\": jsondata_I1, \"labels\": labels_I1}],\n     topic : \"I1\"\n };\n \n var series_I2 = [\"I2\"];  \n var labels_I2 = [\"Data Values\"];  \n var data_I2 = \"[[\";  \n   \n for (i=0; i < msg.payload.length; i++) {  \n   data_I2 += '{ \"x\":' + ((offset+parseInt(msg.payload[i].Time))*1000).toString() + ', \"y\":' + msg.payload[i].I2 + '}';  \n   if (i < (msg.payload.length - 1)) {  \n     data_I2 += \",\";  \n   } else {  \n     data_I2 += \"]]\";  \n   }  \n }  \n var jsondata_I2 = JSON.parse(data_I2);\n \n var msg_I2 = {\n     payload : [{\"series\": series_I2, \"data\": jsondata_I2, \"labels\": labels_I2}],\n     topic : \"I2\"\n };\n \n var series_I3= [\"I3\"];  \n var labels_I3 = [\"Data Values\"];  \n var data_I3 = \"[[\";  \n   \n for (i=0; i < msg.payload.length; i++) {  \n   data_I3 += '{ \"x\":' + ((offset+parseInt(msg.payload[i].Time))*1000).toString() + ', \"y\":' + msg.payload[i].I3 + '}';  \n   if (i < (msg.payload.length - 1)) {  \n     data_I3 += \",\";  \n   } else {  \n     data_I3 += \"]]\";  \n   }  \n }  \n var jsondata_I3 = JSON.parse(data_I3);\n \n var msg_I3 = {\n     payload : [{\"series\": series_I3, \"data\": jsondata_I3, \"labels\": labels_I3}],\n     topic : \"I3\"\n };\n \n var series_P1 = [\"P1\"];  \n var labels_P1 = [\"Data Values\"];  \n var data_P1 = \"[[\";  \n   \n for (i=0; i < msg.payload.length; i++) {  \n   data_P1 += '{ \"x\":' + ((offset+parseInt(msg.payload[i].Time))*1000).toString() + ', \"y\":' + msg.payload[i].P1 + '}';  \n   if (i < (msg.payload.length - 1)) {  \n     data_P1 += \",\";  \n   } else {  \n     data_P1 += \"]]\";  \n   }  \n }  \n var jsondata_P1 = JSON.parse(data_P1);\n \n var msg_P1 = {\n     payload : [{\"series\": series_P1, \"data\": jsondata_P1, \"labels\": labels_P1}],\n     topic : \"P1\"\n };\n \n var series_P2 = [\"P2\"];  \n var labels_P2 = [\"Data Values\"];  \n var data_P2 = \"[[\";  \n   \n for (i=0; i < msg.payload.length; i++) {  \n   data_P2 += '{ \"x\":' + ((offset+parseInt(msg.payload[i].Time))*1000).toString() + ', \"y\":' + msg.payload[i].P2 + '}';  \n   if (i < (msg.payload.length - 1)) {  \n     data_P2 += \",\"; \n   } else {  \n     data_P2 += \"]]\"; \n   }  \n }  \n var jsondata_P2 = JSON.parse(data_P2);\n \n var msg_P2 = {\n     payload : [{\"series\": series_P2, \"data\": jsondata_P2, \"labels\": labels_P2}],\n     topic : \"P2\"\n };\n \n var series_P3 = [\"P3\"];  \n var labels_P3 = [\"Data Values\"];  \n var data_P3 = \"[[\";  \n   \n for (i=0; i < msg.payload.length; i++) {  \n   data_P3 += '{ \"x\":' + ((offset+parseInt(msg.payload[i].Time))*1000).toString() + ', \"y\":' + msg.payload[i].P3 + '}';  \n   if (i < (msg.payload.length - 1)) {  \n     data_P3 += \",\";  \n   } else {  \n     data_P3 += \"]]\";  \n   }  \n }  \n var jsondata_P3 = JSON.parse(data_P3);\n \n var msg_P3 = {\n     payload : [{\"series\": series_P3, \"data\": jsondata_P3, \"labels\": labels_P3}],\n     topic : \"P3\"\n };\n \n //var series_F = [\"F\"];  \n //var labels_F = [\"Data Values\"];  \n \n //var data_F = (msg.payload[(msg.payload).length]).F;\n //var data_F = '50';\n //var jsondata_F = JSON.parse(data_F);\n \n var msg_F = {payload: msg.payload[msg.payload.length - 1].F}\n \n return [msg_V1, msg_V2, msg_V3, msg_I1, msg_I2, msg_I3, msg_P1, msg_P2, msg_P3, msg_F];",
        "outputs": 10,
        "noerr": 0,
        "x": 680,
        "y": 2220,
        "wires": [
            [
                "ac5dec47.73d19"
            ],
            [
                "f80a9393.c6893"
            ],
            [
                "5055766c.5f9e78"
            ],
            [
                "5bb25fe8.8029e"
            ],
            [
                "f4daa0a.45bf16"
            ],
            [
                "4953a63c.0f9fa8"
            ],
            [
                "bf046ff2.757d4"
            ],
            [
                "961feca4.a308b"
            ],
            [
                "7b07751b.26882c"
            ],
            [
                "24cf7a1d.2dc8d6"
            ]
        ]
    },
    {
        "id": "f80a9393.c6893",
        "type": "ui_chart",
        "z": "ec06544c.0674a8",
        "name": "",
        "group": "9d4f667a.0986b8",
        "order": 2,
        "width": 0,
        "height": 0,
        "label": "Voltage phase 2 (V)",
        "chartType": "line",
        "legend": "false",
        "xformat": "HH:mm:ss",
        "interpolate": "linear",
        "nodata": "",
        "dot": false,
        "ymin": "",
        "ymax": "",
        "removeOlder": "10",
        "removeOlderPoints": "",
        "removeOlderUnit": "60",
        "cutout": 0,
        "useOneColor": false,
        "useUTC": true,
        "colors": [
            "#1f77b4",
            "#aec7e8",
            "#ff7f0e",
            "#2ca02c",
            "#98df8a",
            "#d62728",
            "#ff9896",
            "#9467bd",
            "#c5b0d5"
        ],
        "useOldStyle": false,
        "outputs": 1,
        "x": 1030,
        "y": 2100,
        "wires": [
            []
        ]
    },
    {
        "id": "5055766c.5f9e78",
        "type": "ui_chart",
        "z": "ec06544c.0674a8",
        "name": "",
        "group": "9d4f667a.0986b8",
        "order": 3,
        "width": 0,
        "height": 0,
        "label": "Voltage phase 3 (V)",
        "chartType": "line",
        "legend": "false",
        "xformat": "HH:mm:ss",
        "interpolate": "linear",
        "nodata": "",
        "dot": false,
        "ymin": "",
        "ymax": "",
        "removeOlder": "10",
        "removeOlderPoints": "",
        "removeOlderUnit": "60",
        "cutout": 0,
        "useOneColor": false,
        "useUTC": true,
        "colors": [
            "#1f77b4",
            "#aec7e8",
            "#ff7f0e",
            "#2ca02c",
            "#98df8a",
            "#d62728",
            "#ff9896",
            "#9467bd",
            "#c5b0d5"
        ],
        "useOldStyle": false,
        "outputs": 1,
        "x": 1030,
        "y": 2140,
        "wires": [
            []
        ]
    },
    {
        "id": "5bb25fe8.8029e",
        "type": "ui_chart",
        "z": "ec06544c.0674a8",
        "name": "",
        "group": "fc3e11ad.58936",
        "order": 1,
        "width": 0,
        "height": 0,
        "label": "Current phase 1 (A)",
        "chartType": "line",
        "legend": "false",
        "xformat": "HH:mm:ss",
        "interpolate": "linear",
        "nodata": "",
        "dot": false,
        "ymin": "",
        "ymax": "",
        "removeOlder": "10",
        "removeOlderPoints": "",
        "removeOlderUnit": "60",
        "cutout": 0,
        "useOneColor": false,
        "useUTC": true,
        "colors": [
            "#1f77b4",
            "#aec7e8",
            "#ff7f0e",
            "#2ca02c",
            "#98df8a",
            "#d62728",
            "#ff9896",
            "#9467bd",
            "#c5b0d5"
        ],
        "useOldStyle": false,
        "outputs": 1,
        "x": 1030,
        "y": 2180,
        "wires": [
            []
        ]
    },
    {
        "id": "f4daa0a.45bf16",
        "type": "ui_chart",
        "z": "ec06544c.0674a8",
        "name": "",
        "group": "fc3e11ad.58936",
        "order": 2,
        "width": 0,
        "height": 0,
        "label": "Current phase 2 (A)",
        "chartType": "line",
        "legend": "false",
        "xformat": "HH:mm:ss",
        "interpolate": "linear",
        "nodata": "",
        "dot": false,
        "ymin": "",
        "ymax": "",
        "removeOlder": "10",
        "removeOlderPoints": "",
        "removeOlderUnit": "60",
        "cutout": 0,
        "useOneColor": false,
        "useUTC": true,
        "colors": [
            "#1f77b4",
            "#aec7e8",
            "#ff7f0e",
            "#2ca02c",
            "#98df8a",
            "#d62728",
            "#ff9896",
            "#9467bd",
            "#c5b0d5"
        ],
        "useOldStyle": false,
        "outputs": 1,
        "x": 1030,
        "y": 2220,
        "wires": [
            []
        ]
    },
    {
        "id": "4953a63c.0f9fa8",
        "type": "ui_chart",
        "z": "ec06544c.0674a8",
        "name": "",
        "group": "fc3e11ad.58936",
        "order": 3,
        "width": 0,
        "height": 0,
        "label": "Current phase 3 (A)",
        "chartType": "line",
        "legend": "false",
        "xformat": "HH:mm:ss",
        "interpolate": "linear",
        "nodata": "",
        "dot": false,
        "ymin": "",
        "ymax": "",
        "removeOlder": "10",
        "removeOlderPoints": "",
        "removeOlderUnit": "60",
        "cutout": 0,
        "useOneColor": false,
        "useUTC": true,
        "colors": [
            "#1f77b4",
            "#aec7e8",
            "#ff7f0e",
            "#2ca02c",
            "#98df8a",
            "#d62728",
            "#ff9896",
            "#9467bd",
            "#c5b0d5"
        ],
        "useOldStyle": false,
        "outputs": 1,
        "x": 1030,
        "y": 2260,
        "wires": [
            []
        ]
    },
    {
        "id": "bf046ff2.757d4",
        "type": "ui_chart",
        "z": "ec06544c.0674a8",
        "name": "",
        "group": "6e68121e.c4427c",
        "order": 1,
        "width": 0,
        "height": 0,
        "label": "Power phase 1 (W)",
        "chartType": "line",
        "legend": "false",
        "xformat": "HH:mm:ss",
        "interpolate": "linear",
        "nodata": "",
        "dot": false,
        "ymin": "",
        "ymax": "",
        "removeOlder": "10",
        "removeOlderPoints": "",
        "removeOlderUnit": "60",
        "cutout": 0,
        "useOneColor": false,
        "useUTC": true,
        "colors": [
            "#1f77b4",
            "#aec7e8",
            "#ff7f0e",
            "#2ca02c",
            "#98df8a",
            "#d62728",
            "#ff9896",
            "#9467bd",
            "#c5b0d5"
        ],
        "useOldStyle": false,
        "outputs": 1,
        "x": 1030,
        "y": 2300,
        "wires": [
            []
        ]
    },
    {
        "id": "7b07751b.26882c",
        "type": "ui_chart",
        "z": "ec06544c.0674a8",
        "name": "",
        "group": "6e68121e.c4427c",
        "order": 3,
        "width": 0,
        "height": 0,
        "label": "Power phase 3 (W)",
        "chartType": "line",
        "legend": "false",
        "xformat": "HH:mm:ss",
        "interpolate": "linear",
        "nodata": "",
        "dot": false,
        "ymin": "",
        "ymax": "",
        "removeOlder": "10",
        "removeOlderPoints": "",
        "removeOlderUnit": "60",
        "cutout": 0,
        "useOneColor": false,
        "useUTC": true,
        "colors": [
            "#1f77b4",
            "#aec7e8",
            "#ff7f0e",
            "#2ca02c",
            "#98df8a",
            "#d62728",
            "#ff9896",
            "#9467bd",
            "#c5b0d5"
        ],
        "useOldStyle": false,
        "outputs": 1,
        "x": 1030,
        "y": 2380,
        "wires": [
            []
        ]
    },
    {
        "id": "961feca4.a308b",
        "type": "ui_chart",
        "z": "ec06544c.0674a8",
        "name": "",
        "group": "6e68121e.c4427c",
        "order": 2,
        "width": 0,
        "height": 0,
        "label": "Power phase 2 (W)",
        "chartType": "line",
        "legend": "false",
        "xformat": "HH:mm:ss",
        "interpolate": "linear",
        "nodata": "",
        "dot": false,
        "ymin": "",
        "ymax": "",
        "removeOlder": "10",
        "removeOlderPoints": "",
        "removeOlderUnit": "60",
        "cutout": 0,
        "useOneColor": false,
        "useUTC": true,
        "colors": [
            "#1f77b4",
            "#aec7e8",
            "#ff7f0e",
            "#2ca02c",
            "#98df8a",
            "#d62728",
            "#ff9896",
            "#9467bd",
            "#c5b0d5"
        ],
        "useOldStyle": false,
        "outputs": 1,
        "x": 1030,
        "y": 2340,
        "wires": [
            []
        ]
    },
    {
        "id": "cb063c4b.31f4f",
        "type": "ui_gauge",
        "z": "ec06544c.0674a8",
        "name": "",
        "group": "28cbcfdd.3809",
        "order": 1,
        "width": 0,
        "height": 0,
        "gtype": "gage",
        "title": "Frequency",
        "label": "Hz",
        "format": "{{value | number:3}}",
        "min": "45.0",
        "max": "55.0",
        "colors": [
            "#00b500",
            "#e6e600",
            "#ca3838"
        ],
        "seg1": "",
        "seg2": "",
        "x": 1010,
        "y": 1100,
        "wires": []
    },
    {
        "id": "c3f1f4ad.0279d8",
        "type": "ui_gauge",
        "z": "ec06544c.0674a8",
        "name": "",
        "group": "c7e074e4.034958",
        "order": 1,
        "width": 0,
        "height": 0,
        "gtype": "gage",
        "title": "Frequency",
        "label": "Hz",
        "format": "{{value | number:3}}",
        "min": "45.0",
        "max": "55.0",
        "colors": [
            "#00b500",
            "#e6e600",
            "#ca3838"
        ],
        "seg1": "",
        "seg2": "",
        "x": 1010,
        "y": 660,
        "wires": []
    },
    {
        "id": "9a123ebf.2fdea",
        "type": "ui_gauge",
        "z": "ec06544c.0674a8",
        "name": "",
        "group": "7338e849.a0fa78",
        "order": 1,
        "width": 0,
        "height": 0,
        "gtype": "gage",
        "title": "Frequency",
        "label": "Hz",
        "format": "{{value | number:3}}",
        "min": "45.0",
        "max": "55.0",
        "colors": [
            "#00b500",
            "#e6e600",
            "#ca3838"
        ],
        "seg1": "",
        "seg2": "",
        "x": 1010,
        "y": 1540,
        "wires": []
    },
    {
        "id": "b0f41dd2.7f02",
        "type": "ui_gauge",
        "z": "ec06544c.0674a8",
        "name": "",
        "group": "9b1d82d.f4ee38",
        "order": 1,
        "width": 0,
        "height": 0,
        "gtype": "gage",
        "title": "Frequency",
        "label": "Hz",
        "format": "{{value | number:3}}",
        "min": "45.0",
        "max": "55.0",
        "colors": [
            "#00b500",
            "#e6e600",
            "#ca3838"
        ],
        "seg1": "",
        "seg2": "",
        "x": 1010,
        "y": 1980,
        "wires": []
    },
    {
        "id": "24cf7a1d.2dc8d6",
        "type": "ui_gauge",
        "z": "ec06544c.0674a8",
        "name": "",
        "group": "71a695c8.7017ec",
        "order": 1,
        "width": 0,
        "height": 0,
        "gtype": "gage",
        "title": "Frequency",
        "label": "Hz",
        "format": "{{value | number:3}}",
        "min": "45.0",
        "max": "55.0",
        "colors": [
            "#00b500",
            "#e6e600",
            "#ca3838"
        ],
        "seg1": "",
        "seg2": "",
        "x": 1010,
        "y": 2420,
        "wires": []
    },
    {
        "id": "948f4354.11792",
        "type": "ui_dropdown",
        "z": "ec06544c.0674a8",
        "name": "",
        "label": "TimeZone",
        "tooltip": "",
        "place": "GMT+1",
        "group": "71a695c8.7017ec",
        "order": 2,
        "width": 0,
        "height": 0,
        "passthru": true,
        "multiple": false,
        "options": [
            {
                "label": "GMT+0",
                "value": 0,
                "type": "num"
            },
            {
                "label": "GMT+1",
                "value": 3600,
                "type": "num"
            },
            {
                "label": "GMT+2",
                "value": 7200,
                "type": "num"
            }
        ],
        "payload": "",
        "topic": "timezone",
        "x": 440,
        "y": 2220,
        "wires": [
            [
                "9d882efc.b3045"
            ]
        ]
    },
    {
        "id": "d8345273.17736",
        "type": "ui_dropdown",
        "z": "ec06544c.0674a8",
        "name": "",
        "label": "TimeZone",
        "tooltip": "",
        "place": "GMT+1",
        "group": "9b1d82d.f4ee38",
        "order": 2,
        "width": 0,
        "height": 0,
        "passthru": true,
        "multiple": false,
        "options": [
            {
                "label": "GMT+0",
                "value": 0,
                "type": "num"
            },
            {
                "label": "GMT+1",
                "value": 3600,
                "type": "num"
            },
            {
                "label": "GMT+2",
                "value": 7200,
                "type": "num"
            }
        ],
        "payload": "",
        "topic": "timezone",
        "x": 440,
        "y": 1780,
        "wires": [
            [
                "48fdab5a.a3a304"
            ]
        ]
    },
    {
        "id": "3f8160.e67bbea",
        "type": "ui_dropdown",
        "z": "ec06544c.0674a8",
        "name": "",
        "label": "TimeZone",
        "tooltip": "",
        "place": "GMT+1",
        "group": "7338e849.a0fa78",
        "order": 2,
        "width": 0,
        "height": 0,
        "passthru": true,
        "multiple": false,
        "options": [
            {
                "label": "GMT+0",
                "value": 0,
                "type": "num"
            },
            {
                "label": "GMT+1",
                "value": 3600,
                "type": "num"
            },
            {
                "label": "GMT+2",
                "value": 7200,
                "type": "num"
            }
        ],
        "payload": "",
        "topic": "timezone",
        "x": 440,
        "y": 1340,
        "wires": [
            [
                "9d353fd6.57955"
            ]
        ]
    },
    {
        "id": "7cbd8b49.efab34",
        "type": "ui_dropdown",
        "z": "ec06544c.0674a8",
        "name": "",
        "label": "TimeZone",
        "tooltip": "",
        "place": "GMT+1",
        "group": "28cbcfdd.3809",
        "order": 2,
        "width": 0,
        "height": 0,
        "passthru": true,
        "multiple": false,
        "options": [
            {
                "label": "GMT+0",
                "value": 0,
                "type": "num"
            },
            {
                "label": "GMT+1",
                "value": 3600,
                "type": "num"
            },
            {
                "label": "GMT+2",
                "value": 7200,
                "type": "num"
            }
        ],
        "payload": "",
        "topic": "timezone",
        "x": 440,
        "y": 900,
        "wires": [
            [
                "fafbbf0c.a974f"
            ]
        ]
    },
    {
        "id": "1a19bece.1cfb41",
        "type": "ui_dropdown",
        "z": "ec06544c.0674a8",
        "name": "",
        "label": "TimeZone",
        "tooltip": "",
        "place": "GMT+1",
        "group": "c7e074e4.034958",
        "order": 2,
        "width": 0,
        "height": 0,
        "passthru": true,
        "multiple": false,
        "options": [
            {
                "label": "GMT+0",
                "value": 0,
                "type": "num"
            },
            {
                "label": "GMT+1",
                "value": 3600,
                "type": "num"
            },
            {
                "label": "GMT+2",
                "value": 7200,
                "type": "num"
            }
        ],
        "payload": "",
        "topic": "timezone",
        "x": 440,
        "y": 460,
        "wires": [
            [
                "45a2c425.10921c"
            ]
        ]
    },
    {
        "id": "aa3c7620.608248",
        "type": "inject",
        "z": "7fe9098.21bfff8",
        "name": "",
        "topic": "1",
        "payload": "",
        "payloadType": "date",
        "repeat": "30",
        "crontab": "",
        "once": true,
        "onceDelay": 0.1,
        "x": 180,
        "y": 580,
        "wires": [
            [
                "64dd20e6.e896c",
                "4c4fba63.994354",
                "49289db.837f064"
            ]
        ]
    },
    {
        "id": "64dd20e6.e896c",
        "type": "sqlite",
        "z": "7fe9098.21bfff8",
        "mydb": "933b80c6.0add1",
        "sqlquery": "fixed",
        "sql": "select * from PV LIMIT 1 OFFSET (SELECT COUNT(*) FROM PV)-1;\n",
        "name": "MeasuredData",
        "x": 500,
        "y": 160,
        "wires": [
            [
                "20c7b708.38b2e8"
            ]
        ]
    },
    {
        "id": "4c4fba63.994354",
        "type": "sqlite",
        "z": "7fe9098.21bfff8",
        "mydb": "933b80c6.0add1",
        "sqlquery": "fixed",
        "sql": "select * from Battery LIMIT 1 OFFSET (SELECT COUNT(*) FROM Battery)-1;\n",
        "name": "MeasuredData",
        "x": 500,
        "y": 580,
        "wires": [
            [
                "15b6bb1f.a85515"
            ]
        ]
    },
    {
        "id": "49289db.837f064",
        "type": "sqlite",
        "z": "7fe9098.21bfff8",
        "mydb": "933b80c6.0add1",
        "sqlquery": "fixed",
        "sql": "select * from Grid LIMIT 1 OFFSET (SELECT COUNT(*) FROM Grid)-1;\n",
        "name": "MeasuredData",
        "x": 500,
        "y": 1000,
        "wires": [
            [
                "4cee0ade.616e04"
            ]
        ]
    },
    {
        "id": "20c7b708.38b2e8",
        "type": "function",
        "z": "7fe9098.21bfff8",
        "name": "Data format overall pv",
        "func": " var msg_V1 = {payload: msg.payload[msg.payload.length - 1].V1};\n var msg_V2 = {payload: msg.payload[msg.payload.length - 1].V2};\n var msg_V3 = {payload: msg.payload[msg.payload.length - 1].V3};\n var msg_I1 = {payload: msg.payload[msg.payload.length - 1].I1};\n var msg_I2 = {payload: msg.payload[msg.payload.length - 1].I2};\n var msg_I3 = {payload: msg.payload[msg.payload.length - 1].I3};\n var msg_P1 = {payload: msg.payload[msg.payload.length - 1].P1};\n var msg_P2 = {payload: msg.payload[msg.payload.length - 1].P2};\n var msg_P3 = {payload: msg.payload[msg.payload.length - 1].P3};\n var msg_F = {payload: msg.payload[msg.payload.length - 1].F};\n \n return [msg_V1, msg_V2, msg_V3, msg_I1, msg_I2, msg_I3, msg_P1, msg_P2, msg_P3, msg_F];",
        "outputs": 10,
        "noerr": 0,
        "x": 800,
        "y": 160,
        "wires": [
            [
                "c1f7777a.489598"
            ],
            [
                "c1df83df.d29"
            ],
            [
                "ef827f90.e5df"
            ],
            [
                "3a29846a.72b00c"
            ],
            [
                "e61d66cf.85b108"
            ],
            [
                "f03fa02a.6844f"
            ],
            [
                "dbc9954f.513ff8"
            ],
            [
                "3420446c.6ef28c"
            ],
            [
                "f31adde.8d1a22"
            ],
            [
                "77f847d8.0f0b48"
            ]
        ]
    },
    {
        "id": "77f847d8.0f0b48",
        "type": "ui_gauge",
        "z": "7fe9098.21bfff8",
        "name": "",
        "group": "18a07384.7d320c",
        "order": 30,
        "width": 8,
        "height": 4,
        "gtype": "gage",
        "title": "Frequency",
        "label": "Hz",
        "format": "{{value | number:3}}",
        "min": "45.0",
        "max": "55.0",
        "colors": [
            "#00b500",
            "#e6e600",
            "#ca3838"
        ],
        "seg1": "",
        "seg2": "",
        "x": 1130,
        "y": 420,
        "wires": []
    },
    {
        "id": "15b6bb1f.a85515",
        "type": "function",
        "z": "7fe9098.21bfff8",
        "name": "Data format overall battery",
        "func": " var msg_V1 = {payload: msg.payload[msg.payload.length - 1].V1};\n var msg_V2 = {payload: msg.payload[msg.payload.length - 1].V2};\n var msg_V3 = {payload: msg.payload[msg.payload.length - 1].V3};\n var msg_I1 = {payload: msg.payload[msg.payload.length - 1].I1};\n var msg_I2 = {payload: msg.payload[msg.payload.length - 1].I2};\n var msg_I3 = {payload: msg.payload[msg.payload.length - 1].I3};\n var msg_P1 = {payload: msg.payload[msg.payload.length - 1].P1};\n var msg_P2 = {payload: msg.payload[msg.payload.length - 1].P2};\n var msg_P3 = {payload: msg.payload[msg.payload.length - 1].P3};\n var msg_F = {payload: msg.payload[msg.payload.length - 1].F};\n \n return [msg_V1, msg_V2, msg_V3, msg_I1, msg_I2, msg_I3, msg_P1, msg_P2, msg_P3, msg_F];",
        "outputs": 10,
        "noerr": 0,
        "x": 820,
        "y": 580,
        "wires": [
            [
                "2119bc19.ec0dd4"
            ],
            [
                "e1330afa.ad8758"
            ],
            [
                "537d94a8.6f450c"
            ],
            [
                "6c247a54.06d264"
            ],
            [
                "fac9bf12.46ee2"
            ],
            [
                "2759684d.aa9818"
            ],
            [
                "ece19062.f5726"
            ],
            [
                "ff440bdc.edcdd8"
            ],
            [
                "8afdc68a.f83588"
            ],
            [
                "7d673e3b.496a1"
            ]
        ]
    },
    {
        "id": "4cee0ade.616e04",
        "type": "function",
        "z": "7fe9098.21bfff8",
        "name": "Data format overall grid",
        "func": " var msg_V1 = {payload: msg.payload[msg.payload.length - 1].V1};\n var msg_V2 = {payload: msg.payload[msg.payload.length - 1].V2};\n var msg_V3 = {payload: msg.payload[msg.payload.length - 1].V3};\n var msg_I1 = {payload: msg.payload[msg.payload.length - 1].I1};\n var msg_I2 = {payload: msg.payload[msg.payload.length - 1].I2};\n var msg_I3 = {payload: msg.payload[msg.payload.length - 1].I3};\n var msg_P1 = {payload: msg.payload[msg.payload.length - 1].P1};\n var msg_P2 = {payload: msg.payload[msg.payload.length - 1].P2};\n var msg_P3 = {payload: msg.payload[msg.payload.length - 1].P3};\n var msg_F = {payload: msg.payload[msg.payload.length - 1].F};\n \n return [msg_V1, msg_V2, msg_V3, msg_I1, msg_I2, msg_I3, msg_P1, msg_P2, msg_P3, msg_F];",
        "outputs": 10,
        "noerr": 0,
        "x": 810,
        "y": 1000,
        "wires": [
            [
                "1e9d2534.ad121b"
            ],
            [
                "bcfa3aa2.770b08"
            ],
            [
                "93277992.70eb18"
            ],
            [
                "c2c9a9d4.ebd9c8"
            ],
            [
                "5a6001a9.a4fe4"
            ],
            [
                "35c83ce0.233874"
            ],
            [
                "91c449fd.46c258"
            ],
            [
                "1c752de6.cebab2"
            ],
            [
                "22921805.66ca88"
            ],
            [
                "118d30cb.faa16f"
            ]
        ]
    },
    {
        "id": "c1f7777a.489598",
        "type": "ui_text",
        "z": "7fe9098.21bfff8",
        "group": "18a07384.7d320c",
        "order": 1,
        "width": 7,
        "height": 1,
        "name": "",
        "label": "Voltage phase 1",
        "format": "{{msg.payload}}",
        "layout": "row-spread",
        "x": 1140,
        "y": 60,
        "wires": []
    },
    {
        "id": "8b0bb482.5cf258",
        "type": "ui_text",
        "z": "7fe9098.21bfff8",
        "group": "18a07384.7d320c",
        "order": 2,
        "width": 1,
        "height": 1,
        "name": "",
        "label": "[V]",
        "format": "{{msg.payload}}",
        "layout": "row-spread",
        "x": 1290,
        "y": 60,
        "wires": []
    },
    {
        "id": "c1df83df.d29",
        "type": "ui_text",
        "z": "7fe9098.21bfff8",
        "group": "18a07384.7d320c",
        "order": 4,
        "width": 7,
        "height": 1,
        "name": "",
        "label": "Voltage phase 2",
        "format": "{{msg.payload}}",
        "layout": "row-spread",
        "x": 1140,
        "y": 100,
        "wires": []
    },
    {
        "id": "e87916d7.8add38",
        "type": "ui_text",
        "z": "7fe9098.21bfff8",
        "group": "18a07384.7d320c",
        "order": 5,
        "width": 1,
        "height": 1,
        "name": "",
        "label": "[V]",
        "format": "{{msg.payload}}",
        "layout": "row-spread",
        "x": 1290,
        "y": 100,
        "wires": []
    },
    {
        "id": "ef827f90.e5df",
        "type": "ui_text",
        "z": "7fe9098.21bfff8",
        "group": "18a07384.7d320c",
        "order": 7,
        "width": 7,
        "height": 1,
        "name": "",
        "label": "Voltage phase 3",
        "format": "{{msg.payload}}",
        "layout": "row-spread",
        "x": 1140,
        "y": 140,
        "wires": []
    },
    {
        "id": "e17d9072.6711",
        "type": "ui_text",
        "z": "7fe9098.21bfff8",
        "group": "18a07384.7d320c",
        "order": 8,
        "width": 1,
        "height": 1,
        "name": "",
        "label": "[V]",
        "format": "{{msg.payload}}",
        "layout": "row-spread",
        "x": 1290,
        "y": 140,
        "wires": []
    },
    {
        "id": "3a29846a.72b00c",
        "type": "ui_text",
        "z": "7fe9098.21bfff8",
        "group": "18a07384.7d320c",
        "order": 11,
        "width": 7,
        "height": 1,
        "name": "",
        "label": "Current phase 1",
        "format": "{{msg.payload}}",
        "layout": "row-spread",
        "x": 1140,
        "y": 180,
        "wires": []
    },
    {
        "id": "f5a082d5.dcd96",
        "type": "ui_text",
        "z": "7fe9098.21bfff8",
        "group": "18a07384.7d320c",
        "order": 15,
        "width": 1,
        "height": 1,
        "name": "",
        "label": "[A]",
        "format": "{{msg.payload}}",
        "layout": "row-spread",
        "x": 1290,
        "y": 180,
        "wires": []
    },
    {
        "id": "7f887d80.b9fdf4",
        "type": "ui_text",
        "z": "7fe9098.21bfff8",
        "group": "18a07384.7d320c",
        "order": 18,
        "width": 1,
        "height": 1,
        "name": "",
        "label": "[A]",
        "format": "{{msg.payload}}",
        "layout": "row-spread",
        "x": 1290,
        "y": 220,
        "wires": []
    },
    {
        "id": "a00461b1.3d5d1",
        "type": "ui_text",
        "z": "7fe9098.21bfff8",
        "group": "18a07384.7d320c",
        "order": 12,
        "width": 1,
        "height": 1,
        "name": "",
        "label": "[A]",
        "format": "{{msg.payload}}",
        "layout": "row-spread",
        "x": 1290,
        "y": 260,
        "wires": []
    },
    {
        "id": "e61d66cf.85b108",
        "type": "ui_text",
        "z": "7fe9098.21bfff8",
        "group": "18a07384.7d320c",
        "order": 14,
        "width": 7,
        "height": 1,
        "name": "",
        "label": "Current phase 2",
        "format": "{{msg.payload}}",
        "layout": "row-spread",
        "x": 1140,
        "y": 220,
        "wires": []
    },
    {
        "id": "f03fa02a.6844f",
        "type": "ui_text",
        "z": "7fe9098.21bfff8",
        "group": "18a07384.7d320c",
        "order": 17,
        "width": 7,
        "height": 1,
        "name": "",
        "label": "Current phase 3",
        "format": "{{msg.payload}}",
        "layout": "row-spread",
        "x": 1140,
        "y": 260,
        "wires": []
    },
    {
        "id": "dbc9954f.513ff8",
        "type": "ui_text",
        "z": "7fe9098.21bfff8",
        "group": "18a07384.7d320c",
        "order": 21,
        "width": 7,
        "height": 1,
        "name": "",
        "label": "Power phase 1",
        "format": "{{msg.payload}}",
        "layout": "row-spread",
        "x": 1140,
        "y": 300,
        "wires": []
    },
    {
        "id": "5c383cc8.be8a64",
        "type": "ui_text",
        "z": "7fe9098.21bfff8",
        "group": "18a07384.7d320c",
        "order": 22,
        "width": 1,
        "height": 1,
        "name": "",
        "label": "[W]",
        "format": "{{msg.payload}}",
        "layout": "row-spread",
        "x": 1290,
        "y": 300,
        "wires": []
    },
    {
        "id": "d42e7161.c300e",
        "type": "ui_text",
        "z": "7fe9098.21bfff8",
        "group": "18a07384.7d320c",
        "order": 25,
        "width": 1,
        "height": 1,
        "name": "",
        "label": "[W]",
        "format": "{{msg.payload}}",
        "layout": "row-spread",
        "x": 1290,
        "y": 340,
        "wires": []
    },
    {
        "id": "d5dfbcb0.27739",
        "type": "ui_text",
        "z": "7fe9098.21bfff8",
        "group": "18a07384.7d320c",
        "order": 28,
        "width": 1,
        "height": 1,
        "name": "",
        "label": "[W]",
        "format": "{{msg.payload}}",
        "layout": "row-spread",
        "x": 1290,
        "y": 380,
        "wires": []
    },
    {
        "id": "3420446c.6ef28c",
        "type": "ui_text",
        "z": "7fe9098.21bfff8",
        "group": "18a07384.7d320c",
        "order": 24,
        "width": 7,
        "height": 1,
        "name": "",
        "label": "Power phase 2",
        "format": "{{msg.payload}}",
        "layout": "row-spread",
        "x": 1140,
        "y": 340,
        "wires": []
    },
    {
        "id": "f31adde.8d1a22",
        "type": "ui_text",
        "z": "7fe9098.21bfff8",
        "group": "18a07384.7d320c",
        "order": 27,
        "width": 7,
        "height": 1,
        "name": "",
        "label": "Power phase 3",
        "format": "{{msg.payload}}",
        "layout": "row-spread",
        "x": 1140,
        "y": 380,
        "wires": []
    },
    {
        "id": "7d673e3b.496a1",
        "type": "ui_gauge",
        "z": "7fe9098.21bfff8",
        "name": "",
        "group": "8bfe8745.735b78",
        "order": 30,
        "width": 9,
        "height": 4,
        "gtype": "gage",
        "title": "Frequency",
        "label": "Hz",
        "format": "{{value | number:3}}",
        "min": "45.0",
        "max": "55.0",
        "colors": [
            "#00b500",
            "#e6e600",
            "#ca3838"
        ],
        "seg1": "",
        "seg2": "",
        "x": 1130,
        "y": 840,
        "wires": []
    },
    {
        "id": "2119bc19.ec0dd4",
        "type": "ui_text",
        "z": "7fe9098.21bfff8",
        "group": "8bfe8745.735b78",
        "order": 1,
        "width": 7,
        "height": 1,
        "name": "",
        "label": "Voltage phase 1",
        "format": "{{msg.payload}}",
        "layout": "row-spread",
        "x": 1140,
        "y": 480,
        "wires": []
    },
    {
        "id": "bd6da5c2.68a5f8",
        "type": "ui_text",
        "z": "7fe9098.21bfff8",
        "group": "8bfe8745.735b78",
        "order": 2,
        "width": 1,
        "height": 1,
        "name": "",
        "label": "[V]",
        "format": "{{msg.payload}}",
        "layout": "row-spread",
        "x": 1290,
        "y": 480,
        "wires": []
    },
    {
        "id": "e1330afa.ad8758",
        "type": "ui_text",
        "z": "7fe9098.21bfff8",
        "group": "8bfe8745.735b78",
        "order": 4,
        "width": 7,
        "height": 1,
        "name": "",
        "label": "Voltage phase 2",
        "format": "{{msg.payload}}",
        "layout": "row-spread",
        "x": 1140,
        "y": 520,
        "wires": []
    },
    {
        "id": "e1afff7c.014ca",
        "type": "ui_text",
        "z": "7fe9098.21bfff8",
        "group": "8bfe8745.735b78",
        "order": 5,
        "width": 1,
        "height": 1,
        "name": "",
        "label": "[V]",
        "format": "{{msg.payload}}",
        "layout": "row-spread",
        "x": 1290,
        "y": 520,
        "wires": []
    },
    {
        "id": "537d94a8.6f450c",
        "type": "ui_text",
        "z": "7fe9098.21bfff8",
        "group": "8bfe8745.735b78",
        "order": 7,
        "width": 7,
        "height": 1,
        "name": "",
        "label": "Voltage phase 3",
        "format": "{{msg.payload}}",
        "layout": "row-spread",
        "x": 1140,
        "y": 560,
        "wires": []
    },
    {
        "id": "16e0b749.4e2b19",
        "type": "ui_text",
        "z": "7fe9098.21bfff8",
        "group": "8bfe8745.735b78",
        "order": 8,
        "width": 1,
        "height": 1,
        "name": "",
        "label": "[V]",
        "format": "{{msg.payload}}",
        "layout": "row-spread",
        "x": 1290,
        "y": 560,
        "wires": []
    },
    {
        "id": "6c247a54.06d264",
        "type": "ui_text",
        "z": "7fe9098.21bfff8",
        "group": "8bfe8745.735b78",
        "order": 11,
        "width": 7,
        "height": 1,
        "name": "",
        "label": "Current phase 1",
        "format": "{{msg.payload}}",
        "layout": "row-spread",
        "x": 1140,
        "y": 600,
        "wires": []
    },
    {
        "id": "ed2d992f.e5a4f8",
        "type": "ui_text",
        "z": "7fe9098.21bfff8",
        "group": "8bfe8745.735b78",
        "order": 18,
        "width": 1,
        "height": 1,
        "name": "",
        "label": "[A]",
        "format": "{{msg.payload}}",
        "layout": "row-spread",
        "x": 1290,
        "y": 600,
        "wires": []
    },
    {
        "id": "88117212.a9923",
        "type": "ui_text",
        "z": "7fe9098.21bfff8",
        "group": "8bfe8745.735b78",
        "order": 12,
        "width": 1,
        "height": 1,
        "name": "",
        "label": "[A]",
        "format": "{{msg.payload}}",
        "layout": "row-spread",
        "x": 1290,
        "y": 640,
        "wires": []
    },
    {
        "id": "fbf82f3d.8df54",
        "type": "ui_text",
        "z": "7fe9098.21bfff8",
        "group": "8bfe8745.735b78",
        "order": 15,
        "width": 1,
        "height": 1,
        "name": "",
        "label": "[A]",
        "format": "{{msg.payload}}",
        "layout": "row-spread",
        "x": 1290,
        "y": 680,
        "wires": []
    },
    {
        "id": "fac9bf12.46ee2",
        "type": "ui_text",
        "z": "7fe9098.21bfff8",
        "group": "8bfe8745.735b78",
        "order": 14,
        "width": 7,
        "height": 1,
        "name": "",
        "label": "Current phase 2",
        "format": "{{msg.payload}}",
        "layout": "row-spread",
        "x": 1140,
        "y": 640,
        "wires": []
    },
    {
        "id": "2759684d.aa9818",
        "type": "ui_text",
        "z": "7fe9098.21bfff8",
        "group": "8bfe8745.735b78",
        "order": 17,
        "width": 7,
        "height": 1,
        "name": "",
        "label": "Current phase 3",
        "format": "{{msg.payload}}",
        "layout": "row-spread",
        "x": 1140,
        "y": 680,
        "wires": []
    },
    {
        "id": "ece19062.f5726",
        "type": "ui_text",
        "z": "7fe9098.21bfff8",
        "group": "8bfe8745.735b78",
        "order": 21,
        "width": 7,
        "height": 1,
        "name": "",
        "label": "Power phase 1",
        "format": "{{msg.payload}}",
        "layout": "row-spread",
        "x": 1140,
        "y": 720,
        "wires": []
    },
    {
        "id": "9dddccad.2cc4f",
        "type": "ui_text",
        "z": "7fe9098.21bfff8",
        "group": "8bfe8745.735b78",
        "order": 22,
        "width": 1,
        "height": 1,
        "name": "",
        "label": "[W]",
        "format": "{{msg.payload}}",
        "layout": "row-spread",
        "x": 1290,
        "y": 720,
        "wires": []
    },
    {
        "id": "21cab8a2.cbeee8",
        "type": "ui_text",
        "z": "7fe9098.21bfff8",
        "group": "8bfe8745.735b78",
        "order": 25,
        "width": 1,
        "height": 1,
        "name": "",
        "label": "[W]",
        "format": "{{msg.payload}}",
        "layout": "row-spread",
        "x": 1290,
        "y": 760,
        "wires": []
    },
    {
        "id": "30f8331a.ad39ec",
        "type": "ui_text",
        "z": "7fe9098.21bfff8",
        "group": "8bfe8745.735b78",
        "order": 28,
        "width": 1,
        "height": 1,
        "name": "",
        "label": "[W]",
        "format": "{{msg.payload}}",
        "layout": "row-spread",
        "x": 1290,
        "y": 800,
        "wires": []
    },
    {
        "id": "ff440bdc.edcdd8",
        "type": "ui_text",
        "z": "7fe9098.21bfff8",
        "group": "8bfe8745.735b78",
        "order": 24,
        "width": 7,
        "height": 1,
        "name": "",
        "label": "Power phase 2",
        "format": "{{msg.payload}}",
        "layout": "row-spread",
        "x": 1140,
        "y": 760,
        "wires": []
    },
    {
        "id": "8afdc68a.f83588",
        "type": "ui_text",
        "z": "7fe9098.21bfff8",
        "group": "8bfe8745.735b78",
        "order": 27,
        "width": 7,
        "height": 1,
        "name": "",
        "label": "Power phase 3",
        "format": "{{msg.payload}}",
        "layout": "row-spread",
        "x": 1140,
        "y": 800,
        "wires": []
    },
    {
        "id": "118d30cb.faa16f",
        "type": "ui_gauge",
        "z": "7fe9098.21bfff8",
        "name": "",
        "group": "3ab13b54.a45af4",
        "order": 30,
        "width": 9,
        "height": 4,
        "gtype": "gage",
        "title": "Frequency",
        "label": "Hz",
        "format": "{{value | number:3}}",
        "min": "45.0",
        "max": "55.0",
        "colors": [
            "#00b500",
            "#e6e600",
            "#ca3838"
        ],
        "seg1": "",
        "seg2": "",
        "x": 1130,
        "y": 1260,
        "wires": []
    },
    {
        "id": "1e9d2534.ad121b",
        "type": "ui_text",
        "z": "7fe9098.21bfff8",
        "group": "3ab13b54.a45af4",
        "order": 1,
        "width": 7,
        "height": 1,
        "name": "",
        "label": "Voltage phase 1",
        "format": "{{msg.payload}}",
        "layout": "row-spread",
        "x": 1140,
        "y": 900,
        "wires": []
    },
    {
        "id": "f37d6bf8.e775a8",
        "type": "ui_text",
        "z": "7fe9098.21bfff8",
        "group": "3ab13b54.a45af4",
        "order": 2,
        "width": 1,
        "height": 1,
        "name": "",
        "label": "[V]",
        "format": "{{msg.payload}}",
        "layout": "row-spread",
        "x": 1290,
        "y": 900,
        "wires": []
    },
    {
        "id": "bcfa3aa2.770b08",
        "type": "ui_text",
        "z": "7fe9098.21bfff8",
        "group": "3ab13b54.a45af4",
        "order": 4,
        "width": 7,
        "height": 1,
        "name": "",
        "label": "Voltage phase 2",
        "format": "{{msg.payload}}",
        "layout": "row-spread",
        "x": 1140,
        "y": 940,
        "wires": []
    },
    {
        "id": "e6df6752.c94458",
        "type": "ui_text",
        "z": "7fe9098.21bfff8",
        "group": "3ab13b54.a45af4",
        "order": 5,
        "width": 1,
        "height": 1,
        "name": "",
        "label": "[V]",
        "format": "{{msg.payload}}",
        "layout": "row-spread",
        "x": 1290,
        "y": 940,
        "wires": []
    },
    {
        "id": "93277992.70eb18",
        "type": "ui_text",
        "z": "7fe9098.21bfff8",
        "group": "3ab13b54.a45af4",
        "order": 7,
        "width": 7,
        "height": 1,
        "name": "",
        "label": "Voltage phase 3",
        "format": "{{msg.payload}}",
        "layout": "row-spread",
        "x": 1140,
        "y": 980,
        "wires": []
    },
    {
        "id": "bbb9959c.c7a968",
        "type": "ui_text",
        "z": "7fe9098.21bfff8",
        "group": "3ab13b54.a45af4",
        "order": 8,
        "width": 1,
        "height": 1,
        "name": "",
        "label": "[V]",
        "format": "{{msg.payload}}",
        "layout": "row-spread",
        "x": 1290,
        "y": 980,
        "wires": []
    },
    {
        "id": "c2c9a9d4.ebd9c8",
        "type": "ui_text",
        "z": "7fe9098.21bfff8",
        "group": "3ab13b54.a45af4",
        "order": 11,
        "width": 7,
        "height": 1,
        "name": "",
        "label": "Current phase 1",
        "format": "{{msg.payload}}",
        "layout": "row-spread",
        "x": 1140,
        "y": 1020,
        "wires": []
    },
    {
        "id": "8827e5e3.27a258",
        "type": "ui_text",
        "z": "7fe9098.21bfff8",
        "group": "3ab13b54.a45af4",
        "order": 18,
        "width": 1,
        "height": 1,
        "name": "",
        "label": "[A]",
        "format": "{{msg.payload}}",
        "layout": "row-spread",
        "x": 1290,
        "y": 1020,
        "wires": []
    },
    {
        "id": "8e1b798a.5c0658",
        "type": "ui_text",
        "z": "7fe9098.21bfff8",
        "group": "3ab13b54.a45af4",
        "order": 12,
        "width": 1,
        "height": 1,
        "name": "",
        "label": "[A]",
        "format": "{{msg.payload}}",
        "layout": "row-spread",
        "x": 1290,
        "y": 1060,
        "wires": []
    },
    {
        "id": "4900d.701a1ff38",
        "type": "ui_text",
        "z": "7fe9098.21bfff8",
        "group": "3ab13b54.a45af4",
        "order": 15,
        "width": 1,
        "height": 1,
        "name": "",
        "label": "[A]",
        "format": "{{msg.payload}}",
        "layout": "row-spread",
        "x": 1290,
        "y": 1100,
        "wires": []
    },
    {
        "id": "5a6001a9.a4fe4",
        "type": "ui_text",
        "z": "7fe9098.21bfff8",
        "group": "3ab13b54.a45af4",
        "order": 14,
        "width": 7,
        "height": 1,
        "name": "",
        "label": "Current phase 2",
        "format": "{{msg.payload}}",
        "layout": "row-spread",
        "x": 1140,
        "y": 1060,
        "wires": []
    },
    {
        "id": "35c83ce0.233874",
        "type": "ui_text",
        "z": "7fe9098.21bfff8",
        "group": "3ab13b54.a45af4",
        "order": 17,
        "width": 7,
        "height": 1,
        "name": "",
        "label": "Current phase 3",
        "format": "{{msg.payload}}",
        "layout": "row-spread",
        "x": 1140,
        "y": 1100,
        "wires": []
    },
    {
        "id": "91c449fd.46c258",
        "type": "ui_text",
        "z": "7fe9098.21bfff8",
        "group": "3ab13b54.a45af4",
        "order": 21,
        "width": 7,
        "height": 1,
        "name": "",
        "label": "Power phase 1",
        "format": "{{msg.payload}}",
        "layout": "row-spread",
        "x": 1140,
        "y": 1140,
        "wires": []
    },
    {
        "id": "1de6d4c.a2b622b",
        "type": "ui_text",
        "z": "7fe9098.21bfff8",
        "group": "3ab13b54.a45af4",
        "order": 22,
        "width": 1,
        "height": 1,
        "name": "",
        "label": "[W]",
        "format": "{{msg.payload}}",
        "layout": "row-spread",
        "x": 1290,
        "y": 1140,
        "wires": []
    },
    {
        "id": "d2234684.a03128",
        "type": "ui_text",
        "z": "7fe9098.21bfff8",
        "group": "3ab13b54.a45af4",
        "order": 25,
        "width": 1,
        "height": 1,
        "name": "",
        "label": "[W]",
        "format": "{{msg.payload}}",
        "layout": "row-spread",
        "x": 1290,
        "y": 1180,
        "wires": []
    },
    {
        "id": "3ca38bdf.80f024",
        "type": "ui_text",
        "z": "7fe9098.21bfff8",
        "group": "3ab13b54.a45af4",
        "order": 28,
        "width": 1,
        "height": 1,
        "name": "",
        "label": "[W]",
        "format": "{{msg.payload}}",
        "layout": "row-spread",
        "x": 1290,
        "y": 1220,
        "wires": []
    },
    {
        "id": "1c752de6.cebab2",
        "type": "ui_text",
        "z": "7fe9098.21bfff8",
        "group": "3ab13b54.a45af4",
        "order": 24,
        "width": 7,
        "height": 1,
        "name": "",
        "label": "Power phase 2",
        "format": "{{msg.payload}}",
        "layout": "row-spread",
        "x": 1140,
        "y": 1180,
        "wires": []
    },
    {
        "id": "22921805.66ca88",
        "type": "ui_text",
        "z": "7fe9098.21bfff8",
        "group": "3ab13b54.a45af4",
        "order": 27,
        "width": 7,
        "height": 1,
        "name": "",
        "label": "Power phase 3",
        "format": "{{msg.payload}}",
        "layout": "row-spread",
        "x": 1140,
        "y": 1220,
        "wires": []
    },
    {
        "id": "af98840b.971cd8",
        "type": "sqlite",
        "z": "49f6a65a.0777d8",
        "mydb": "9befc88e.28ef18",
        "sqlquery": "fixed",
        "sql": "SELECT * FROM measurements  WHERE socketId=1 ORDER BY rowid DESC LIMIT 1;\n",
        "name": "MeasuredData",
        "x": 380,
        "y": 680,
        "wires": [
            [
                "cd51cb77.1f3308"
            ]
        ]
    },
    {
        "id": "21f23f90.16eb4",
        "type": "debug",
        "z": "49f6a65a.0777d8",
        "name": "socket 1",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "x": 680,
        "y": 600,
        "wires": []
    },
    {
        "id": "3ee8e161.c552ce",
        "type": "inject",
        "z": "49f6a65a.0777d8",
        "name": "",
        "topic": "1",
        "payload": "",
        "payloadType": "date",
        "repeat": "10",
        "crontab": "",
        "once": true,
        "onceDelay": 0.1,
        "x": 140,
        "y": 1100,
        "wires": [
            [
                "aee437b.1052ec8",
                "af98840b.971cd8",
                "81654751.2116d8",
                "aa8d2ef1.6fabf"
            ]
        ]
    },
    {
        "id": "ae7c2563.1f6be8",
        "type": "ui_chart",
        "z": "49f6a65a.0777d8",
        "name": "",
        "group": "23f9abd1.a832d4",
        "order": 1,
        "width": 0,
        "height": 0,
        "label": "Voltage C1 (V)",
        "chartType": "line",
        "legend": "true",
        "xformat": "HH:mm:ss",
        "interpolate": "linear",
        "nodata": "",
        "dot": true,
        "ymin": "",
        "ymax": "",
        "removeOlder": "10",
        "removeOlderPoints": "10",
        "removeOlderUnit": "60",
        "cutout": 0,
        "useOneColor": false,
        "useUTC": false,
        "colors": [
            "#1f77b4",
            "#aec7e8",
            "#ff7f0e",
            "#2ca02c",
            "#98df8a",
            "#d62728",
            "#ff9896",
            "#9467bd",
            "#c5b0d5"
        ],
        "useOldStyle": false,
        "outputs": 1,
        "x": 920,
        "y": 480,
        "wires": [
            []
        ]
    },
    {
        "id": "5e80f99c.ca6af8",
        "type": "function",
        "z": "49f6a65a.0777d8",
        "name": "Data format 1",
        "func": "//  var offset = context.get(\"offset\")||7200;\n//  if (msg.topic == \"timezone\") {\n//      offset =  msg.payload;\n//      context.set(\"offset\", offset);\n//      return null;\n//  }\n\n//  //  \n//  // Create a data variable   \n//  //  \n//  var i = 0;\n//  var series_V1 = [\"V1\"];  \n//  var labels_V1 = [\"Data Values\"];  \n//  var data_V1 = \"[[\";  \n   \n//  for (i=0; i < msg.payload.length; i++) {  \n//   data_V1 += '{ \"x\":' + ((offset+parseInt(msg.payload[i].Time))*1000).toString() + ', \"y\":' + msg.payload[i].V1 + '}';  \n//   if (i < (msg.payload.length - 1)) {  \n//      data_V1 += \",\"  \n//   } else {  \n//      data_V1 += \"]]\"  \n//   }  \n//  }  \n//  var jsondata_V1 = JSON.parse(data_V1);\n \n//  var msg_V1 = {\n//      payload : [{\"series\": series_V1, \"data\": jsondata_V1, \"labels\": labels_V1}],\n//      topic : \"V1\"\n//  }\n \n//  var series_V2 = [\"V2\"];  \n//  var labels_V2 = [\"Data Values\"];  \n//  var data_V2 = \"[[\";  \n   \n//  for (i=0; i < msg.payload.length; i++) {  \n//   data_V2 += '{ \"x\":' + ((offset+parseInt(msg.payload[i].Time))*1000).toString() + ', \"y\":' + msg.payload[i].V2 + '}';  \n//   if (i < (msg.payload.length - 1)) {  \n//      data_V2 += \",\"  \n//   } else {  \n//      data_V2 += \"]]\"  \n//   }  \n//  }  \n//  var jsondata_V2 = JSON.parse(data_V2);\n \n//  var msg_V2 = {\n//      payload : [{\"series\": series_V2, \"data\": jsondata_V2, \"labels\": labels_V2}],\n//      topic : \"V2\"\n//  }\n   \n//  var series_V3 = [\"V3\"];  \n//  var labels_V3 = [\"Data Values\"];  \n//  var data_V3 = \"[[\";  \n   \n//  for (i=0; i < msg.payload.length; i++) {  \n//   data_V3 += '{ \"x\":' + ((offset+parseInt(msg.payload[i].Time))*1000).toString() + ', \"y\":' + msg.payload[i].V3 + '}';  \n//   if (i < (msg.payload.length - 1)) {  \n//      data_V3 += \",\"  \n//   } else {  \n//      data_V3 += \"]]\"  \n//   }  \n//  }  \n//  var jsondata_V3 = JSON.parse(data_V3);\n \n//  var msg_V3 = {\n//      payload : [{\"series\": series_V3, \"data\": jsondata_V3, \"labels\": labels_V3}],\n//      topic : \"V3\"\n//  }\n \n//  var series_I1 = [\"I1\"];  \n//  var labels_I1 = [\"Data Values\"];  \n//  var data_I1 = \"[[\";  \n   \n//  for (i=0; i < msg.payload.length; i++) {  \n//   data_I1 += '{ \"x\":' + ((offset+parseInt(msg.payload[i].Time))*1000).toString() + ', \"y\":' + msg.payload[i].I1 + '}';  \n//   if (i < (msg.payload.length - 1)) {  \n//      data_I1 += \",\"  \n//   } else {  \n//      data_I1 += \"]]\"  \n//   }  \n//  }  \n//  var jsondata_I1 = JSON.parse(data_I1);\n \n//  var msg_I1 = {\n//      payload : [{\"series\": series_I1, \"data\": jsondata_I1, \"labels\": labels_I1}],\n//      topic : \"I1\"\n//  }\n \n//  var series_I2 = [\"I2\"];  \n//  var labels_I2 = [\"Data Values\"];  \n//  var data_I2 = \"[[\";  \n   \n//  for (i=0; i < msg.payload.length; i++) {  \n//   data_I2 += '{ \"x\":' + ((offset+parseInt(msg.payload[i].Time))*1000).toString() + ', \"y\":' + msg.payload[i].I2 + '}';  \n//   if (i < (msg.payload.length - 1)) {  \n//      data_I2 += \",\"  \n//   } else {  \n//      data_I2 += \"]]\"  \n//   }  \n//  }  \n//  var jsondata_I2 = JSON.parse(data_I2);\n \n//  var msg_I2 = {\n//      payload : [{\"series\": series_I2, \"data\": jsondata_I2, \"labels\": labels_I2}],\n//      topic : \"I2\"\n//  }\n \n//  var series_I3= [\"I3\"];  \n//  var labels_I3 = [\"Data Values\"];  \n//  var data_I3 = \"[[\";  \n   \n//  for (i=0; i < msg.payload.length; i++) {  \n//   data_I3 += '{ \"x\":' + ((offset+parseInt(msg.payload[i].Time))*1000).toString() + ', \"y\":' + msg.payload[i].I3 + '}';  \n//   if (i < (msg.payload.length - 1)) {  \n//      data_I3 += \",\"  \n//   } else {  \n//      data_I3 += \"]]\"  \n//   }  \n//  }  \n//  var jsondata_I3 = JSON.parse(data_I3);\n \n//  var msg_I3 = {\n//      payload : [{\"series\": series_I3, \"data\": jsondata_I3, \"labels\": labels_I3}],\n//      topic : \"I3\"\n//  }\n \n//  var series_P = [\"P\"];  \n//  var labels_P = [\"Data Values\"];  \n//  var data_P = \"[[\";  \n   \n//  for (i=0; i < msg.payload.length; i++) {  \n//   data_P += '{ \"x\":' + ((offset+parseInt(msg.payload[i].Time))*1000).toString() + ', \"y\":' + msg.payload[i].P + '}';  \n//   if (i < (msg.payload.length - 1)) {  \n//      data_P += \",\"  \n//   } else {  \n//      data_P += \"]]\"  \n//   }  \n//  }  \n//  var jsondata_P = JSON.parse(data_P);\n \n//  var msg_P = {\n//      payload : [{\"series\": series_P, \"data\": jsondata_P, \"labels\": labels_P}],\n//      topic : \"P\"\n//  }\n \n//  //var series_F = [\"F\"];  \n//  //var labels_F = [\"Data Values\"];  \n \n//  //var data_F = (msg.payload[(msg.payload).length]).F;\n//  //var data_F = '50';\n//  //var jsondata_F = JSON.parse(data_F);\n \n//  var msg_F = {payload: msg.payload[msg.payload.length - 1].F};\n \n//  return [msg_V1, msg_V2, msg_V3, msg_I1, msg_I2, msg_I3, msg_P, msg_F];\n\nlet upper_V = 260;\nlet lower_V = 180;\nlet upper_I = 100;\n\nif (msg.payload === false)\n    {\n    var msg_V1 = {topic:\"V1\", payload: null};\n    var msg_V2 = {topic:\"V2\", payload: null};\n    var msg_V3 = {topic:\"V3\", payload: null}; \n    var msg_I1 = {topic:\"I1\", payload: null};\n    var msg_I2 = {topic:\"I2\", payload: null};\n    var msg_I3 = {topic:\"I3\", payload: null}; \n    var msg_F  = {payload: null};\n    }\n else\n    {\n    if (Number(msg.payload[msg.payload.length - 1].V1) > upper_V)\n        var msg_V1 = {topic:\"V1\", payload: upper_V};\n    else if (Number(msg.payload[msg.payload.length - 1].V1) < lower_V)\n        var msg_V1 = {topic:\"V1\", payload: lower_V};\n    else\n        var msg_V1 = {topic:\"V1\", payload: msg.payload[msg.payload.length - 1].V1};\n        \n    if (Number(msg.payload[msg.payload.length - 1].V2) > upper_V)\n        var msg_V2 = {topic:\"V2\", payload: upper_V};\n    else if (Number(msg.payload[msg.payload.length - 1].V2) < lower_V)\n        var msg_V2 = {topic:\"V2\", payload: lower_V};\n    else\n        var msg_V2 = {topic:\"V2\", payload: msg.payload[msg.payload.length - 1].V2};\n        \n    if (Number(msg.payload[msg.payload.length - 1].V3) > upper_V)\n        var msg_V3 = {topic:\"V3\", payload: upper_V};\n    else if (Number(msg.payload[msg.payload.length - 1].V3) < lower_V)\n        var msg_V3 = {topic:\"V3\", payload: lower_V};\n    else\n        var msg_V3 = {topic:\"V3\", payload: msg.payload[msg.payload.length - 1].V3};\n    \n    if (Number(msg.payload[msg.payload.length - 1].I1) > upper_I)\n        var msg_I1 = {topic:\"I1\", payload: upper_I};\n    else\n        var msg_I1 = {topic:\"I1\", payload: msg.payload[msg.payload.length - 1].I1};\n    \n    if (Number(msg.payload[msg.payload.length - 1].I2) > upper_I)\n        var msg_I2 = {topic:\"I2\", payload: upper_I};\n    else\n        var msg_I2 = {topic:\"I2\", payload: msg.payload[msg.payload.length - 1].I2};\n        \n    if (Number(msg.payload[msg.payload.length - 1].I3) > upper_I)\n        var msg_I3 = {topic:\"I3\", payload: upper_I};\n    else\n        var msg_I3 = {topic:\"I3\", payload: msg.payload[msg.payload.length - 1].I3};\n    \n     \n    var msg_F  = {payload: msg.payload[msg.payload.length - 1].F};\n    }\nreturn [msg_V1, msg_V2, msg_V3, msg_I1, msg_I2, msg_I3, msg_F];",
        "outputs": 7,
        "noerr": 0,
        "x": 700,
        "y": 520,
        "wires": [
            [
                "ae7c2563.1f6be8"
            ],
            [
                "ae7c2563.1f6be8"
            ],
            [
                "ae7c2563.1f6be8"
            ],
            [
                "40ac124f.67ac6c"
            ],
            [
                "40ac124f.67ac6c"
            ],
            [
                "40ac124f.67ac6c"
            ],
            [
                "40289ffc.a6ad9"
            ]
        ]
    },
    {
        "id": "40ac124f.67ac6c",
        "type": "ui_chart",
        "z": "49f6a65a.0777d8",
        "name": "",
        "group": "23f9abd1.a832d4",
        "order": 1,
        "width": 0,
        "height": 0,
        "label": "Current C1 (A)",
        "chartType": "line",
        "legend": "true",
        "xformat": "HH:mm:ss",
        "interpolate": "linear",
        "nodata": "",
        "dot": true,
        "ymin": "",
        "ymax": "",
        "removeOlder": "10",
        "removeOlderPoints": "10",
        "removeOlderUnit": "60",
        "cutout": 0,
        "useOneColor": false,
        "useUTC": false,
        "colors": [
            "#1f77b4",
            "#aec7e8",
            "#ff7f0e",
            "#2ca02c",
            "#98df8a",
            "#d62728",
            "#ff9896",
            "#9467bd",
            "#c5b0d5"
        ],
        "useOldStyle": false,
        "outputs": 1,
        "x": 920,
        "y": 540,
        "wires": [
            []
        ]
    },
    {
        "id": "f3ed601f.96a7a",
        "type": "ui_chart",
        "z": "49f6a65a.0777d8",
        "d": true,
        "name": "",
        "group": "23f9abd1.a832d4",
        "order": 1,
        "width": 0,
        "height": 0,
        "label": "Power (W)",
        "chartType": "line",
        "legend": "false",
        "xformat": "HH:mm:ss",
        "interpolate": "linear",
        "nodata": "",
        "dot": false,
        "ymin": "",
        "ymax": "",
        "removeOlder": "10",
        "removeOlderPoints": "20",
        "removeOlderUnit": "60",
        "cutout": 0,
        "useOneColor": false,
        "useUTC": true,
        "colors": [
            "#1f77b4",
            "#aec7e8",
            "#ff7f0e",
            "#2ca02c",
            "#98df8a",
            "#d62728",
            "#ff9896",
            "#9467bd",
            "#c5b0d5"
        ],
        "useOldStyle": false,
        "outputs": 1,
        "x": 950,
        "y": 580,
        "wires": [
            []
        ]
    },
    {
        "id": "eb64c3b5.c6c56",
        "type": "ui_chart",
        "z": "49f6a65a.0777d8",
        "d": true,
        "name": "",
        "group": "23f9abd1.a832d4",
        "order": 2,
        "width": 0,
        "height": 0,
        "label": " Energy (J)",
        "chartType": "line",
        "legend": "false",
        "xformat": "HH:mm:ss",
        "interpolate": "linear",
        "nodata": "",
        "dot": false,
        "ymin": "",
        "ymax": "",
        "removeOlder": "10",
        "removeOlderPoints": "20",
        "removeOlderUnit": "60",
        "cutout": 0,
        "useOneColor": false,
        "useUTC": true,
        "colors": [
            "#1f77b4",
            "#aec7e8",
            "#ff7f0e",
            "#2ca02c",
            "#98df8a",
            "#d62728",
            "#ff9896",
            "#9467bd",
            "#c5b0d5"
        ],
        "useOldStyle": false,
        "outputs": 1,
        "x": 1110,
        "y": 580,
        "wires": [
            []
        ]
    },
    {
        "id": "81654751.2116d8",
        "type": "sqlite",
        "z": "49f6a65a.0777d8",
        "mydb": "9befc88e.28ef18",
        "sqlquery": "fixed",
        "sql": "SELECT * FROM measurements  WHERE socketId=2 ORDER BY rowid DESC LIMIT 1;\n",
        "name": "MeasuredData",
        "x": 400,
        "y": 920,
        "wires": [
            [
                "fcb7d3e2.7b0ba"
            ]
        ]
    },
    {
        "id": "cf26c34a.7fbe5",
        "type": "debug",
        "z": "49f6a65a.0777d8",
        "name": "socket2",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "x": 680,
        "y": 940,
        "wires": []
    },
    {
        "id": "aee437b.1052ec8",
        "type": "sqlite",
        "z": "49f6a65a.0777d8",
        "mydb": "9befc88e.28ef18",
        "sqlquery": "fixed",
        "sql": "SELECT * FROM measurements  WHERE socketId=3 ORDER BY rowid DESC LIMIT 1;\n",
        "name": "MeasuredData",
        "x": 420,
        "y": 1140,
        "wires": [
            [
                "be0dd08c.5508e"
            ]
        ]
    },
    {
        "id": "e904525.ee714b",
        "type": "debug",
        "z": "49f6a65a.0777d8",
        "name": "socket3",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "x": 700,
        "y": 1200,
        "wires": []
    },
    {
        "id": "aa8d2ef1.6fabf",
        "type": "sqlite",
        "z": "49f6a65a.0777d8",
        "mydb": "9befc88e.28ef18",
        "sqlquery": "fixed",
        "sql": "SELECT * FROM measurements  WHERE socketId=4 ORDER BY rowid DESC LIMIT 1;\n",
        "name": "MeasuredData",
        "x": 340,
        "y": 1460,
        "wires": [
            [
                "e9d19da8.b3dd"
            ]
        ]
    },
    {
        "id": "83a88502.dd64b8",
        "type": "debug",
        "z": "49f6a65a.0777d8",
        "name": "socket4",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "x": 620,
        "y": 1500,
        "wires": []
    },
    {
        "id": "753e5598.ce571c",
        "type": "mqtt in",
        "z": "49f6a65a.0777d8",
        "name": "Charger1_MQTT",
        "topic": "HANevse/photonConverted/1",
        "qos": "2",
        "datatype": "utf8",
        "broker": "df69e39.f63442",
        "x": 620,
        "y": 660,
        "wires": [
            [
                "7fd1a42e.0b83fc",
                "5d1a7e3b.c751c"
            ]
        ]
    },
    {
        "id": "5d1a7e3b.c751c",
        "type": "ui_text",
        "z": "49f6a65a.0777d8",
        "group": "655de677.31fa58",
        "order": 10,
        "width": 0,
        "height": 0,
        "name": "",
        "label": "C1:",
        "format": "{{msg.payload}}",
        "layout": "row-center",
        "x": 810,
        "y": 660,
        "wires": []
    },
    {
        "id": "5b2b4190.3bae9",
        "type": "function",
        "z": "49f6a65a.0777d8",
        "name": "Data format 2",
        "func": "//  var offset = context.get(\"offset\")||7200;\n//  if (msg.topic == \"timezone\") {\n//      offset =  msg.payload;\n//      context.set(\"offset\", offset);\n//      return null;\n//  }\n\n//  //  \n//  // Create a data variable   \n//  //  \n//  var i = 0;\n//  var series_V1 = [\"V1\"];  \n//  var labels_V1 = [\"Data Values\"];  \n//  var data_V1 = \"[[\";  \n   \n//  for (i=0; i < msg.payload.length; i++) {  \n//   data_V1 += '{ \"x\":' + ((offset+parseInt(msg.payload[i].Time))*1000).toString() + ', \"y\":' + msg.payload[i].V1 + '}';  \n//   if (i < (msg.payload.length - 1)) {  \n//      data_V1 += \",\"  \n//   } else {  \n//      data_V1 += \"]]\"  \n//   }  \n//  }  \n//  var jsondata_V1 = JSON.parse(data_V1);\n \n//  var msg_V1 = {\n//      payload : [{\"series\": series_V1, \"data\": jsondata_V1, \"labels\": labels_V1}],\n//      topic : \"V1\"\n//  }\n \n//  var series_V2 = [\"V2\"];  \n//  var labels_V2 = [\"Data Values\"];  \n//  var data_V2 = \"[[\";  \n   \n//  for (i=0; i < msg.payload.length; i++) {  \n//   data_V2 += '{ \"x\":' + ((offset+parseInt(msg.payload[i].Time))*1000).toString() + ', \"y\":' + msg.payload[i].V2 + '}';  \n//   if (i < (msg.payload.length - 1)) {  \n//      data_V2 += \",\"  \n//   } else {  \n//      data_V2 += \"]]\"  \n//   }  \n//  }  \n//  var jsondata_V2 = JSON.parse(data_V2);\n \n//  var msg_V2 = {\n//      payload : [{\"series\": series_V2, \"data\": jsondata_V2, \"labels\": labels_V2}],\n//      topic : \"V2\"\n//  }\n   \n//  var series_V3 = [\"V3\"];  \n//  var labels_V3 = [\"Data Values\"];  \n//  var data_V3 = \"[[\";  \n   \n//  for (i=0; i < msg.payload.length; i++) {  \n//   data_V3 += '{ \"x\":' + ((offset+parseInt(msg.payload[i].Time))*1000).toString() + ', \"y\":' + msg.payload[i].V3 + '}';  \n//   if (i < (msg.payload.length - 1)) {  \n//      data_V3 += \",\"  \n//   } else {  \n//      data_V3 += \"]]\"  \n//   }  \n//  }  \n//  var jsondata_V3 = JSON.parse(data_V3);\n \n//  var msg_V3 = {\n//      payload : [{\"series\": series_V3, \"data\": jsondata_V3, \"labels\": labels_V3}],\n//      topic : \"V3\"\n//  }\n \n//  var series_I1 = [\"I1\"];  \n//  var labels_I1 = [\"Data Values\"];  \n//  var data_I1 = \"[[\";  \n   \n//  for (i=0; i < msg.payload.length; i++) {  \n//   data_I1 += '{ \"x\":' + ((offset+parseInt(msg.payload[i].Time))*1000).toString() + ', \"y\":' + msg.payload[i].I1 + '}';  \n//   if (i < (msg.payload.length - 1)) {  \n//      data_I1 += \",\"  \n//   } else {  \n//      data_I1 += \"]]\"  \n//   }  \n//  }  \n//  var jsondata_I1 = JSON.parse(data_I1);\n \n//  var msg_I1 = {\n//      payload : [{\"series\": series_I1, \"data\": jsondata_I1, \"labels\": labels_I1}],\n//      topic : \"I1\"\n//  }\n \n//  var series_I2 = [\"I2\"];  \n//  var labels_I2 = [\"Data Values\"];  \n//  var data_I2 = \"[[\";  \n   \n//  for (i=0; i < msg.payload.length; i++) {  \n//   data_I2 += '{ \"x\":' + ((offset+parseInt(msg.payload[i].Time))*1000).toString() + ', \"y\":' + msg.payload[i].I2 + '}';  \n//   if (i < (msg.payload.length - 1)) {  \n//      data_I2 += \",\"  \n//   } else {  \n//      data_I2 += \"]]\"  \n//   }  \n//  }  \n//  var jsondata_I2 = JSON.parse(data_I2);\n \n//  var msg_I2 = {\n//      payload : [{\"series\": series_I2, \"data\": jsondata_I2, \"labels\": labels_I2}],\n//      topic : \"I2\"\n//  }\n \n//  var series_I3= [\"I3\"];  \n//  var labels_I3 = [\"Data Values\"];  \n//  var data_I3 = \"[[\";  \n   \n//  for (i=0; i < msg.payload.length; i++) {  \n//   data_I3 += '{ \"x\":' + ((offset+parseInt(msg.payload[i].Time))*1000).toString() + ', \"y\":' + msg.payload[i].I3 + '}';  \n//   if (i < (msg.payload.length - 1)) {  \n//      data_I3 += \",\"  \n//   } else {  \n//      data_I3 += \"]]\"  \n//   }  \n//  }  \n//  var jsondata_I3 = JSON.parse(data_I3);\n \n//  var msg_I3 = {\n//      payload : [{\"series\": series_I3, \"data\": jsondata_I3, \"labels\": labels_I3}],\n//      topic : \"I3\"\n//  }\n \n//  var series_P = [\"P\"];  \n//  var labels_P = [\"Data Values\"];  \n//  var data_P = \"[[\";  \n   \n//  for (i=0; i < msg.payload.length; i++) {  \n//   data_P += '{ \"x\":' + ((offset+parseInt(msg.payload[i].Time))*1000).toString() + ', \"y\":' + msg.payload[i].P + '}';  \n//   if (i < (msg.payload.length - 1)) {  \n//      data_P += \",\"  \n//   } else {  \n//      data_P += \"]]\"  \n//   }  \n//  }  \n//  var jsondata_P = JSON.parse(data_P);\n \n//  var msg_P = {\n//      payload : [{\"series\": series_P, \"data\": jsondata_P, \"labels\": labels_P}],\n//      topic : \"P\"\n//  }\n \n//  //var series_F = [\"F\"];  \n//  //var labels_F = [\"Data Values\"];  \n \n//  //var data_F = (msg.payload[(msg.payload).length]).F;\n//  //var data_F = '50';\n//  //var jsondata_F = JSON.parse(data_F);\n \n//  var msg_F = {payload: msg.payload[msg.payload.length - 1].F};\n \n//  return [msg_V1, msg_V2, msg_V3, msg_I1, msg_I2, msg_I3, msg_P, msg_F];\n\nlet upper_V = 260;\nlet lower_V = 180;\nlet upper_I = 100;\n\nif (msg.payload === false)\n    {\n    var msg_V1 = {topic:\"V1\", payload: null};\n    var msg_V2 = {topic:\"V2\", payload: null};\n    var msg_V3 = {topic:\"V3\", payload: null}; \n    var msg_I1 = {topic:\"I1\", payload: null};\n    var msg_I2 = {topic:\"I2\", payload: null};\n    var msg_I3 = {topic:\"I3\", payload: null}; \n    var msg_F  = {payload: null};\n    }\n else\n    {\n    if (Number(msg.payload[msg.payload.length - 1].V1) > upper_V)\n        var msg_V1 = {topic:\"V1\", payload: upper_V};\n    else if (Number(msg.payload[msg.payload.length - 1].V1) < lower_V)\n        var msg_V1 = {topic:\"V1\", payload: lower_V};\n    else\n        var msg_V1 = {topic:\"V1\", payload: msg.payload[msg.payload.length - 1].V1};\n        \n    if (Number(msg.payload[msg.payload.length - 1].V2) > upper_V)\n        var msg_V2 = {topic:\"V2\", payload: upper_V};\n    else if (Number(msg.payload[msg.payload.length - 1].V2) < lower_V)\n        var msg_V2 = {topic:\"V2\", payload: lower_V};\n    else\n        var msg_V2 = {topic:\"V2\", payload: msg.payload[msg.payload.length - 1].V2};\n        \n    if (Number(msg.payload[msg.payload.length - 1].V3) > upper_V)\n        var msg_V3 = {topic:\"V3\", payload: upper_V};\n    else if (Number(msg.payload[msg.payload.length - 1].V3) < lower_V)\n        var msg_V3 = {topic:\"V3\", payload: lower_V};\n    else\n        var msg_V3 = {topic:\"V3\", payload: msg.payload[msg.payload.length - 1].V3};\n    \n    if (Number(msg.payload[msg.payload.length - 1].I1) > upper_I)\n        var msg_I1 = {topic:\"I1\", payload: upper_I};\n    else\n        var msg_I1 = {topic:\"I1\", payload: msg.payload[msg.payload.length - 1].I1};\n    \n    if (Number(msg.payload[msg.payload.length - 1].I2) > upper_I)\n        var msg_I2 = {topic:\"I2\", payload: upper_I};\n    else\n        var msg_I2 = {topic:\"I2\", payload: msg.payload[msg.payload.length - 1].I2};\n        \n    if (Number(msg.payload[msg.payload.length - 1].I3) > upper_I)\n        var msg_I3 = {topic:\"I3\", payload: upper_I};\n    else\n        var msg_I3 = {topic:\"I3\", payload: msg.payload[msg.payload.length - 1].I3};\n    \n     \n    var msg_F  = {payload: msg.payload[msg.payload.length - 1].F};\n    }\nreturn [msg_V1, msg_V2, msg_V3, msg_I1, msg_I2, msg_I3, msg_F];",
        "outputs": 7,
        "noerr": 0,
        "x": 680,
        "y": 860,
        "wires": [
            [
                "a06d0c52.d71a1"
            ],
            [
                "a06d0c52.d71a1"
            ],
            [
                "a06d0c52.d71a1"
            ],
            [
                "cfe7518f.7dfcf"
            ],
            [
                "cfe7518f.7dfcf"
            ],
            [
                "cfe7518f.7dfcf"
            ],
            [
                "40289ffc.a6ad9"
            ]
        ]
    },
    {
        "id": "f5bc0c79.1cf77",
        "type": "mqtt in",
        "z": "49f6a65a.0777d8",
        "name": "Charger2_MQTT",
        "topic": "HANevse/photonConverted/2",
        "qos": "2",
        "datatype": "utf8",
        "broker": "df69e39.f63442",
        "x": 620,
        "y": 980,
        "wires": [
            [
                "7009b02c.6b723",
                "86bab7b0.dc2708"
            ]
        ]
    },
    {
        "id": "7009b02c.6b723",
        "type": "ui_text",
        "z": "49f6a65a.0777d8",
        "group": "655de677.31fa58",
        "order": 10,
        "width": 0,
        "height": 0,
        "name": "",
        "label": "C2:",
        "format": "{{msg.payload}}",
        "layout": "row-center",
        "x": 810,
        "y": 980,
        "wires": []
    },
    {
        "id": "a06d0c52.d71a1",
        "type": "ui_chart",
        "z": "49f6a65a.0777d8",
        "name": "",
        "group": "23f9abd1.a832d4",
        "order": 1,
        "width": 0,
        "height": 0,
        "label": "Voltage C2 (V)",
        "chartType": "line",
        "legend": "true",
        "xformat": "HH:mm:ss",
        "interpolate": "linear",
        "nodata": "",
        "dot": true,
        "ymin": "",
        "ymax": "",
        "removeOlder": "10",
        "removeOlderPoints": "10",
        "removeOlderUnit": "60",
        "cutout": 0,
        "useOneColor": false,
        "useUTC": false,
        "colors": [
            "#1f77b4",
            "#a1b9d9",
            "#ff7f0e",
            "#2ca02c",
            "#98df8a",
            "#d62728",
            "#ff9896",
            "#9467bd",
            "#c5b0d5"
        ],
        "useOldStyle": false,
        "outputs": 1,
        "x": 920,
        "y": 820,
        "wires": [
            []
        ]
    },
    {
        "id": "cfe7518f.7dfcf",
        "type": "ui_chart",
        "z": "49f6a65a.0777d8",
        "name": "",
        "group": "23f9abd1.a832d4",
        "order": 1,
        "width": 0,
        "height": 0,
        "label": "Current C2 (A)",
        "chartType": "line",
        "legend": "true",
        "xformat": "HH:mm:ss",
        "interpolate": "linear",
        "nodata": "",
        "dot": true,
        "ymin": "",
        "ymax": "",
        "removeOlder": "10",
        "removeOlderPoints": "10",
        "removeOlderUnit": "60",
        "cutout": 0,
        "useOneColor": false,
        "useUTC": false,
        "colors": [
            "#1f77b4",
            "#aec7e8",
            "#ff7f0e",
            "#2ca02c",
            "#98df8a",
            "#d62728",
            "#ff9896",
            "#9467bd",
            "#c5b0d5"
        ],
        "useOldStyle": false,
        "outputs": 1,
        "x": 920,
        "y": 880,
        "wires": [
            []
        ]
    },
    {
        "id": "ea45f565.5bf1e8",
        "type": "ui_chart",
        "z": "49f6a65a.0777d8",
        "d": true,
        "name": "",
        "group": "1160d3df.5a9eec",
        "order": 1,
        "width": 0,
        "height": 0,
        "label": "Power (W)",
        "chartType": "line",
        "legend": "false",
        "xformat": "HH:mm:ss",
        "interpolate": "linear",
        "nodata": "",
        "dot": false,
        "ymin": "",
        "ymax": "",
        "removeOlder": "10",
        "removeOlderPoints": "20",
        "removeOlderUnit": "60",
        "cutout": 0,
        "useOneColor": false,
        "useUTC": true,
        "colors": [
            "#1f77b4",
            "#aec7e8",
            "#ff7f0e",
            "#2ca02c",
            "#98df8a",
            "#d62728",
            "#ff9896",
            "#9467bd",
            "#c5b0d5"
        ],
        "useOldStyle": false,
        "outputs": 1,
        "x": 930,
        "y": 920,
        "wires": [
            []
        ]
    },
    {
        "id": "66511682.bc0d88",
        "type": "ui_chart",
        "z": "49f6a65a.0777d8",
        "d": true,
        "name": "",
        "group": "23f9abd1.a832d4",
        "order": 2,
        "width": 0,
        "height": 0,
        "label": " Energy (J)",
        "chartType": "line",
        "legend": "false",
        "xformat": "HH:mm:ss",
        "interpolate": "linear",
        "nodata": "",
        "dot": false,
        "ymin": "",
        "ymax": "",
        "removeOlder": "10",
        "removeOlderPoints": "20",
        "removeOlderUnit": "60",
        "cutout": 0,
        "useOneColor": false,
        "useUTC": true,
        "colors": [
            "#1f77b4",
            "#aec7e8",
            "#ff7f0e",
            "#2ca02c",
            "#98df8a",
            "#d62728",
            "#ff9896",
            "#9467bd",
            "#c5b0d5"
        ],
        "useOldStyle": false,
        "outputs": 1,
        "x": 1090,
        "y": 920,
        "wires": [
            []
        ]
    },
    {
        "id": "69bb947e.878bec",
        "type": "function",
        "z": "49f6a65a.0777d8",
        "name": "Data format 3",
        "func": "//  var offset = context.get(\"offset\")||7200;\n//  if (msg.topic == \"timezone\") {\n//      offset =  msg.payload;\n//      context.set(\"offset\", offset);\n//      return null;\n//  }\n\n//  //  \n//  // Create a data variable   \n//  //  \n//  var i = 0;\n//  var series_V1 = [\"V1\"];  \n//  var labels_V1 = [\"Data Values\"];  \n//  var data_V1 = \"[[\";  \n   \n//  for (i=0; i < msg.payload.length; i++) {  \n//   data_V1 += '{ \"x\":' + ((offset+parseInt(msg.payload[i].Time))*1000).toString() + ', \"y\":' + msg.payload[i].V1 + '}';  \n//   if (i < (msg.payload.length - 1)) {  \n//      data_V1 += \",\"  \n//   } else {  \n//      data_V1 += \"]]\"  \n//   }  \n//  }  \n//  var jsondata_V1 = JSON.parse(data_V1);\n \n//  var msg_V1 = {\n//      payload : [{\"series\": series_V1, \"data\": jsondata_V1, \"labels\": labels_V1}],\n//      topic : \"V1\"\n//  }\n \n//  var series_V2 = [\"V2\"];  \n//  var labels_V2 = [\"Data Values\"];  \n//  var data_V2 = \"[[\";  \n   \n//  for (i=0; i < msg.payload.length; i++) {  \n//   data_V2 += '{ \"x\":' + ((offset+parseInt(msg.payload[i].Time))*1000).toString() + ', \"y\":' + msg.payload[i].V2 + '}';  \n//   if (i < (msg.payload.length - 1)) {  \n//      data_V2 += \",\"  \n//   } else {  \n//      data_V2 += \"]]\"  \n//   }  \n//  }  \n//  var jsondata_V2 = JSON.parse(data_V2);\n \n//  var msg_V2 = {\n//      payload : [{\"series\": series_V2, \"data\": jsondata_V2, \"labels\": labels_V2}],\n//      topic : \"V2\"\n//  }\n   \n//  var series_V3 = [\"V3\"];  \n//  var labels_V3 = [\"Data Values\"];  \n//  var data_V3 = \"[[\";  \n   \n//  for (i=0; i < msg.payload.length; i++) {  \n//   data_V3 += '{ \"x\":' + ((offset+parseInt(msg.payload[i].Time))*1000).toString() + ', \"y\":' + msg.payload[i].V3 + '}';  \n//   if (i < (msg.payload.length - 1)) {  \n//      data_V3 += \",\"  \n//   } else {  \n//      data_V3 += \"]]\"  \n//   }  \n//  }  \n//  var jsondata_V3 = JSON.parse(data_V3);\n \n//  var msg_V3 = {\n//      payload : [{\"series\": series_V3, \"data\": jsondata_V3, \"labels\": labels_V3}],\n//      topic : \"V3\"\n//  }\n \n//  var series_I1 = [\"I1\"];  \n//  var labels_I1 = [\"Data Values\"];  \n//  var data_I1 = \"[[\";  \n   \n//  for (i=0; i < msg.payload.length; i++) {  \n//   data_I1 += '{ \"x\":' + ((offset+parseInt(msg.payload[i].Time))*1000).toString() + ', \"y\":' + msg.payload[i].I1 + '}';  \n//   if (i < (msg.payload.length - 1)) {  \n//      data_I1 += \",\"  \n//   } else {  \n//      data_I1 += \"]]\"  \n//   }  \n//  }  \n//  var jsondata_I1 = JSON.parse(data_I1);\n \n//  var msg_I1 = {\n//      payload : [{\"series\": series_I1, \"data\": jsondata_I1, \"labels\": labels_I1}],\n//      topic : \"I1\"\n//  }\n \n//  var series_I2 = [\"I2\"];  \n//  var labels_I2 = [\"Data Values\"];  \n//  var data_I2 = \"[[\";  \n   \n//  for (i=0; i < msg.payload.length; i++) {  \n//   data_I2 += '{ \"x\":' + ((offset+parseInt(msg.payload[i].Time))*1000).toString() + ', \"y\":' + msg.payload[i].I2 + '}';  \n//   if (i < (msg.payload.length - 1)) {  \n//      data_I2 += \",\"  \n//   } else {  \n//      data_I2 += \"]]\"  \n//   }  \n//  }  \n//  var jsondata_I2 = JSON.parse(data_I2);\n \n//  var msg_I2 = {\n//      payload : [{\"series\": series_I2, \"data\": jsondata_I2, \"labels\": labels_I2}],\n//      topic : \"I2\"\n//  }\n \n//  var series_I3= [\"I3\"];  \n//  var labels_I3 = [\"Data Values\"];  \n//  var data_I3 = \"[[\";  \n   \n//  for (i=0; i < msg.payload.length; i++) {  \n//   data_I3 += '{ \"x\":' + ((offset+parseInt(msg.payload[i].Time))*1000).toString() + ', \"y\":' + msg.payload[i].I3 + '}';  \n//   if (i < (msg.payload.length - 1)) {  \n//      data_I3 += \",\"  \n//   } else {  \n//      data_I3 += \"]]\"  \n//   }  \n//  }  \n//  var jsondata_I3 = JSON.parse(data_I3);\n \n//  var msg_I3 = {\n//      payload : [{\"series\": series_I3, \"data\": jsondata_I3, \"labels\": labels_I3}],\n//      topic : \"I3\"\n//  }\n \n//  var series_P = [\"P\"];  \n//  var labels_P = [\"Data Values\"];  \n//  var data_P = \"[[\";  \n   \n//  for (i=0; i < msg.payload.length; i++) {  \n//   data_P += '{ \"x\":' + ((offset+parseInt(msg.payload[i].Time))*1000).toString() + ', \"y\":' + msg.payload[i].P + '}';  \n//   if (i < (msg.payload.length - 1)) {  \n//      data_P += \",\"  \n//   } else {  \n//      data_P += \"]]\"  \n//   }  \n//  }  \n//  var jsondata_P = JSON.parse(data_P);\n \n//  var msg_P = {\n//      payload : [{\"series\": series_P, \"data\": jsondata_P, \"labels\": labels_P}],\n//      topic : \"P\"\n//  }\n \n//  //var series_F = [\"F\"];  \n//  //var labels_F = [\"Data Values\"];  \n \n//  //var data_F = (msg.payload[(msg.payload).length]).F;\n//  //var data_F = '50';\n//  //var jsondata_F = JSON.parse(data_F);\n \n//  var msg_F = {payload: msg.payload[msg.payload.length - 1].F};\n \n//  return [msg_V1, msg_V2, msg_V3, msg_I1, msg_I2, msg_I3, msg_P, msg_F];\n\nlet upper_V = 260;\nlet lower_V = 180;\nlet upper_I = 100;\n\nif (msg.payload === false)\n    {\n    var msg_V1 = {topic:\"V1\", payload: null};\n    var msg_V2 = {topic:\"V2\", payload: null};\n    var msg_V3 = {topic:\"V3\", payload: null}; \n    var msg_I1 = {topic:\"I1\", payload: null};\n    var msg_I2 = {topic:\"I2\", payload: null};\n    var msg_I3 = {topic:\"I3\", payload: null}; \n    var msg_F  = {payload: null};\n    }\n else\n    {\n    if (Number(msg.payload[msg.payload.length - 1].V1) > upper_V)\n        var msg_V1 = {topic:\"V1\", payload: upper_V};\n    else if (Number(msg.payload[msg.payload.length - 1].V1) < lower_V)\n        var msg_V1 = {topic:\"V1\", payload: lower_V};\n    else\n        var msg_V1 = {topic:\"V1\", payload: msg.payload[msg.payload.length - 1].V1};\n        \n    if (Number(msg.payload[msg.payload.length - 1].V2) > upper_V)\n        var msg_V2 = {topic:\"V2\", payload: upper_V};\n    else if (Number(msg.payload[msg.payload.length - 1].V2) < lower_V)\n        var msg_V2 = {topic:\"V2\", payload: lower_V};\n    else\n        var msg_V2 = {topic:\"V2\", payload: msg.payload[msg.payload.length - 1].V2};\n        \n    if (Number(msg.payload[msg.payload.length - 1].V3) > upper_V)\n        var msg_V3 = {topic:\"V3\", payload: upper_V};\n    else if (Number(msg.payload[msg.payload.length - 1].V3) < lower_V)\n        var msg_V3 = {topic:\"V3\", payload: lower_V};\n    else\n        var msg_V3 = {topic:\"V3\", payload: msg.payload[msg.payload.length - 1].V3};\n    \n    if (Number(msg.payload[msg.payload.length - 1].I1) > upper_I)\n        var msg_I1 = {topic:\"I1\", payload: upper_I};\n    else\n        var msg_I1 = {topic:\"I1\", payload: msg.payload[msg.payload.length - 1].I1};\n    \n    if (Number(msg.payload[msg.payload.length - 1].I2) > upper_I)\n        var msg_I2 = {topic:\"I2\", payload: upper_I};\n    else\n        var msg_I2 = {topic:\"I2\", payload: msg.payload[msg.payload.length - 1].I2};\n        \n    if (Number(msg.payload[msg.payload.length - 1].I3) > upper_I)\n        var msg_I3 = {topic:\"I3\", payload: upper_I};\n    else\n        var msg_I3 = {topic:\"I3\", payload: msg.payload[msg.payload.length - 1].I3};\n    \n     \n    var msg_F  = {payload: msg.payload[msg.payload.length - 1].F};\n    }\nreturn [msg_V1, msg_V2, msg_V3, msg_I1, msg_I2, msg_I3, msg_F];",
        "outputs": 7,
        "noerr": 0,
        "x": 720,
        "y": 1280,
        "wires": [
            [
                "34998805.947b18"
            ],
            [
                "34998805.947b18"
            ],
            [
                "34998805.947b18"
            ],
            [
                "49040869.fc7be8"
            ],
            [
                "49040869.fc7be8"
            ],
            [
                "49040869.fc7be8"
            ],
            [
                "56ad9ba8.91e984"
            ]
        ]
    },
    {
        "id": "e68eeba5.6bc638",
        "type": "mqtt in",
        "z": "49f6a65a.0777d8",
        "name": "Charger3_MQTT",
        "topic": "HANevse/photonConverted/3",
        "qos": "2",
        "datatype": "utf8",
        "broker": "df69e39.f63442",
        "x": 540,
        "y": 1360,
        "wires": [
            [
                "d073f2be.bd219",
                "5538bf00.814a9"
            ]
        ]
    },
    {
        "id": "d073f2be.bd219",
        "type": "ui_text",
        "z": "49f6a65a.0777d8",
        "group": "655de677.31fa58",
        "order": 10,
        "width": 0,
        "height": 0,
        "name": "",
        "label": "C3:",
        "format": "{{msg.payload}}",
        "layout": "row-center",
        "x": 730,
        "y": 1360,
        "wires": []
    },
    {
        "id": "34998805.947b18",
        "type": "ui_chart",
        "z": "49f6a65a.0777d8",
        "name": "",
        "group": "1160d3df.5a9eec",
        "order": 1,
        "width": 0,
        "height": 0,
        "label": "Voltage C3 (V)",
        "chartType": "line",
        "legend": "true",
        "xformat": "HH:mm:ss",
        "interpolate": "linear",
        "nodata": "",
        "dot": true,
        "ymin": "",
        "ymax": "",
        "removeOlder": "10",
        "removeOlderPoints": "10",
        "removeOlderUnit": "60",
        "cutout": 0,
        "useOneColor": false,
        "useUTC": false,
        "colors": [
            "#1f77b4",
            "#aec7e8",
            "#ff7f0e",
            "#2ca02c",
            "#98df8a",
            "#d62728",
            "#ff9896",
            "#9467bd",
            "#c5b0d5"
        ],
        "useOldStyle": false,
        "outputs": 1,
        "x": 960,
        "y": 1220,
        "wires": [
            []
        ]
    },
    {
        "id": "49040869.fc7be8",
        "type": "ui_chart",
        "z": "49f6a65a.0777d8",
        "name": "",
        "group": "1160d3df.5a9eec",
        "order": 1,
        "width": 0,
        "height": 0,
        "label": "Current C3 (A)",
        "chartType": "line",
        "legend": "false",
        "xformat": "HH:mm:ss",
        "interpolate": "linear",
        "nodata": "",
        "dot": true,
        "ymin": "",
        "ymax": "",
        "removeOlder": "10",
        "removeOlderPoints": "10",
        "removeOlderUnit": "60",
        "cutout": 0,
        "useOneColor": false,
        "useUTC": false,
        "colors": [
            "#1f77b4",
            "#aec7e8",
            "#ff7f0e",
            "#2ca02c",
            "#98df8a",
            "#d62728",
            "#ff9896",
            "#9467bd",
            "#c5b0d5"
        ],
        "useOldStyle": false,
        "outputs": 1,
        "x": 960,
        "y": 1280,
        "wires": [
            []
        ]
    },
    {
        "id": "7c5dc1a5.08f05",
        "type": "ui_chart",
        "z": "49f6a65a.0777d8",
        "d": true,
        "name": "",
        "group": "1160d3df.5a9eec",
        "order": 1,
        "width": 0,
        "height": 0,
        "label": "Power (W)",
        "chartType": "line",
        "legend": "false",
        "xformat": "HH:mm:ss",
        "interpolate": "linear",
        "nodata": "",
        "dot": false,
        "ymin": "",
        "ymax": "",
        "removeOlder": "10",
        "removeOlderPoints": "20",
        "removeOlderUnit": "60",
        "cutout": 0,
        "useOneColor": false,
        "useUTC": true,
        "colors": [
            "#1f77b4",
            "#aec7e8",
            "#ff7f0e",
            "#2ca02c",
            "#98df8a",
            "#d62728",
            "#ff9896",
            "#9467bd",
            "#c5b0d5"
        ],
        "useOldStyle": false,
        "outputs": 1,
        "x": 930,
        "y": 1320,
        "wires": [
            []
        ]
    },
    {
        "id": "9653c8a8.357048",
        "type": "ui_chart",
        "z": "49f6a65a.0777d8",
        "d": true,
        "name": "",
        "group": "23f9abd1.a832d4",
        "order": 2,
        "width": 0,
        "height": 0,
        "label": " Energy (J)",
        "chartType": "line",
        "legend": "false",
        "xformat": "HH:mm:ss",
        "interpolate": "linear",
        "nodata": "",
        "dot": false,
        "ymin": "",
        "ymax": "",
        "removeOlder": "10",
        "removeOlderPoints": "20",
        "removeOlderUnit": "60",
        "cutout": 0,
        "useOneColor": false,
        "useUTC": true,
        "colors": [
            "#1f77b4",
            "#aec7e8",
            "#ff7f0e",
            "#2ca02c",
            "#98df8a",
            "#d62728",
            "#ff9896",
            "#9467bd",
            "#c5b0d5"
        ],
        "useOldStyle": false,
        "outputs": 1,
        "x": 1090,
        "y": 1320,
        "wires": [
            []
        ]
    },
    {
        "id": "1daac48a.3726db",
        "type": "function",
        "z": "49f6a65a.0777d8",
        "name": "Data format 4",
        "func": "//  var offset = context.get(\"offset\")||7200;\n//  if (msg.topic == \"timezone\") {\n//      offset =  msg.payload;\n//      context.set(\"offset\", offset);\n//      return null;\n//  }\n\n//  //  \n//  // Create a data variable   \n//  //  \n//  var i = 0;\n//  var series_V1 = [\"V1\"];  \n//  var labels_V1 = [\"Data Values\"];  \n//  var data_V1 = \"[[\";  \n   \n//  for (i=0; i < msg.payload.length; i++) {  \n//   data_V1 += '{ \"x\":' + ((offset+parseInt(msg.payload[i].Time))*1000).toString() + ', \"y\":' + msg.payload[i].V1 + '}';  \n//   if (i < (msg.payload.length - 1)) {  \n//      data_V1 += \",\"  \n//   } else {  \n//      data_V1 += \"]]\"  \n//   }  \n//  }  \n//  var jsondata_V1 = JSON.parse(data_V1);\n \n//  var msg_V1 = {\n//      payload : [{\"series\": series_V1, \"data\": jsondata_V1, \"labels\": labels_V1}],\n//      topic : \"V1\"\n//  }\n \n//  var series_V2 = [\"V2\"];  \n//  var labels_V2 = [\"Data Values\"];  \n//  var data_V2 = \"[[\";  \n   \n//  for (i=0; i < msg.payload.length; i++) {  \n//   data_V2 += '{ \"x\":' + ((offset+parseInt(msg.payload[i].Time))*1000).toString() + ', \"y\":' + msg.payload[i].V2 + '}';  \n//   if (i < (msg.payload.length - 1)) {  \n//      data_V2 += \",\"  \n//   } else {  \n//      data_V2 += \"]]\"  \n//   }  \n//  }  \n//  var jsondata_V2 = JSON.parse(data_V2);\n \n//  var msg_V2 = {\n//      payload : [{\"series\": series_V2, \"data\": jsondata_V2, \"labels\": labels_V2}],\n//      topic : \"V2\"\n//  }\n   \n//  var series_V3 = [\"V3\"];  \n//  var labels_V3 = [\"Data Values\"];  \n//  var data_V3 = \"[[\";  \n   \n//  for (i=0; i < msg.payload.length; i++) {  \n//   data_V3 += '{ \"x\":' + ((offset+parseInt(msg.payload[i].Time))*1000).toString() + ', \"y\":' + msg.payload[i].V3 + '}';  \n//   if (i < (msg.payload.length - 1)) {  \n//      data_V3 += \",\"  \n//   } else {  \n//      data_V3 += \"]]\"  \n//   }  \n//  }  \n//  var jsondata_V3 = JSON.parse(data_V3);\n \n//  var msg_V3 = {\n//      payload : [{\"series\": series_V3, \"data\": jsondata_V3, \"labels\": labels_V3}],\n//      topic : \"V3\"\n//  }\n \n//  var series_I1 = [\"I1\"];  \n//  var labels_I1 = [\"Data Values\"];  \n//  var data_I1 = \"[[\";  \n   \n//  for (i=0; i < msg.payload.length; i++) {  \n//   data_I1 += '{ \"x\":' + ((offset+parseInt(msg.payload[i].Time))*1000).toString() + ', \"y\":' + msg.payload[i].I1 + '}';  \n//   if (i < (msg.payload.length - 1)) {  \n//      data_I1 += \",\"  \n//   } else {  \n//      data_I1 += \"]]\"  \n//   }  \n//  }  \n//  var jsondata_I1 = JSON.parse(data_I1);\n \n//  var msg_I1 = {\n//      payload : [{\"series\": series_I1, \"data\": jsondata_I1, \"labels\": labels_I1}],\n//      topic : \"I1\"\n//  }\n \n//  var series_I2 = [\"I2\"];  \n//  var labels_I2 = [\"Data Values\"];  \n//  var data_I2 = \"[[\";  \n   \n//  for (i=0; i < msg.payload.length; i++) {  \n//   data_I2 += '{ \"x\":' + ((offset+parseInt(msg.payload[i].Time))*1000).toString() + ', \"y\":' + msg.payload[i].I2 + '}';  \n//   if (i < (msg.payload.length - 1)) {  \n//      data_I2 += \",\"  \n//   } else {  \n//      data_I2 += \"]]\"  \n//   }  \n//  }  \n//  var jsondata_I2 = JSON.parse(data_I2);\n \n//  var msg_I2 = {\n//      payload : [{\"series\": series_I2, \"data\": jsondata_I2, \"labels\": labels_I2}],\n//      topic : \"I2\"\n//  }\n \n//  var series_I3= [\"I3\"];  \n//  var labels_I3 = [\"Data Values\"];  \n//  var data_I3 = \"[[\";  \n   \n//  for (i=0; i < msg.payload.length; i++) {  \n//   data_I3 += '{ \"x\":' + ((offset+parseInt(msg.payload[i].Time))*1000).toString() + ', \"y\":' + msg.payload[i].I3 + '}';  \n//   if (i < (msg.payload.length - 1)) {  \n//      data_I3 += \",\"  \n//   } else {  \n//      data_I3 += \"]]\"  \n//   }  \n//  }  \n//  var jsondata_I3 = JSON.parse(data_I3);\n \n//  var msg_I3 = {\n//      payload : [{\"series\": series_I3, \"data\": jsondata_I3, \"labels\": labels_I3}],\n//      topic : \"I3\"\n//  }\n \n//  var series_P = [\"P\"];  \n//  var labels_P = [\"Data Values\"];  \n//  var data_P = \"[[\";  \n   \n//  for (i=0; i < msg.payload.length; i++) {  \n//   data_P += '{ \"x\":' + ((offset+parseInt(msg.payload[i].Time))*1000).toString() + ', \"y\":' + msg.payload[i].P + '}';  \n//   if (i < (msg.payload.length - 1)) {  \n//      data_P += \",\"  \n//   } else {  \n//      data_P += \"]]\"  \n//   }  \n//  }  \n//  var jsondata_P = JSON.parse(data_P);\n \n//  var msg_P = {\n//      payload : [{\"series\": series_P, \"data\": jsondata_P, \"labels\": labels_P}],\n//      topic : \"P\"\n//  }\n \n//  //var series_F = [\"F\"];  \n//  //var labels_F = [\"Data Values\"];  \n \n//  //var data_F = (msg.payload[(msg.payload).length]).F;\n//  //var data_F = '50';\n//  //var jsondata_F = JSON.parse(data_F);\n \n//  var msg_F = {payload: msg.payload[msg.payload.length - 1].F};\n \n//  return [msg_V1, msg_V2, msg_V3, msg_I1, msg_I2, msg_I3, msg_P, msg_F];\n\nlet upper_V = 260;\nlet lower_V = 180;\nlet upper_I = 100;\n\nif (msg.payload === false)\n    {\n    var msg_V1 = {topic:\"V1\", payload: null};\n    var msg_V2 = {topic:\"V2\", payload: null};\n    var msg_V3 = {topic:\"V3\", payload: null}; \n    var msg_I1 = {topic:\"I1\", payload: null};\n    var msg_I2 = {topic:\"I2\", payload: null};\n    var msg_I3 = {topic:\"I3\", payload: null}; \n    var msg_F  = {payload: null};\n    }\n else\n    {\n    if (Number(msg.payload[msg.payload.length - 1].V1) > upper_V)\n        var msg_V1 = {topic:\"V1\", payload: upper_V};\n    else if (Number(msg.payload[msg.payload.length - 1].V1) < lower_V)\n        var msg_V1 = {topic:\"V1\", payload: lower_V};\n    else\n        var msg_V1 = {topic:\"V1\", payload: msg.payload[msg.payload.length - 1].V1};\n        \n    if (Number(msg.payload[msg.payload.length - 1].V2) > upper_V)\n        var msg_V2 = {topic:\"V2\", payload: upper_V};\n    else if (Number(msg.payload[msg.payload.length - 1].V2) < lower_V)\n        var msg_V2 = {topic:\"V2\", payload: lower_V};\n    else\n        var msg_V2 = {topic:\"V2\", payload: msg.payload[msg.payload.length - 1].V2};\n        \n    if (Number(msg.payload[msg.payload.length - 1].V3) > upper_V)\n        var msg_V3 = {topic:\"V3\", payload: upper_V};\n    else if (Number(msg.payload[msg.payload.length - 1].V3) < lower_V)\n        var msg_V3 = {topic:\"V3\", payload: lower_V};\n    else\n        var msg_V3 = {topic:\"V3\", payload: msg.payload[msg.payload.length - 1].V3};\n    \n    if (Number(msg.payload[msg.payload.length - 1].I1) > upper_I)\n        var msg_I1 = {topic:\"I1\", payload: upper_I};\n    else\n        var msg_I1 = {topic:\"I1\", payload: msg.payload[msg.payload.length - 1].I1};\n    \n    if (Number(msg.payload[msg.payload.length - 1].I2) > upper_I)\n        var msg_I2 = {topic:\"I2\", payload: upper_I};\n    else\n        var msg_I2 = {topic:\"I2\", payload: msg.payload[msg.payload.length - 1].I2};\n        \n    if (Number(msg.payload[msg.payload.length - 1].I3) > upper_I)\n        var msg_I3 = {topic:\"I3\", payload: upper_I};\n    else\n        var msg_I3 = {topic:\"I3\", payload: msg.payload[msg.payload.length - 1].I3};\n    \n     \n    var msg_F  = {payload: msg.payload[msg.payload.length - 1].F};\n    }\nreturn [msg_V1, msg_V2, msg_V3, msg_I1, msg_I2, msg_I3, msg_F];",
        "outputs": 7,
        "noerr": 0,
        "x": 640,
        "y": 1580,
        "wires": [
            [
                "b99992a0.7ce2e"
            ],
            [
                "b99992a0.7ce2e"
            ],
            [
                "b99992a0.7ce2e"
            ],
            [
                "c9587ac9.385b58"
            ],
            [
                "c9587ac9.385b58"
            ],
            [
                "c9587ac9.385b58"
            ],
            [
                "56ad9ba8.91e984"
            ]
        ]
    },
    {
        "id": "b99992a0.7ce2e",
        "type": "ui_chart",
        "z": "49f6a65a.0777d8",
        "name": "",
        "group": "1160d3df.5a9eec",
        "order": 1,
        "width": 0,
        "height": 0,
        "label": "Voltage C4 (V)",
        "chartType": "line",
        "legend": "true",
        "xformat": "HH:mm:ss",
        "interpolate": "linear",
        "nodata": "",
        "dot": true,
        "ymin": "",
        "ymax": "",
        "removeOlder": "10",
        "removeOlderPoints": "10",
        "removeOlderUnit": "60",
        "cutout": 0,
        "useOneColor": false,
        "useUTC": false,
        "colors": [
            "#1f77b4",
            "#aec7e8",
            "#ff7f0e",
            "#2ca02c",
            "#98df8a",
            "#d62728",
            "#ff9896",
            "#9467bd",
            "#c5b0d5"
        ],
        "useOldStyle": false,
        "outputs": 1,
        "x": 880,
        "y": 1540,
        "wires": [
            []
        ]
    },
    {
        "id": "c9587ac9.385b58",
        "type": "ui_chart",
        "z": "49f6a65a.0777d8",
        "name": "",
        "group": "1160d3df.5a9eec",
        "order": 1,
        "width": 0,
        "height": 0,
        "label": "Current C4 (A)",
        "chartType": "line",
        "legend": "true",
        "xformat": "HH:mm:ss",
        "interpolate": "linear",
        "nodata": "",
        "dot": true,
        "ymin": "",
        "ymax": "",
        "removeOlder": "10",
        "removeOlderPoints": "10",
        "removeOlderUnit": "60",
        "cutout": 0,
        "useOneColor": false,
        "useUTC": false,
        "colors": [
            "#1f77b4",
            "#aec7e8",
            "#ff7f0e",
            "#2ca02c",
            "#98df8a",
            "#d62728",
            "#ff9896",
            "#9467bd",
            "#c5b0d5"
        ],
        "useOldStyle": false,
        "outputs": 1,
        "x": 880,
        "y": 1600,
        "wires": [
            []
        ]
    },
    {
        "id": "a0dc2770.886098",
        "type": "ui_chart",
        "z": "49f6a65a.0777d8",
        "d": true,
        "name": "",
        "group": "1160d3df.5a9eec",
        "order": 1,
        "width": 0,
        "height": 0,
        "label": "Power (W)",
        "chartType": "line",
        "legend": "false",
        "xformat": "HH:mm:ss",
        "interpolate": "linear",
        "nodata": "",
        "dot": false,
        "ymin": "",
        "ymax": "",
        "removeOlder": "10",
        "removeOlderPoints": "20",
        "removeOlderUnit": "60",
        "cutout": 0,
        "useOneColor": false,
        "useUTC": true,
        "colors": [
            "#1f77b4",
            "#aec7e8",
            "#ff7f0e",
            "#2ca02c",
            "#98df8a",
            "#d62728",
            "#ff9896",
            "#9467bd",
            "#c5b0d5"
        ],
        "useOldStyle": false,
        "outputs": 1,
        "x": 850,
        "y": 1640,
        "wires": [
            []
        ]
    },
    {
        "id": "9017a10f.f5ac9",
        "type": "ui_chart",
        "z": "49f6a65a.0777d8",
        "d": true,
        "name": "",
        "group": "23f9abd1.a832d4",
        "order": 2,
        "width": 0,
        "height": 0,
        "label": " Energy (J)",
        "chartType": "line",
        "legend": "false",
        "xformat": "HH:mm:ss",
        "interpolate": "linear",
        "nodata": "",
        "dot": false,
        "ymin": "",
        "ymax": "",
        "removeOlder": "10",
        "removeOlderPoints": "20",
        "removeOlderUnit": "60",
        "cutout": 0,
        "useOneColor": false,
        "useUTC": true,
        "colors": [
            "#1f77b4",
            "#aec7e8",
            "#ff7f0e",
            "#2ca02c",
            "#98df8a",
            "#d62728",
            "#ff9896",
            "#9467bd",
            "#c5b0d5"
        ],
        "useOldStyle": false,
        "outputs": 1,
        "x": 1010,
        "y": 1640,
        "wires": [
            []
        ]
    },
    {
        "id": "cd51cb77.1f3308",
        "type": "rbe",
        "z": "49f6a65a.0777d8",
        "name": "Change_Check",
        "func": "rbei",
        "gap": "",
        "start": "",
        "inout": "out",
        "property": "payload",
        "x": 400,
        "y": 600,
        "wires": [
            [
                "7da98e89.57811",
                "5e80f99c.ca6af8",
                "21f23f90.16eb4"
            ]
        ]
    },
    {
        "id": "be0dd08c.5508e",
        "type": "rbe",
        "z": "49f6a65a.0777d8",
        "name": "Change_Check",
        "func": "rbei",
        "gap": "",
        "start": "",
        "inout": "out",
        "property": "payload",
        "x": 460,
        "y": 1200,
        "wires": [
            [
                "a94f3d61.a2d62",
                "69bb947e.878bec",
                "e904525.ee714b"
            ]
        ]
    },
    {
        "id": "fcb7d3e2.7b0ba",
        "type": "rbe",
        "z": "49f6a65a.0777d8",
        "name": "Change_Check",
        "func": "rbei",
        "gap": "",
        "start": "",
        "inout": "out",
        "property": "payload",
        "x": 420,
        "y": 860,
        "wires": [
            [
                "a26672c1.78bd8",
                "5b2b4190.3bae9",
                "cf26c34a.7fbe5"
            ]
        ]
    },
    {
        "id": "e9d19da8.b3dd",
        "type": "rbe",
        "z": "49f6a65a.0777d8",
        "name": "Change_Check",
        "func": "rbei",
        "gap": "",
        "start": "",
        "inout": "out",
        "property": "payload",
        "x": 400,
        "y": 1520,
        "wires": [
            [
                "1daac48a.3726db",
                "5ef40931.84aef8",
                "83a88502.dd64b8"
            ]
        ]
    },
    {
        "id": "7da98e89.57811",
        "type": "trigger",
        "z": "49f6a65a.0777d8",
        "op1": "",
        "op2": "false",
        "op1type": "nul",
        "op2type": "bool",
        "duration": "4",
        "extend": true,
        "units": "min",
        "reset": "",
        "bytopic": "all",
        "name": "Watchdog chart",
        "x": 480,
        "y": 520,
        "wires": [
            [
                "5e80f99c.ca6af8"
            ]
        ]
    },
    {
        "id": "a26672c1.78bd8",
        "type": "trigger",
        "z": "49f6a65a.0777d8",
        "op1": "",
        "op2": "false",
        "op1type": "nul",
        "op2type": "bool",
        "duration": "4",
        "extend": true,
        "units": "min",
        "reset": "",
        "bytopic": "all",
        "name": "Watchdog chart",
        "x": 440,
        "y": 800,
        "wires": [
            [
                "5b2b4190.3bae9"
            ]
        ]
    },
    {
        "id": "a94f3d61.a2d62",
        "type": "trigger",
        "z": "49f6a65a.0777d8",
        "op1": "",
        "op2": "false",
        "op1type": "nul",
        "op2type": "bool",
        "duration": "4",
        "extend": true,
        "units": "min",
        "reset": "",
        "bytopic": "all",
        "name": "Watchdog chart",
        "x": 508.01116943359375,
        "y": 1271.29248046875,
        "wires": [
            [
                "69bb947e.878bec"
            ]
        ]
    },
    {
        "id": "5ef40931.84aef8",
        "type": "trigger",
        "z": "49f6a65a.0777d8",
        "op1": "",
        "op2": "false",
        "op1type": "nul",
        "op2type": "bool",
        "duration": "4",
        "extend": true,
        "units": "min",
        "reset": "",
        "bytopic": "all",
        "name": "Watchdog chart",
        "x": 440,
        "y": 1580,
        "wires": [
            [
                "1daac48a.3726db"
            ]
        ]
    },
    {
        "id": "87064a93.f32878",
        "type": "ui_form",
        "z": "c11e4362.d41f9",
        "d": true,
        "name": "user_form",
        "label": "",
        "group": "1b4cce16.12a892",
        "order": 0,
        "width": 0,
        "height": 0,
        "options": [
            {
                "label": "Name",
                "value": "name",
                "type": "text",
                "required": true,
                "rows": null
            },
            {
                "label": "RFID tag",
                "value": "UserId",
                "type": "text",
                "required": true,
                "rows": null
            },
            {
                "label": "HAN id",
                "value": "hanId",
                "type": "text",
                "required": false,
                "rows": null
            },
            {
                "label": "password",
                "value": "password",
                "type": "password",
                "required": false,
                "rows": null
            },
            {
                "label": "email",
                "value": "email",
                "type": "email",
                "required": true,
                "rows": null
            }
        ],
        "formValue": {
            "name": "",
            "UserId": "",
            "hanId": "",
            "password": "",
            "email": ""
        },
        "payload": "",
        "submit": "submit",
        "cancel": "cancel",
        "topic": "",
        "x": 140,
        "y": 240,
        "wires": [
            [
                "ecea0d60.1e907"
            ]
        ]
    },
    {
        "id": "4b5ca923.0d4248",
        "type": "sqlite",
        "z": "c11e4362.d41f9",
        "mydb": "9befc88e.28ef18",
        "sqlquery": "prepared",
        "sql": "INSERT INTO users (name,uidTag,hanId,password,email) VALUES ($name,$uidTag,$hanId,$password,$email)",
        "name": "insert_user",
        "x": 610,
        "y": 240,
        "wires": [
            [
                "402c16a8.3b88c8",
                "5f73556d.97bffc"
            ]
        ]
    },
    {
        "id": "7555d01b.524ae",
        "type": "debug",
        "z": "c11e4362.d41f9",
        "d": true,
        "name": "user form debug",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "x": 580,
        "y": 400,
        "wires": []
    },
    {
        "id": "7cf674d7.7bcbdc",
        "type": "inject",
        "z": "4d9afbc9.f0b6b4",
        "name": "Go",
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": "",
        "x": 190,
        "y": 140,
        "wires": [
            [
                "8aecfd77.75e88"
            ]
        ]
    },
    {
        "id": "8aecfd77.75e88",
        "type": "function",
        "z": "4d9afbc9.f0b6b4",
        "name": "INSERT Bind",
        "func": "msg.topic = \"INSERT INTO test (id,text) VALUES (?,?)\";\nmsg.payload = [2, \"This is a funny world's end\"];\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 385,
        "y": 141,
        "wires": [
            [
                "5762c543.990ccc"
            ]
        ]
    },
    {
        "id": "5762c543.990ccc",
        "type": "sqlite",
        "z": "4d9afbc9.f0b6b4",
        "mydb": "5a10e5e5.513ffc",
        "sql": "",
        "name": "Test DB",
        "x": 703,
        "y": 172,
        "wires": [
            [
                "9cf2ea83.5c85d8"
            ]
        ]
    },
    {
        "id": "9cf2ea83.5c85d8",
        "type": "debug",
        "z": "4d9afbc9.f0b6b4",
        "name": "",
        "active": true,
        "console": "false",
        "complete": "false",
        "x": 791,
        "y": 272,
        "wires": []
    },
    {
        "id": "42b8d713.0e8198",
        "type": "inject",
        "z": "4d9afbc9.f0b6b4",
        "name": "Go",
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": "",
        "x": 188,
        "y": 192,
        "wires": [
            [
                "f4418054.23646"
            ]
        ]
    },
    {
        "id": "f4418054.23646",
        "type": "function",
        "z": "4d9afbc9.f0b6b4",
        "name": "INSERT Old",
        "func": "msg.topic = \"INSERT INTO test (id,text) VALUES (3,'Directly in topic')\";\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 367,
        "y": 196,
        "wires": [
            [
                "5762c543.990ccc"
            ]
        ]
    },
    {
        "id": "ac733235.68093",
        "type": "inject",
        "z": "4d9afbc9.f0b6b4",
        "name": "Go",
        "topic": "",
        "payload": "funny",
        "payloadType": "string",
        "repeat": "",
        "crontab": "",
        "once": false,
        "x": 207,
        "y": 356,
        "wires": [
            [
                "59324002.a88a6"
            ]
        ]
    },
    {
        "id": "59324002.a88a6",
        "type": "function",
        "z": "4d9afbc9.f0b6b4",
        "name": "SELECT Old",
        "func": "msg.topic = \"SELECT * FROM test WHERE text LIKE '%\" + msg.payload + \"%'\";\nreturn msg;",
        "outputs": 1,
        "x": 434,
        "y": 359,
        "wires": [
            [
                "5762c543.990ccc"
            ]
        ]
    },
    {
        "id": "bfe70095.8c292",
        "type": "inject",
        "z": "4d9afbc9.f0b6b4",
        "name": "INSERT Bind - via JSON",
        "topic": "INSERT INTO test (id,text) VALUES (?, ?)",
        "payload": "[4, \"This is a funny world's end\"]",
        "payloadType": "str",
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": "",
        "x": 209,
        "y": 257,
        "wires": [
            [
                "61c7f10e.c3bdc"
            ]
        ]
    },
    {
        "id": "61c7f10e.c3bdc",
        "type": "json",
        "z": "4d9afbc9.f0b6b4",
        "name": "",
        "property": "payload",
        "action": "",
        "pretty": false,
        "x": 409,
        "y": 257,
        "wires": [
            [
                "5762c543.990ccc"
            ]
        ]
    },
    {
        "id": "89c1ceb0.38dea",
        "type": "inject",
        "z": "4d9afbc9.f0b6b4",
        "name": "Go \"funny\"",
        "topic": "",
        "payload": "%funny%",
        "payloadType": "str",
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": "",
        "x": 203,
        "y": 410,
        "wires": [
            [
                "a4bf0099.cdd73"
            ]
        ]
    },
    {
        "id": "a4bf0099.cdd73",
        "type": "function",
        "z": "4d9afbc9.f0b6b4",
        "name": "SELECT Bind",
        "func": "msg.topic = \"SELECT * FROM test WHERE text LIKE ?\";\nmsg.payload = [msg.payload];\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 430,
        "y": 413,
        "wires": [
            [
                "5762c543.990ccc"
            ]
        ]
    },
    {
        "id": "f84e0baa.695808",
        "type": "inject",
        "z": "4d9afbc9.f0b6b4",
        "name": "Go \"world's\"",
        "topic": "",
        "payload": "%world's%",
        "payloadType": "string",
        "repeat": "",
        "crontab": "",
        "once": false,
        "x": 207,
        "y": 472,
        "wires": [
            [
                "a4bf0099.cdd73"
            ]
        ]
    },
    {
        "id": "4b2ece3e.a2e2",
        "type": "function",
        "z": "c11e4362.d41f9",
        "name": "param_set",
        "func": "msg.params = {\n    $name:msg.payload.name,\n    $uidTag:msg.payload.UserId.toUpperCase(),\n    $hanId:msg.payload.hanId,\n    $password:msg.payload.password,\n    $email: msg.payload.email\n}\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 410,
        "y": 240,
        "wires": [
            [
                "4b5ca923.0d4248",
                "7555d01b.524ae",
                "1aea45e0.a44f9a"
            ]
        ]
    },
    {
        "id": "83e46e92.0537",
        "type": "ui_text",
        "z": "c11e4362.d41f9",
        "d": true,
        "group": "3cecb3bd.22f5ac",
        "order": 3,
        "width": 0,
        "height": 0,
        "name": "register_feedback",
        "label": "",
        "format": "{{error.source.name : error.message}}",
        "layout": "row-center",
        "x": 770,
        "y": 340,
        "wires": []
    },
    {
        "id": "2b3cd2a8.d64e8e",
        "type": "catch",
        "z": "c11e4362.d41f9",
        "d": true,
        "name": "error_catcher",
        "scope": null,
        "uncaught": false,
        "x": 570,
        "y": 340,
        "wires": [
            [
                "83e46e92.0537"
            ]
        ]
    },
    {
        "id": "1c535dd1.c9f042",
        "type": "mqtt in",
        "z": "c11e4362.d41f9",
        "name": "RFID_data",
        "topic": "HANevse/updateUser",
        "qos": "2",
        "datatype": "json",
        "broker": "df69e39.f63442",
        "x": 120,
        "y": 780,
        "wires": [
            [
                "d7eda0a3.f3501",
                "d788f5bc.16ef68"
            ]
        ]
    },
    {
        "id": "d7eda0a3.f3501",
        "type": "ui_text",
        "z": "c11e4362.d41f9",
        "group": "1b4cce16.12a892",
        "order": 10,
        "width": 0,
        "height": 0,
        "name": "last_RFID",
        "label": "Last RFID:",
        "format": "{{msg.payload.UserId}}",
        "layout": "row-spread",
        "x": 320,
        "y": 780,
        "wires": []
    },
    {
        "id": "e6a54f9d.fbbcb",
        "type": "ui_text",
        "z": "c11e4362.d41f9",
        "d": true,
        "group": "3cecb3bd.22f5ac",
        "order": 3,
        "width": 0,
        "height": 0,
        "name": "sql_feedback",
        "label": "",
        "format": "{{msg.payload}}",
        "layout": "row-center",
        "x": 790,
        "y": 280,
        "wires": []
    },
    {
        "id": "ecea0d60.1e907",
        "type": "rbe",
        "z": "c11e4362.d41f9",
        "name": "",
        "func": "rbe",
        "gap": "",
        "start": "",
        "inout": "out",
        "property": "payload",
        "x": 270,
        "y": 240,
        "wires": [
            [
                "4b2ece3e.a2e2"
            ]
        ]
    },
    {
        "id": "7fd1a42e.0b83fc",
        "type": "trigger",
        "z": "49f6a65a.0777d8",
        "op1": "",
        "op2": " ",
        "op1type": "nul",
        "op2type": "str",
        "duration": "5",
        "extend": true,
        "units": "min",
        "reset": "",
        "bytopic": "all",
        "name": "Watchdog socket1",
        "x": 750,
        "y": 700,
        "wires": [
            [
                "5d1a7e3b.c751c"
            ]
        ]
    },
    {
        "id": "86bab7b0.dc2708",
        "type": "trigger",
        "z": "49f6a65a.0777d8",
        "op1": "",
        "op2": " ",
        "op1type": "nul",
        "op2type": "str",
        "duration": "5",
        "extend": true,
        "units": "min",
        "reset": "",
        "bytopic": "all",
        "name": "Watchdog socket2",
        "x": 710,
        "y": 1020,
        "wires": [
            [
                "7009b02c.6b723"
            ]
        ]
    },
    {
        "id": "5538bf00.814a9",
        "type": "trigger",
        "z": "49f6a65a.0777d8",
        "op1": "",
        "op2": " ",
        "op1type": "nul",
        "op2type": "str",
        "duration": "5",
        "extend": true,
        "units": "min",
        "reset": "",
        "bytopic": "all",
        "name": "Watchdog socket3",
        "x": 670,
        "y": 1400,
        "wires": [
            [
                "d073f2be.bd219"
            ]
        ]
    },
    {
        "id": "402c16a8.3b88c8",
        "type": "trigger",
        "z": "c11e4362.d41f9",
        "op1": "successfully registered",
        "op2": " ",
        "op1type": "str",
        "op2type": "str",
        "duration": "5",
        "extend": true,
        "units": "s",
        "reset": "",
        "bytopic": "all",
        "name": "Watchdog register answer",
        "x": 590,
        "y": 300,
        "wires": [
            [
                "e6a54f9d.fbbcb"
            ]
        ]
    },
    {
        "id": "239607bd.d2ee88",
        "type": "function",
        "z": "c11e4362.d41f9",
        "name": "clear_set",
        "func": "msg.payload = {\"name\":\"\",\"UserId\":\"\",\"hanId\":\"\",\"password\":\"\",\"email\":\"\"}\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 480,
        "y": 160,
        "wires": [
            [
                "87064a93.f32878"
            ]
        ]
    },
    {
        "id": "5f73556d.97bffc",
        "type": "trigger",
        "z": "c11e4362.d41f9",
        "op1": "",
        "op2": "true",
        "op1type": "nul",
        "op2type": "bool",
        "duration": "5",
        "extend": true,
        "units": "s",
        "reset": "",
        "bytopic": "all",
        "name": "Watchdog register clear",
        "x": 270,
        "y": 160,
        "wires": [
            [
                "239607bd.d2ee88"
            ]
        ]
    },
    {
        "id": "d788f5bc.16ef68",
        "type": "trigger",
        "z": "c11e4362.d41f9",
        "op1": "",
        "op2": "{\"userId\":\"\"}",
        "op1type": "nul",
        "op2type": "json",
        "duration": "5",
        "extend": true,
        "units": "s",
        "reset": "",
        "bytopic": "all",
        "name": "Watchdog rfid clear",
        "x": 230,
        "y": 820,
        "wires": [
            [
                "d7eda0a3.f3501"
            ]
        ]
    },
    {
        "id": "549a4dd6.7419f4",
        "type": "comment",
        "z": "b8cf085c.d7fe68",
        "name": "create a key for a password to access this page",
        "info": "",
        "x": 260,
        "y": 240,
        "wires": []
    },
    {
        "id": "79852b2c.26ac04",
        "type": "bcrypt",
        "z": "b8cf085c.d7fe68",
        "name": "",
        "action": "encrypt",
        "field": "payload",
        "hash": "payload",
        "rounds": "10",
        "x": 550,
        "y": 280,
        "wires": [
            [
                "3ce49622.875d1a"
            ]
        ]
    },
    {
        "id": "3f60c5e.cf0253a",
        "type": "inject",
        "z": "b8cf085c.d7fe68",
        "name": "",
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "x": 170,
        "y": 280,
        "wires": [
            [
                "2ff0acab.d77d14"
            ]
        ]
    },
    {
        "id": "2ff0acab.d77d14",
        "type": "change",
        "z": "b8cf085c.d7fe68",
        "name": "Enter Password Here",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "controlsystem",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 360,
        "y": 280,
        "wires": [
            [
                "79852b2c.26ac04"
            ]
        ]
    },
    {
        "id": "3ce49622.875d1a",
        "type": "debug",
        "z": "b8cf085c.d7fe68",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "x": 710,
        "y": 280,
        "wires": []
    },
    {
        "id": "1aea45e0.a44f9a",
        "type": "sqlite",
        "z": "c11e4362.d41f9",
        "mydb": "eacf9c1b.e4c86",
        "sqlquery": "prepared",
        "sql": "INSERT INTO users (name,uidTag,hanId,password,email) VALUES ($name,$uidTag,$hanId,$password,$email)",
        "name": "insert_user_local",
        "x": 710,
        "y": 180,
        "wires": [
            []
        ]
    },
    {
        "id": "61a0e4bb.41cfbc",
        "type": "mqtt in",
        "z": "49f6a65a.0777d8",
        "name": "Charger4_MQTT",
        "topic": "HANevse/photonConverted/4",
        "qos": "2",
        "datatype": "utf8",
        "broker": "df69e39.f63442",
        "x": 520,
        "y": 1660,
        "wires": [
            [
                "2ffb5f6b.adb96",
                "106a68bd.537e27"
            ]
        ]
    },
    {
        "id": "2ffb5f6b.adb96",
        "type": "ui_text",
        "z": "49f6a65a.0777d8",
        "group": "655de677.31fa58",
        "order": 10,
        "width": 0,
        "height": 0,
        "name": "",
        "label": "C4:",
        "format": "{{msg.payload}}",
        "layout": "row-center",
        "x": 710,
        "y": 1660,
        "wires": []
    },
    {
        "id": "106a68bd.537e27",
        "type": "trigger",
        "z": "49f6a65a.0777d8",
        "op1": "",
        "op2": "  ",
        "op1type": "nul",
        "op2type": "str",
        "duration": "5",
        "extend": true,
        "units": "min",
        "reset": "",
        "bytopic": "all",
        "name": "Watchdog socket4",
        "x": 610,
        "y": 1700,
        "wires": [
            [
                "2ffb5f6b.adb96"
            ]
        ]
    },
    {
        "id": "40289ffc.a6ad9",
        "type": "ui_text",
        "z": "49f6a65a.0777d8",
        "group": "655de677.31fa58",
        "order": 10,
        "width": 0,
        "height": 0,
        "name": "",
        "label": "Charger1 F:",
        "format": "{{msg.payload}} Hz",
        "layout": "row-spread",
        "x": 1010,
        "y": 720,
        "wires": []
    },
    {
        "id": "56ad9ba8.91e984",
        "type": "ui_text",
        "z": "49f6a65a.0777d8",
        "group": "655de677.31fa58",
        "order": 10,
        "width": 0,
        "height": 0,
        "name": "",
        "label": "Charger2 F:",
        "format": "{{msg.payload}} Hz",
        "layout": "row-spread",
        "x": 916,
        "y": 1453.77783203125,
        "wires": []
    },
    {
        "id": "88d28980.bfb878",
        "type": "ui_form",
        "z": "c11e4362.d41f9",
        "name": "user_form",
        "label": "",
        "group": "1b4cce16.12a892",
        "order": 0,
        "width": 0,
        "height": 0,
        "options": [
            {
                "label": "Name",
                "value": "name",
                "type": "text",
                "required": true,
                "rows": null
            },
            {
                "label": "RFID tag",
                "value": "UserId",
                "type": "text",
                "required": true,
                "rows": null
            },
            {
                "label": "HAN id",
                "value": "hanId",
                "type": "text",
                "required": false,
                "rows": null
            },
            {
                "label": "password",
                "value": "password",
                "type": "password",
                "required": false,
                "rows": null
            },
            {
                "label": "email",
                "value": "email",
                "type": "email",
                "required": true,
                "rows": null
            },
            {
                "label": "car brand",
                "value": "brand",
                "type": "text",
                "required": true,
                "rows": null
            },
            {
                "label": "car name",
                "value": "typecar",
                "type": "text",
                "required": true,
                "rows": null
            },
            {
                "label": "car year",
                "value": "year",
                "type": "number",
                "required": false,
                "rows": null
            },
            {
                "label": "battery capacity",
                "value": "battery",
                "type": "number",
                "required": false,
                "rows": null
            },
            {
                "label": "edition",
                "value": "edition",
                "type": "text",
                "required": false,
                "rows": null
            }
        ],
        "formValue": {
            "name": "",
            "UserId": "",
            "hanId": "",
            "password": "",
            "email": "",
            "brand": "",
            "typecar": "",
            "year": "",
            "battery": "",
            "edition": ""
        },
        "payload": "",
        "submit": "submit",
        "cancel": "cancel",
        "topic": "",
        "x": 120,
        "y": 620,
        "wires": [
            [
                "4b5ea96a.673908"
            ]
        ]
    },
    {
        "id": "82bc0f9.bda04f",
        "type": "function",
        "z": "c11e4362.d41f9",
        "name": "param_set user",
        "func": "msg.params = {\n    $name:msg.payload.name,\n    $uidTag:msg.payload.UserId.toUpperCase(),\n    $hanId:msg.payload.hanId,\n    $password:msg.payload.password,\n    $email: msg.payload.email\n}\n\nvar str1 = \"SELECT id FROM users WHERE uidTag='\";\nstr1 = str1.concat(msg.payload.UserId.toUpperCase(), \"' ORDER BY rowid DESC LIMIT 1\");\nmsg.topic = str1;\n\n//return [msg_user, msg_car];\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 300,
        "y": 660,
        "wires": [
            [
                "ddcbb1d1.fa8ba",
                "5b206591.f161cc",
                "e1462a36.de1d88"
            ]
        ]
    },
    {
        "id": "5b206591.f161cc",
        "type": "sqlite",
        "z": "c11e4362.d41f9",
        "mydb": "9befc88e.28ef18",
        "sqlquery": "prepared",
        "sql": "INSERT INTO users (name,uidTag,hanId,password,email) VALUES ($name,$uidTag,$hanId,$password,$email)",
        "name": "insert_user",
        "x": 510,
        "y": 600,
        "wires": [
            [
                "cd390087.c938e",
                "cfe77d13.ab306"
            ]
        ]
    },
    {
        "id": "ddcbb1d1.fa8ba",
        "type": "sqlite",
        "z": "c11e4362.d41f9",
        "mydb": "eacf9c1b.e4c86",
        "sqlquery": "prepared",
        "sql": "INSERT INTO users (name,uidTag,hanId,password,email) VALUES ($name,$uidTag,$hanId,$password,$email)",
        "name": "insert_user_local",
        "x": 570,
        "y": 640,
        "wires": [
            []
        ]
    },
    {
        "id": "df84d691.461258",
        "type": "sqlite",
        "z": "c11e4362.d41f9",
        "mydb": "9befc88e.28ef18",
        "sqlquery": "prepared",
        "sql": "INSERT INTO cars (brand,type,year,batteryCapacity,verified,edition) VALUES ($brand,$typecar,$year,$battery,0,$edition)",
        "name": "insert_car",
        "x": 500,
        "y": 780,
        "wires": [
            []
        ]
    },
    {
        "id": "b088267f.0178e8",
        "type": "sqlite",
        "z": "c11e4362.d41f9",
        "mydb": "9befc88e.28ef18",
        "sqlquery": "msg.topic",
        "sql": "\"SELECT * FROM users WHERE uidTag=? ORDER BY rowid DESC LIMIT 1\", ($uidTag,)",
        "name": "query for userID",
        "x": 640,
        "y": 680,
        "wires": [
            [
                "e715fbb3.aca3d8"
            ]
        ]
    },
    {
        "id": "7f62771e.c79d88",
        "type": "sqlite",
        "z": "c11e4362.d41f9",
        "mydb": "9befc88e.28ef18",
        "sqlquery": "msg.topic",
        "sql": "SELECT id FROM cars WHERE type= $typecar AND brand=$brand ORDER BY rowid DESC LIMIT 1;\n",
        "name": "query for carID",
        "x": 620,
        "y": 720,
        "wires": [
            [
                "e715fbb3.aca3d8"
            ]
        ]
    },
    {
        "id": "2fe0d737.77e2a8",
        "type": "function",
        "z": "c11e4362.d41f9",
        "name": "IDs parse",
        "func": "\n\n//var car_id = {topic:\"V1\", payload: msg.payload[msg.payload.length - 1].V1};\n//var user_id = {topic:\"V2\", payload: msg.payload[msg.payload.length - 1].V2};\n\n//msg.params = {}\n\nmsg.params = {\n    $user_id:msg.payload[0][0].id,\n    $car_id:msg.payload[1][0].id\n}\nmsg.payload = \"\"\nmsg.topic = ''\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 940,
        "y": 700,
        "wires": [
            [
                "48849933.c6ef68",
                "d2091083.62635"
            ]
        ]
    },
    {
        "id": "32979e47.8f1f82",
        "type": "function",
        "z": "c11e4362.d41f9",
        "name": "param_set car",
        "func": "msg.params = {\n    $brand: msg.payload.brand,\n    $typecar: msg.payload.typecar,\n    $year: msg.payload.year,\n    $battery: msg.payload.battery,\n    $edition: msg.payload.edition\n}\n\nvar str1 = \"SELECT id FROM cars WHERE type='\";\nstr1 = str1.concat(msg.payload.typecar, \"' AND brand='\", msg.payload.brand, \"' ORDER BY rowid DESC LIMIT 1\");\nmsg.topic = str1;\n\n//return [msg_user, msg_car];\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 300,
        "y": 720,
        "wires": [
            [
                "df84d691.461258",
                "b3c7d689.51e2b8",
                "482da0f3.0327c"
            ]
        ]
    },
    {
        "id": "e715fbb3.aca3d8",
        "type": "join",
        "z": "c11e4362.d41f9",
        "name": "joiner",
        "mode": "custom",
        "build": "array",
        "property": "payload",
        "propertyType": "msg",
        "key": "topic",
        "joiner": "\\n",
        "joinerType": "str",
        "accumulate": false,
        "timeout": "",
        "count": "2",
        "reduceRight": false,
        "reduceExp": "",
        "reduceInit": "",
        "reduceInitType": "",
        "reduceFixup": "",
        "x": 810,
        "y": 700,
        "wires": [
            [
                "2fe0d737.77e2a8"
            ]
        ]
    },
    {
        "id": "e1462a36.de1d88",
        "type": "delay",
        "z": "c11e4362.d41f9",
        "name": "dly",
        "pauseType": "delay",
        "timeout": "300",
        "timeoutUnits": "milliseconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "x": 470,
        "y": 680,
        "wires": [
            [
                "b088267f.0178e8"
            ]
        ]
    },
    {
        "id": "b3c7d689.51e2b8",
        "type": "delay",
        "z": "c11e4362.d41f9",
        "name": "dly",
        "pauseType": "delay",
        "timeout": "310",
        "timeoutUnits": "milliseconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "x": 470,
        "y": 720,
        "wires": [
            [
                "7f62771e.c79d88"
            ]
        ]
    },
    {
        "id": "48849933.c6ef68",
        "type": "debug",
        "z": "c11e4362.d41f9",
        "name": "final params",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "x": 990,
        "y": 760,
        "wires": []
    },
    {
        "id": "4b5ea96a.673908",
        "type": "rbe",
        "z": "c11e4362.d41f9",
        "name": "",
        "func": "rbe",
        "gap": "",
        "start": "",
        "inout": "out",
        "property": "payload",
        "x": 130,
        "y": 680,
        "wires": [
            [
                "82bc0f9.bda04f",
                "32979e47.8f1f82"
            ]
        ]
    },
    {
        "id": "cd390087.c938e",
        "type": "trigger",
        "z": "c11e4362.d41f9",
        "op1": "",
        "op2": "true",
        "op1type": "nul",
        "op2type": "bool",
        "duration": "5",
        "extend": true,
        "units": "s",
        "reset": "",
        "bytopic": "all",
        "name": "Watchdog register clear",
        "x": 210,
        "y": 540,
        "wires": [
            [
                "be4c8270.9884b"
            ]
        ]
    },
    {
        "id": "be4c8270.9884b",
        "type": "function",
        "z": "c11e4362.d41f9",
        "name": "clear_set",
        "func": "msg.payload = {\"name\":\"\",\"UserId\":\"\",\"hanId\":\"\",\"password\":\"\",\"email\":\"\",\"brand\":\"\",\"typecar\":\"\",\"year\":\"\",\"battery\":\"\",\"edition\":\"\"}\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 400,
        "y": 540,
        "wires": [
            [
                "88d28980.bfb878"
            ]
        ]
    },
    {
        "id": "ad74d192.d7a03",
        "type": "ui_text",
        "z": "c11e4362.d41f9",
        "group": "3cecb3bd.22f5ac",
        "order": 3,
        "width": 0,
        "height": 0,
        "name": "register_feedback",
        "label": "",
        "format": "{{error.source.name : error.message}}",
        "layout": "row-center",
        "x": 970,
        "y": 640,
        "wires": []
    },
    {
        "id": "295ab400.d8189c",
        "type": "catch",
        "z": "c11e4362.d41f9",
        "name": "error_catcher",
        "scope": null,
        "uncaught": false,
        "x": 790,
        "y": 640,
        "wires": [
            [
                "ad74d192.d7a03"
            ]
        ]
    },
    {
        "id": "6f0061d6.ed8c5",
        "type": "ui_text",
        "z": "c11e4362.d41f9",
        "group": "3cecb3bd.22f5ac",
        "order": 3,
        "width": 0,
        "height": 0,
        "name": "sql_feedback",
        "label": "",
        "format": "{{msg.payload}}",
        "layout": "row-center",
        "x": 990,
        "y": 580,
        "wires": []
    },
    {
        "id": "cfe77d13.ab306",
        "type": "trigger",
        "z": "c11e4362.d41f9",
        "op1": "successfully registered",
        "op2": " ",
        "op1type": "str",
        "op2type": "str",
        "duration": "5",
        "extend": true,
        "units": "s",
        "reset": "",
        "bytopic": "all",
        "name": "Watchdog register answer",
        "x": 790,
        "y": 600,
        "wires": [
            [
                "6f0061d6.ed8c5"
            ]
        ]
    },
    {
        "id": "d2091083.62635",
        "type": "sqlite",
        "z": "c11e4362.d41f9",
        "mydb": "9befc88e.28ef18",
        "sqlquery": "prepared",
        "sql": "INSERT INTO car_of_user (carId, userId, batteryPercentage) VALUES ($car_id, $user_id, 0)",
        "name": "insert_car",
        "x": 1100,
        "y": 700,
        "wires": [
            []
        ]
    },
    {
        "id": "482da0f3.0327c",
        "type": "sqlite",
        "z": "c11e4362.d41f9",
        "mydb": "eacf9c1b.e4c86",
        "sqlquery": "prepared",
        "sql": "INSERT INTO cars (brand,type,year,batteryCapacity,verified,edition) VALUES ($brand,$typecar,$year,$battery,0,$edition)",
        "name": "insert_car_local",
        "x": 520,
        "y": 820,
        "wires": [
            []
        ]
    },
    {
        "id": "932799f1.ba9998",
        "type": "function",
        "z": "54366890.831598",
        "name": "Draw P Graph",
        "func": "var time = Date.now();\nvar out = {};\nvar len = msg.payload.length;\n\nout.payload = [{\n    \"series\": [\"PV\", \"EV\"],\n    \"data\":[[],[]],\n    \"labels\": []\n}];\n\nfor (let i = 0; i < len; i++) {\n    out.payload[0][\"data\"][0].push({\"x\": time + i*3600000, \"y\": msg.payload[i]['PV']});\n    out.payload[0][\"data\"][1].push({\"x\": time + i*3600000, \"y\": msg.payload[i]['EV']});\n}\n\nglobal.set(\"P_Graph_data\", out.payload);\n\nreturn out;",
        "outputs": 1,
        "noerr": 0,
        "x": 760,
        "y": 320,
        "wires": [
            [
                "19595dda.bd7442"
            ]
        ]
    },
    {
        "id": "7ac26f60.d0d3",
        "type": "ui_chart",
        "z": "54366890.831598",
        "name": "",
        "group": "d832f525.fbe818",
        "order": 2,
        "width": 11,
        "height": 5,
        "label": "Power",
        "chartType": "line",
        "legend": "true",
        "xformat": "auto",
        "interpolate": "linear",
        "nodata": "",
        "dot": true,
        "ymin": "",
        "ymax": "",
        "removeOlder": "20",
        "removeOlderPoints": "20",
        "removeOlderUnit": "3600",
        "cutout": 0,
        "useOneColor": false,
        "useUTC": false,
        "colors": [
            "#1f77b4",
            "#f57900",
            "#7101bc",
            "#ff0000",
            "#98df8a",
            "#d62728",
            "#ff9896",
            "#9467bd",
            "#c5b0d5"
        ],
        "useOldStyle": false,
        "outputs": 1,
        "x": 1410,
        "y": 380,
        "wires": [
            []
        ]
    },
    {
        "id": "89310389.8803e",
        "type": "mqtt in",
        "z": "54366890.831598",
        "name": "",
        "topic": "HANevse/predict/data",
        "qos": "2",
        "datatype": "json",
        "broker": "df69e39.f63442",
        "x": 460,
        "y": 320,
        "wires": [
            [
                "932799f1.ba9998"
            ]
        ]
    },
    {
        "id": "aabb3529.7169f",
        "type": "mqtt in",
        "z": "54366890.831598",
        "name": "",
        "topic": "HANevse/predict/SOC",
        "qos": "2",
        "datatype": "json",
        "broker": "df69e39.f63442",
        "x": 460,
        "y": 560,
        "wires": [
            [
                "465e393d.a7d6f",
                "5b416cac.58685c",
                "aa36f686.90d84",
                "a47162d.2ef122"
            ]
        ]
    },
    {
        "id": "465e393d.a7d6f",
        "type": "function",
        "z": "54366890.831598",
        "name": "Draw SOC Graph",
        "func": "var time = Date.now();\nvar out = {};\nvar len = msg.payload.length;\n\nout.payload = [{\n    \"series\": [\"SOC\"],\n    \"data\":[[]],\n    \"labels\": [\"\"]\n}];\n\nfor (let i = 0; i < len; i++) {\n    out.payload[0][\"data\"][0].push({\"x\": time + i*3600000, \"y\": msg.payload[i]['SOC']});\n}\n\nglobal.set(\"Graph_data_SOC\", out.payload);\n\nreturn out;",
        "outputs": 1,
        "noerr": 0,
        "x": 770,
        "y": 520,
        "wires": [
            []
        ]
    },
    {
        "id": "f7053e8b.9a465",
        "type": "ui_chart",
        "z": "54366890.831598",
        "name": "",
        "group": "d832f525.fbe818",
        "order": 12,
        "width": 11,
        "height": 5,
        "label": "SOC",
        "chartType": "line",
        "legend": "false",
        "xformat": "auto",
        "interpolate": "linear",
        "nodata": "",
        "dot": true,
        "ymin": "",
        "ymax": "",
        "removeOlder": "10",
        "removeOlderPoints": "10",
        "removeOlderUnit": "3600",
        "cutout": 0,
        "useOneColor": false,
        "useUTC": false,
        "colors": [
            "#1f77b4",
            "#aec7e8",
            "#ff7f0e",
            "#2ca02c",
            "#98df8a",
            "#d62728",
            "#ff9896",
            "#9467bd",
            "#c5b0d5"
        ],
        "useOldStyle": false,
        "outputs": 1,
        "x": 1410,
        "y": 600,
        "wires": [
            []
        ]
    },
    {
        "id": "3fc04275.a0c6b6",
        "type": "exec",
        "z": "75ab9946.be732",
        "command": "ls",
        "addpay": true,
        "append": "",
        "useSpawn": "false",
        "timer": "",
        "oldrc": false,
        "name": "",
        "x": 510,
        "y": 60,
        "wires": [
            [
                "d9976519.de1828"
            ],
            [],
            []
        ]
    },
    {
        "id": "d9976519.de1828",
        "type": "change",
        "z": "75ab9946.be732",
        "name": "split and filter",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "(\t    $files := [$split(payload, '\\n')[$ != \"\"]];\t    $count($env('EXTENSIONS')) = 0 ? [$files] : [$files[$split($, '.')[-1] in $env('EXTENSIONS')]];\t)",
                "tot": "jsonata"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 680,
        "y": 40,
        "wires": [
            []
        ]
    },
    {
        "id": "6fb4822d.0a411c",
        "type": "switch",
        "z": "75ab9946.be732",
        "name": "",
        "property": "$env('DIRECTORY')",
        "propertyType": "jsonata",
        "rules": [
            {
                "t": "empty"
            },
            {
                "t": "else"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 210,
        "y": 80,
        "wires": [
            [
                "3fc04275.a0c6b6"
            ],
            [
                "a75117f4.46801"
            ]
        ]
    },
    {
        "id": "a75117f4.46801",
        "type": "change",
        "z": "75ab9946.be732",
        "name": "DIRECTORY",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "DIRECTORY",
                "tot": "env"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 350,
        "y": 120,
        "wires": [
            [
                "3fc04275.a0c6b6"
            ]
        ]
    },
    {
        "id": "4e8234e2.a174dc",
        "type": "http in",
        "z": "e001098b.ca9728",
        "name": "",
        "url": "/fileupload",
        "method": "post",
        "upload": true,
        "swaggerDoc": "",
        "x": 140,
        "y": 440,
        "wires": [
            [
                "5418bcbd.b3f9ac",
                "bcdce724.8a5908"
            ]
        ]
    },
    {
        "id": "ab44b1aa.36bef8",
        "type": "http response",
        "z": "e001098b.ca9728",
        "name": "",
        "statusCode": "",
        "headers": {},
        "x": 850,
        "y": 440,
        "wires": []
    },
    {
        "id": "d040ad18.172fc8",
        "type": "ui_template",
        "z": "e001098b.ca9728",
        "group": "581bfac2.8d90bc",
        "name": "Upload",
        "order": 6,
        "width": 12,
        "height": 3,
        "format": "<form id=\"upload_form\" enctype=\"multipart/form-data\" method=\"post\">\n    <input type=\"file\" name=\"file1\" id=\"file1\"><br>\n    <input type=\"button\" value=\"Upload File\" onclick=\"uploadFile()\">\n    <progress id=\"progressBar\" value=\"0\" max=\"100\" style=\"width:300px;\"></progress>\n    <p id=\"status\"></p>\n    <p id=\"loaded_n_total\"></p>\n</form>\n\n<script>\n    function _(el){\n    return document.getElementById(el);\n}\nfunction uploadFile(){\n    var file = _(\"file1\").files[0];\n    if (file.size>1024) {\n        alert(\"File should be smaller than 1KB.\");\n        return;\n    }\n    //alert(file.name+\" | \"+file.size+\" | \"+file.type);\n    var formdata = new FormData();\n    formdata.append(\"file1\", file);\n    var ajax = new XMLHttpRequest();\n    ajax.upload.addEventListener(\"progress\", progressHandler, false);\n    ajax.addEventListener(\"load\", completeHandler, false);\n    ajax.addEventListener(\"error\", errorHandler, false);\n    ajax.addEventListener(\"abort\", abortHandler, false);\n    ajax.open(\"POST\", \"/fileupload\");\n    ajax.send(formdata);\n}\nfunction progressHandler(event){\n    _(\"loaded_n_total\").innerHTML = \"Uploaded \"+event.loaded+\" bytes of \"+event.total;\n    var percent = (event.loaded / event.total) * 100;\n    _(\"progressBar\").value = Math.round(percent);\n    _(\"status\").innerHTML = Math.round(percent)+\"% uploaded... please wait\";\n}\nfunction completeHandler(event){\n    _(\"status\").innerHTML = event.target.responseText;\n    _(\"progressBar\").value = 0;\n}\nfunction errorHandler(event){\n    _(\"status\").innerHTML = \"Upload Failed\";\n}\nfunction abortHandler(event){\n    _(\"status\").innerHTML = \"Upload Aborted\";\n}\n</script>",
        "storeOutMessages": true,
        "fwdInMessages": true,
        "resendOnRefresh": false,
        "templateScope": "local",
        "x": 120,
        "y": 400,
        "wires": [
            []
        ]
    },
    {
        "id": "ebde02fc.a2a218",
        "type": "subflow:75ab9946.be732",
        "z": "e001098b.ca9728",
        "d": true,
        "name": "",
        "env": [
            {
                "name": "DIRECTORY",
                "value": "UPLOAD_DIR",
                "type": "env"
            },
            {
                "name": "EXTENSIONS",
                "value": "EXTENSIONS",
                "type": "env"
            }
        ],
        "x": 380,
        "y": 140,
        "wires": [
            [
                "9c73bea9.9817d"
            ]
        ]
    },
    {
        "id": "693eab01.c723ac",
        "type": "ui_dropdown",
        "z": "e001098b.ca9728",
        "d": true,
        "name": "",
        "label": "",
        "tooltip": "",
        "place": "Select option",
        "group": "581bfac2.8d90bc",
        "order": 4,
        "width": 0,
        "height": 0,
        "passthru": true,
        "options": [
            {
                "label": "",
                "value": "",
                "type": "str"
            }
        ],
        "payload": "",
        "topic": "",
        "x": 750,
        "y": 140,
        "wires": [
            [
                "bf577a38.96e08"
            ]
        ]
    },
    {
        "id": "ffc64451.87f9e",
        "type": "link in",
        "z": "e001098b.ca9728",
        "name": "refreshFileDropdown",
        "links": [
            "e18aaa9d.aa34b",
            "cca7cf30.499ea"
        ],
        "x": 75,
        "y": 140,
        "wires": [
            [
                "b0b61d8.fd1a76"
            ]
        ]
    },
    {
        "id": "17a0ab9f.ec3734",
        "type": "ui_button",
        "z": "e001098b.ca9728",
        "d": true,
        "name": "",
        "group": "581bfac2.8d90bc",
        "order": 5,
        "width": 0,
        "height": 0,
        "passthru": false,
        "label": "Delete",
        "color": "",
        "bgcolor": "",
        "icon": "",
        "payload": "",
        "payloadType": "str",
        "topic": "",
        "x": 110,
        "y": 220,
        "wires": [
            [
                "445417be.b6bb1"
            ]
        ]
    },
    {
        "id": "bf577a38.96e08",
        "type": "change",
        "z": "e001098b.ca9728",
        "d": true,
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "selectedFile",
                "pt": "flow",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 960,
        "y": 140,
        "wires": [
            []
        ]
    },
    {
        "id": "5418bcbd.b3f9ac",
        "type": "change",
        "z": "e001098b.ca9728",
        "name": "getFile",
        "rules": [
            {
                "t": "set",
                "p": "filename",
                "pt": "msg",
                "to": "$env('UPLOAD_DIR')  & '/' & req.files[0].originalname",
                "tot": "jsonata"
            },
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "req.files[0].buffer",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 430,
        "y": 360,
        "wires": [
            [
                "2ca6dc87.2d8854"
            ]
        ]
    },
    {
        "id": "c86448e4.da91f",
        "type": "file",
        "z": "e001098b.ca9728",
        "name": "",
        "filename": "",
        "appendNewline": false,
        "createDir": true,
        "overwriteFile": "true",
        "encoding": "none",
        "x": 770,
        "y": 280,
        "wires": [
            [
                "8c1d20f4.1849"
            ]
        ]
    },
    {
        "id": "7ffd480a.5b0388",
        "type": "inject",
        "z": "e001098b.ca9728",
        "name": "",
        "topic": "",
        "payload": "",
        "payloadType": "str",
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": 0.1,
        "x": 130,
        "y": 80,
        "wires": [
            [
                "b0b61d8.fd1a76"
            ]
        ]
    },
    {
        "id": "445417be.b6bb1",
        "type": "change",
        "z": "e001098b.ca9728",
        "d": true,
        "name": "getSelectedFile",
        "rules": [
            {
                "t": "set",
                "p": "filename",
                "pt": "msg",
                "to": "$env('UPLOAD_DIR')  & '/' & $flowContext('selectedFile')",
                "tot": "jsonata"
            },
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "Delete File ?",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 280,
        "y": 220,
        "wires": [
            [
                "d5462f94.3a9988"
            ]
        ]
    },
    {
        "id": "3870a863.667dc",
        "type": "file",
        "z": "e001098b.ca9728",
        "d": true,
        "name": "",
        "filename": "",
        "appendNewline": true,
        "createDir": false,
        "overwriteFile": "delete",
        "x": 830,
        "y": 220,
        "wires": [
            [
                "cca7cf30.499ea"
            ]
        ]
    },
    {
        "id": "d5462f94.3a9988",
        "type": "ui_toast",
        "z": "e001098b.ca9728",
        "d": true,
        "position": "dialog",
        "displayTime": "3",
        "highlight": "",
        "outputs": 1,
        "ok": "OK",
        "cancel": "Cancel",
        "topic": "",
        "name": "",
        "x": 470,
        "y": 220,
        "wires": [
            [
                "ac3be51.674de98"
            ]
        ]
    },
    {
        "id": "ac3be51.674de98",
        "type": "switch",
        "z": "e001098b.ca9728",
        "d": true,
        "name": "OK ?",
        "property": "payload",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "OK",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 630,
        "y": 220,
        "wires": [
            [
                "3870a863.667dc"
            ]
        ]
    },
    {
        "id": "8d6b3cbd.31a01",
        "type": "catch",
        "z": "e001098b.ca9728",
        "name": "",
        "scope": null,
        "x": 120,
        "y": 500,
        "wires": [
            [
                "cd5ed24f.5eb2f"
            ]
        ]
    },
    {
        "id": "79a68138.bc3c18",
        "type": "ui_toast",
        "z": "e001098b.ca9728",
        "position": "top right",
        "displayTime": "5",
        "highlight": "",
        "sendall": true,
        "outputs": 0,
        "ok": "OK",
        "cancel": "",
        "raw": false,
        "topic": "",
        "name": "",
        "x": 530,
        "y": 500,
        "wires": []
    },
    {
        "id": "cd5ed24f.5eb2f",
        "type": "change",
        "z": "e001098b.ca9728",
        "name": "getError",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "error.message",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 300,
        "y": 500,
        "wires": [
            [
                "79a68138.bc3c18"
            ]
        ]
    },
    {
        "id": "cca7cf30.499ea",
        "type": "link out",
        "z": "e001098b.ca9728",
        "name": "refreshAfterDelete",
        "links": [
            "ffc64451.87f9e"
        ],
        "x": 1135,
        "y": 220,
        "wires": []
    },
    {
        "id": "e18aaa9d.aa34b",
        "type": "link out",
        "z": "e001098b.ca9728",
        "name": "refreshAfterUpload",
        "links": [
            "ffc64451.87f9e"
        ],
        "x": 1135,
        "y": 340,
        "wires": []
    },
    {
        "id": "bcdce724.8a5908",
        "type": "change",
        "z": "e001098b.ca9728",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "'File ' & req.files[0].originalname & ' uploaded.'",
                "tot": "jsonata"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 460,
        "y": 440,
        "wires": [
            [
                "ab44b1aa.36bef8"
            ]
        ]
    },
    {
        "id": "b0b61d8.fd1a76",
        "type": "delay",
        "z": "e001098b.ca9728",
        "name": "",
        "pauseType": "delay",
        "timeout": "100",
        "timeoutUnits": "milliseconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "x": 190,
        "y": 140,
        "wires": [
            [
                "ebde02fc.a2a218"
            ]
        ]
    },
    {
        "id": "9dc6f815.643b78",
        "type": "watch",
        "z": "e001098b.ca9728",
        "name": "",
        "files": "$(UPLOAD_DIR)",
        "recursive": "",
        "x": 140,
        "y": 40,
        "wires": [
            [
                "b0b61d8.fd1a76"
            ]
        ]
    },
    {
        "id": "9c73bea9.9817d",
        "type": "change",
        "z": "e001098b.ca9728",
        "d": true,
        "name": "options",
        "rules": [
            {
                "t": "set",
                "p": "options",
                "pt": "msg",
                "to": "payload",
                "tot": "msg"
            },
            {
                "t": "delete",
                "p": "payload",
                "pt": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 560,
        "y": 140,
        "wires": [
            [
                "693eab01.c723ac"
            ]
        ]
    },
    {
        "id": "2ca6dc87.2d8854",
        "type": "switch",
        "z": "e001098b.ca9728",
        "name": "extensionAllowed ?",
        "property": "$env('EXTENSIONS')",
        "propertyType": "jsonata",
        "rules": [
            {
                "t": "cont",
                "v": "$split(filename, '.')[-1]",
                "vt": "jsonata"
            },
            {
                "t": "else"
            }
        ],
        "checkall": "false",
        "repair": false,
        "outputs": 2,
        "x": 610,
        "y": 360,
        "wires": [
            [
                "b2dd6024.710ba8"
            ],
            [
                "f39a1e0b.bc13d"
            ]
        ]
    },
    {
        "id": "f39a1e0b.bc13d",
        "type": "function",
        "z": "e001098b.ca9728",
        "name": "Error",
        "func": "node.error(`Error: only ${env.get('EXTENSIONS')} files are allowed.`, msg)\n",
        "outputs": 0,
        "noerr": 0,
        "x": 830,
        "y": 380,
        "wires": []
    },
    {
        "id": "8c1d20f4.1849",
        "type": "change",
        "z": "e001098b.ca9728",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "",
                "tot": "date"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1000,
        "y": 340,
        "wires": [
            [
                "e18aaa9d.aa34b"
            ]
        ]
    },
    {
        "id": "b2dd6024.710ba8",
        "type": "change",
        "z": "e001098b.ca9728",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "filename",
                "pt": "msg",
                "to": "$env('UPLOAD_DIR')  & '/' & 'triphase_profile.csv'",
                "tot": "jsonata"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 610,
        "y": 280,
        "wires": [
            [
                "c86448e4.da91f"
            ]
        ]
    },
    {
        "id": "aa5a9d50.05e688",
        "type": "subflow:e001098b.ca9728",
        "z": "81c110d8.48675",
        "name": "",
        "env": [
            {
                "name": "UPLOAD_DIR",
                "value": "/home/pi/Desktop",
                "type": "str"
            },
            {
                "name": "EXTENSIONS",
                "value": "[\"csv\"]",
                "type": "json"
            }
        ],
        "x": 230,
        "y": 120,
        "wires": [
            [
                "24c6199b.2b048e",
                "23e606ea.200e3a"
            ]
        ]
    },
    {
        "id": "24c6199b.2b048e",
        "type": "debug",
        "z": "81c110d8.48675",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "x": 730,
        "y": 120,
        "wires": []
    },
    {
        "id": "23e606ea.200e3a",
        "type": "file in",
        "z": "81c110d8.48675",
        "name": "triphase_profile.csv",
        "filename": "/home/pi/Desktop/triphase_profile.csv",
        "format": "utf8",
        "chunk": false,
        "sendError": false,
        "encoding": "none",
        "x": 450,
        "y": 260,
        "wires": [
            [
                "2b9d8c87.d87fb4"
            ]
        ]
    },
    {
        "id": "2b9d8c87.d87fb4",
        "type": "csv",
        "z": "81c110d8.48675",
        "name": "",
        "sep": ",",
        "hdrin": true,
        "hdrout": "",
        "multi": "mult",
        "ret": "\\n",
        "temp": "",
        "skip": "0",
        "strings": true,
        "x": 710,
        "y": 260,
        "wires": [
            [
                "b4420a1c.d0b01"
            ]
        ]
    },
    {
        "id": "8b9642b7.2384a",
        "type": "inject",
        "z": "81c110d8.48675",
        "name": "",
        "topic": "",
        "payload": "true",
        "payloadType": "bool",
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": 0.1,
        "x": 210,
        "y": 260,
        "wires": [
            [
                "23e606ea.200e3a"
            ]
        ]
    },
    {
        "id": "b4420a1c.d0b01",
        "type": "ui_table",
        "z": "81c110d8.48675",
        "group": "581bfac2.8d90bc",
        "name": "",
        "order": 2,
        "width": 12,
        "height": 4,
        "columns": [],
        "outputs": 0,
        "cts": false,
        "x": 948,
        "y": 260,
        "wires": []
    },
    {
        "id": "525400f9.871ca8",
        "type": "mqtt in",
        "z": "81c110d8.48675",
        "name": "",
        "topic": "HANevse/control/testmode",
        "qos": "2",
        "datatype": "auto",
        "broker": "df69e39.f63442",
        "x": 270,
        "y": 540,
        "wires": [
            [
                "aadcea29.d12fb8"
            ]
        ]
    },
    {
        "id": "aadcea29.d12fb8",
        "type": "function",
        "z": "81c110d8.48675",
        "name": "Store test",
        "func": "global.set(\"test\", msg.payload);\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 540,
        "y": 540,
        "wires": [
            []
        ]
    },
    {
        "id": "b511b063.939f6",
        "type": "catch",
        "z": "81c110d8.48675",
        "name": "",
        "scope": null,
        "x": 220,
        "y": 600,
        "wires": [
            [
                "214fa163.f6c976"
            ]
        ]
    },
    {
        "id": "f972763a.546f28",
        "type": "ui_toast",
        "z": "81c110d8.48675",
        "position": "top right",
        "displayTime": "5",
        "highlight": "",
        "sendall": true,
        "outputs": 0,
        "ok": "OK",
        "cancel": "",
        "raw": false,
        "topic": "",
        "name": "",
        "x": 630,
        "y": 600,
        "wires": []
    },
    {
        "id": "214fa163.f6c976",
        "type": "change",
        "z": "81c110d8.48675",
        "name": "getError",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "error.message",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 400,
        "y": 600,
        "wires": [
            [
                "f972763a.546f28"
            ]
        ]
    },
    {
        "id": "5b416cac.58685c",
        "type": "function",
        "z": "54366890.831598",
        "name": "Get test",
        "func": "msg.payload = Number(global.get(\"test\"));\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 740,
        "y": 600,
        "wires": [
            [
                "9dc94186.e75328"
            ]
        ]
    },
    {
        "id": "9dc94186.e75328",
        "type": "switch",
        "z": "54366890.831598",
        "name": "",
        "property": "payload",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "0",
                "vt": "num"
            },
            {
                "t": "else"
            }
        ],
        "checkall": "false",
        "repair": false,
        "outputs": 2,
        "x": 970,
        "y": 600,
        "wires": [
            [
                "ad0db78a.9585a"
            ],
            [
                "4b4e755.f91f00c"
            ]
        ]
    },
    {
        "id": "e2998c9a.d428f8",
        "type": "inject",
        "z": "81c110d8.48675",
        "name": "",
        "topic": "",
        "payload": "1",
        "payloadType": "str",
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": 0.1,
        "x": 330,
        "y": 500,
        "wires": [
            [
                "aadcea29.d12fb8"
            ]
        ]
    },
    {
        "id": "4b4e755.f91f00c",
        "type": "function",
        "z": "54366890.831598",
        "name": "Load graph SOC",
        "func": "var out={};\nout.payload = global.get(\"Graph_data_SOC\");\n\nreturn out;",
        "outputs": 1,
        "noerr": 0,
        "x": 1210,
        "y": 640,
        "wires": [
            [
                "f7053e8b.9a465"
            ]
        ]
    },
    {
        "id": "51d77ddb.7738d4",
        "type": "mqtt in",
        "z": "54366890.831598",
        "name": "",
        "topic": "HANevse/predict/I",
        "qos": "2",
        "datatype": "json",
        "broker": "df69e39.f63442",
        "x": 450,
        "y": 780,
        "wires": [
            [
                "ea9d84ef.84a66",
                "a47162d.2ef122",
                "5b416cac.58685c"
            ]
        ]
    },
    {
        "id": "ea9d84ef.84a66",
        "type": "function",
        "z": "54366890.831598",
        "name": "Draw I Graph",
        "func": "var time = Date.now();\nvar out = {};\nvar len = msg.payload.length;\n\nout.payload = [{\n    \"series\": [\"I\"],\n    \"data\":[[]],\n    \"labels\": [\"\"]\n}];\n\nfor (let i = 0; i < len; i++) {\n    out.payload[0][\"data\"][0].push({\"x\": time + i*3600000, \"y\": msg.payload[i]['I']});\n}\n\nglobal.set(\"Graph_data_I\", out.payload);\n\nreturn out;",
        "outputs": 1,
        "noerr": 0,
        "x": 750,
        "y": 740,
        "wires": [
            []
        ]
    },
    {
        "id": "f5ecd11d.dda43",
        "type": "ui_chart",
        "z": "54366890.831598",
        "name": "",
        "group": "d832f525.fbe818",
        "order": 13,
        "width": 11,
        "height": 5,
        "label": "I",
        "chartType": "line",
        "legend": "false",
        "xformat": "auto",
        "interpolate": "linear",
        "nodata": "",
        "dot": true,
        "ymin": "",
        "ymax": "",
        "removeOlder": "10",
        "removeOlderPoints": "10",
        "removeOlderUnit": "3600",
        "cutout": 0,
        "useOneColor": false,
        "useUTC": false,
        "colors": [
            "#1f77b4",
            "#ff7300",
            "#ff7f0e",
            "#2ca02c",
            "#98df8a",
            "#d62728",
            "#ff9896",
            "#9467bd",
            "#c5b0d5"
        ],
        "useOldStyle": false,
        "outputs": 1,
        "x": 1410,
        "y": 820,
        "wires": [
            []
        ]
    },
    {
        "id": "ad0db78a.9585a",
        "type": "function",
        "z": "54366890.831598",
        "name": "Clear graph SOC",
        "func": "var out={};\n\nout.payload = [];\n\nreturn out;",
        "outputs": 1,
        "noerr": 0,
        "x": 1210,
        "y": 560,
        "wires": [
            [
                "f7053e8b.9a465"
            ]
        ]
    },
    {
        "id": "a47162d.2ef122",
        "type": "function",
        "z": "54366890.831598",
        "name": "Get test",
        "func": "msg.payload = Number(global.get(\"test\"));\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 740,
        "y": 820,
        "wires": [
            [
                "aab991ce.9aca98"
            ]
        ]
    },
    {
        "id": "aab991ce.9aca98",
        "type": "switch",
        "z": "54366890.831598",
        "name": "",
        "property": "payload",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "0",
                "vt": "num"
            },
            {
                "t": "else"
            }
        ],
        "checkall": "false",
        "repair": false,
        "outputs": 2,
        "x": 970,
        "y": 820,
        "wires": [
            [
                "982322d5.906188"
            ],
            [
                "d8ba08b2.a9cef8"
            ]
        ]
    },
    {
        "id": "982322d5.906188",
        "type": "function",
        "z": "54366890.831598",
        "name": "Load graph I",
        "func": "var out={};\nout.payload = global.get(\"Graph_data_I\");\n\nreturn out;",
        "outputs": 1,
        "noerr": 0,
        "x": 1190,
        "y": 780,
        "wires": [
            [
                "f5ecd11d.dda43"
            ]
        ]
    },
    {
        "id": "d8ba08b2.a9cef8",
        "type": "function",
        "z": "54366890.831598",
        "name": "Clear graph I",
        "func": "var out={};\n\nout.payload = [];\n\nreturn out;",
        "outputs": 1,
        "noerr": 0,
        "x": 1190,
        "y": 860,
        "wires": [
            [
                "f5ecd11d.dda43"
            ]
        ]
    },
    {
        "id": "5b3667ce.437888",
        "type": "mqtt in",
        "z": "54366890.831598",
        "name": "",
        "topic": "HANevse/predict/weather",
        "qos": "2",
        "datatype": "json",
        "broker": "df69e39.f63442",
        "x": 470,
        "y": 940,
        "wires": [
            [
                "e49a5e00.d92c2"
            ]
        ]
    },
    {
        "id": "e49a5e00.d92c2",
        "type": "function",
        "z": "54366890.831598",
        "name": "SetParams_Prediction",
        "func": "var time_now = Date.now();\n\nmsg.params = {\n    $time: time_now + 3600000,\n    $I: msg.payload[0]['I'],\n    $temp: msg.payload[0]['temperature'],\n    $cloud: msg.payload[0]['cloud'],\n    $wind: msg.payload[0]['wind'],\n    $rain: msg.payload[0]['rain']\n}\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 780,
        "y": 940,
        "wires": [
            [
                "f0377598.bc8db"
            ]
        ]
    },
    {
        "id": "f0377598.bc8db",
        "type": "sqlite",
        "z": "54366890.831598",
        "mydb": "17bad1c3.1e90be",
        "sqlquery": "prepared",
        "sql": "INSERT INTO I_prediction (Time,I,Temperature,Cloud,Wind,Rain) VALUES ($time,$I,$temp,$cloud,$wind,$rain)\n\n",
        "name": "Prediction",
        "x": 980,
        "y": 920,
        "wires": [
            []
        ]
    },
    {
        "id": "81054fb2.43519",
        "type": "mqtt in",
        "z": "54366890.831598",
        "name": "",
        "topic": "HANevse/predict/Itemp",
        "qos": "2",
        "datatype": "json",
        "broker": "df69e39.f63442",
        "x": 460,
        "y": 1040,
        "wires": [
            [
                "d1fc397b.1cba18"
            ]
        ]
    },
    {
        "id": "d1fc397b.1cba18",
        "type": "function",
        "z": "54366890.831598",
        "name": "SetParams_I",
        "func": "var time_now = Date.now();\n\nmsg.params = {\n    $time: time_now,\n    $I: msg.payload[0]['I']\n}\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 750,
        "y": 1040,
        "wires": [
            [
                "aa51334b.0697f8"
            ]
        ]
    },
    {
        "id": "aa51334b.0697f8",
        "type": "sqlite",
        "z": "54366890.831598",
        "mydb": "17bad1c3.1e90be",
        "sqlquery": "prepared",
        "sql": "INSERT INTO Battery_TemporaryTable (Time,I) VALUES ($time,$I)\n\n",
        "name": "Temporary_I",
        "x": 990,
        "y": 1020,
        "wires": [
            []
        ]
    },
    {
        "id": "aa36f686.90d84",
        "type": "function",
        "z": "54366890.831598",
        "name": "SetParams_SOC",
        "func": "var time_now = Date.now();\n\nmsg.params = {\n    $time: time_now,\n    $SOC: msg.payload[0]['SOC']\n}\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 770,
        "y": 660,
        "wires": [
            [
                "f6210593.2e8878"
            ]
        ]
    },
    {
        "id": "f6210593.2e8878",
        "type": "sqlite",
        "z": "54366890.831598",
        "mydb": "17bad1c3.1e90be",
        "sqlquery": "prepared",
        "sql": "INSERT INTO Battery_SOC (Time,SOC) VALUES ($time,$SOC)\n\n",
        "name": "Battery_SOC",
        "x": 990,
        "y": 660,
        "wires": [
            []
        ]
    },
    {
        "id": "79c905a5.aebcdc",
        "type": "mqtt in",
        "z": "54366890.831598",
        "name": "",
        "topic": "HANevse/history/PV",
        "qos": "2",
        "datatype": "json",
        "broker": "df69e39.f63442",
        "x": 450,
        "y": 380,
        "wires": [
            [
                "c48f7475.3c85e8"
            ]
        ]
    },
    {
        "id": "c48f7475.3c85e8",
        "type": "function",
        "z": "54366890.831598",
        "name": "Draw Historical P Graph",
        "func": "var time = Date.now();\nvar out = {};\nvar len = msg.payload.length;\n\nout.payload = [{\n    \"series\": [\"PV_his\"],\n    \"data\":[[]],\n    \"labels\": []\n}];\n\nfor (let i = 0; i < len; i++) {\n    out.payload[0][\"data\"][0].push({\"x\": time + (i-len+1)*3600000, \"y\": msg.payload[i]['PV']});\n}\n\nglobal.set(\"His_PV_Graph_data\", out.payload);\n\nreturn out;",
        "outputs": 1,
        "noerr": 0,
        "x": 790,
        "y": 380,
        "wires": [
            [
                "19595dda.bd7442"
            ]
        ]
    },
    {
        "id": "19595dda.bd7442",
        "type": "function",
        "z": "54366890.831598",
        "name": "Load graph P",
        "func": "var out={};\nvar out1={};\nvar out2={};\nvar out3={};\n\nvar len=0;\n\nout1.payload = global.get(\"P_Graph_data\");\nout2.payload = global.get(\"His_PV_Graph_data\");\nout3.payload = global.get(\"His_EV_Graph_data\");\n\nout.payload = [{\n    \"series\": [\"PV\", \"EV\", \"His_PV\", \"His_EV\"],\n    \"data\":[[],[],[],[]],\n    \"labels\": []\n}];\n\nlen = out1.payload[0][\"data\"][0].length;\n\nfor (let i = 0; i < len; i++) {\n    out.payload[0][\"data\"][0].push(out1.payload[0][\"data\"][0][i]);\n    out.payload[0][\"data\"][1].push(out1.payload[0][\"data\"][1][i]);\n}\n\nlen = out2.payload[0][\"data\"][0].length;\n\nfor (let i = 0; i < len; i++) {\n    out.payload[0][\"data\"][2].push(out2.payload[0][\"data\"][0][i]);\n}\n\nlen = out3.payload[0][\"data\"][0].length;\n\nfor (let i = 0; i < len; i++) {\n    out.payload[0][\"data\"][3].push(out3.payload[0][\"data\"][0][i]);\n}\n\nreturn out;",
        "outputs": 1,
        "noerr": 0,
        "x": 1200,
        "y": 380,
        "wires": [
            [
                "7ac26f60.d0d3"
            ]
        ]
    },
    {
        "id": "2ea240fa.be2db",
        "type": "mqtt in",
        "z": "54366890.831598",
        "name": "",
        "topic": "HANevse/history/EV",
        "qos": "2",
        "datatype": "json",
        "broker": "df69e39.f63442",
        "x": 450,
        "y": 440,
        "wires": [
            [
                "946df855.63baf8"
            ]
        ]
    },
    {
        "id": "946df855.63baf8",
        "type": "function",
        "z": "54366890.831598",
        "name": "Draw Historical P Graph",
        "func": "var time = Date.now();\nvar out = {};\nvar len = msg.payload.length;\n\nout.payload = [{\n    \"series\": [\"EV_his\"],\n    \"data\":[[]],\n    \"labels\": []\n}];\n\nfor (let i = 0; i < len; i++) {\n    out.payload[0][\"data\"][0].push({\"x\": time + (i-len+1)*3600000, \"y\": msg.payload[i]['EV']});\n}\n\nglobal.set(\"His_EV_Graph_data\", out.payload);\n\nreturn out;",
        "outputs": 1,
        "noerr": 0,
        "x": 790,
        "y": 440,
        "wires": [
            [
                "19595dda.bd7442"
            ]
        ]
    },
    {
        "id": "286035ec.725a0a",
        "type": "ui_media",
        "z": "81c110d8.48675",
        "group": "581bfac2.8d90bc",
        "name": "",
        "width": 12,
        "height": 1,
        "order": 1,
        "category": "Formula",
        "file": "Screenshot 2021-12-13 105250.png",
        "layout": "center",
        "showcontrols": true,
        "loop": true,
        "onstart": false,
        "scope": "local",
        "tooltip": "",
        "x": 390,
        "y": 680,
        "wires": [
            []
        ]
    },
    {
        "id": "c8e3906f.f59af",
        "type": "inject",
        "z": "81c110d8.48675",
        "name": "",
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "x": 220,
        "y": 680,
        "wires": [
            [
                "286035ec.725a0a"
            ]
        ]
    },
    {
        "id": "f4cdf446.c80328",
        "type": "ui_button",
        "z": "54366890.831598",
        "name": "",
        "group": "581bfac2.8d90bc",
        "order": 3,
        "width": 0,
        "height": 0,
        "passthru": false,
        "label": "Run Demo",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "icon": "",
        "payload": "",
        "payloadType": "str",
        "topic": "",
        "x": 430,
        "y": 120,
        "wires": [
            [
                "c177af81.f430d"
            ]
        ]
    },
    {
        "id": "58a56ee8.d858c",
        "type": "file in",
        "z": "54366890.831598",
        "name": "triphase_profile.csv",
        "filename": "/home/pi/Desktop/triphase_profile.csv",
        "format": "utf8",
        "chunk": false,
        "sendError": false,
        "encoding": "none",
        "x": 950,
        "y": 160,
        "wires": [
            [
                "590815eb.68aaac"
            ]
        ]
    },
    {
        "id": "590815eb.68aaac",
        "type": "csv",
        "z": "54366890.831598",
        "name": "",
        "sep": ",",
        "hdrin": true,
        "hdrout": "",
        "multi": "mult",
        "ret": "\\n",
        "temp": "",
        "skip": "0",
        "strings": true,
        "x": 1150,
        "y": 160,
        "wires": [
            [
                "a892b0dc.963f1",
                "575dbe34.7efee",
                "15b4ef65.d5a2b1"
            ]
        ]
    },
    {
        "id": "c177af81.f430d",
        "type": "function",
        "z": "54366890.831598",
        "name": "Get test",
        "func": "msg.payload = Number(global.get(\"test\"));\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 580,
        "y": 120,
        "wires": [
            [
                "5a895786.92ba68"
            ]
        ]
    },
    {
        "id": "5a895786.92ba68",
        "type": "switch",
        "z": "54366890.831598",
        "name": "",
        "property": "payload",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "0",
                "vt": "num"
            },
            {
                "t": "else"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 730,
        "y": 120,
        "wires": [
            [
                "703b11d8.1b0d6"
            ],
            [
                "58a56ee8.d858c"
            ]
        ]
    },
    {
        "id": "703b11d8.1b0d6",
        "type": "function",
        "z": "54366890.831598",
        "name": "Error",
        "func": "node.error(`Error: System is not working in demo mode.`, msg)",
        "outputs": 1,
        "noerr": 0,
        "x": 910,
        "y": 80,
        "wires": [
            []
        ]
    },
    {
        "id": "a892b0dc.963f1",
        "type": "debug",
        "z": "54366890.831598",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "x": 1370,
        "y": 160,
        "wires": []
    },
    {
        "id": "15b4ef65.d5a2b1",
        "type": "function",
        "z": "54366890.831598",
        "name": "Calculate_SOC_demo",
        "func": "var time = Date.now();\nvar out = {};\nvar len = msg.payload.length;\nvar SOC = 69;\n\nlet ba_low = 35;\nlet ba_high = 85;\n\nout.payload = [{\n    \"series\": [\"SOC\"],\n    \"data\":[[]],\n    \"labels\": [\"\"]\n}];\n\nfor (let i = 0; i < len; i++) {\n    \n    //SOC = SOC + (float(P_ba_cal)/57000)*100\n    SOC = SOC + (msg.payload[i]['PV']-msg.payload[i]['EV'])/570;\n    if (SOC>100) SOC=100;\n    if (SOC<0) SOC=0;\n    out.payload[0][\"data\"][0].push({\"x\": time + i*3600000, \"y\": SOC});\n}\n\nglobal.set(\"Graph_data_SOC\", out.payload);\n\nreturn out;",
        "outputs": 1,
        "noerr": 0,
        "x": 460,
        "y": 240,
        "wires": [
            [
                "5b416cac.58685c"
            ]
        ]
    },
    {
        "id": "4a58813.222648",
        "type": "function",
        "z": "54366890.831598",
        "name": "Load graph P-Demo",
        "func": "var out={};\nvar out1={};\nvar out2={};\nvar out3={};\n\nvar len=0;\n\nout1.payload = global.get(\"P_Graph_data\");\n//out2.payload = global.get(\"His_PV_Graph_data\");\n//out3.payload = global.get(\"His_EV_Graph_data\");\n\nout.payload = [{\n    \"series\": [\"PV\", \"EV\", \"His_PV\", \"His_EV\"],\n    \"data\":[[],[],[],[]],\n    \"labels\": []\n}];\n\nlen = out1.payload[0][\"data\"][0].length;\n\nfor (let i = 0; i < len; i++) {\n    out.payload[0][\"data\"][0].push(out1.payload[0][\"data\"][0][i]);\n    out.payload[0][\"data\"][1].push(out1.payload[0][\"data\"][1][i]);\n}\n/*\nlen = out2.payload[0][\"data\"][0].length;\n\nfor (let i = 0; i < len; i++) {\n    out.payload[0][\"data\"][2].push(out2.payload[0][\"data\"][0][i]);\n}\n\nlen = out3.payload[0][\"data\"][0].length;\n\nfor (let i = 0; i < len; i++) {\n    out.payload[0][\"data\"][3].push(out3.payload[0][\"data\"][0][i]);\n}*/\n\nreturn out;",
        "outputs": 1,
        "noerr": 0,
        "x": 1100,
        "y": 240,
        "wires": [
            [
                "7ac26f60.d0d3"
            ]
        ]
    },
    {
        "id": "575dbe34.7efee",
        "type": "function",
        "z": "54366890.831598",
        "name": "Draw P Graph-Demo",
        "func": "var time = Date.now();\nvar out = {};\nvar len = msg.payload.length;\n\nout.payload = [{\n    \"series\": [\"PV\", \"EV\"],\n    \"data\":[[],[]],\n    \"labels\": []\n}];\n\nfor (let i = 0; i < len; i++) {\n    out.payload[0][\"data\"][0].push({\"x\": time + i*3600000, \"y\": msg.payload[i]['PV']});\n    out.payload[0][\"data\"][1].push({\"x\": time + i*3600000, \"y\": msg.payload[i]['EV']});\n}\n\nglobal.set(\"P_Graph_data\", out.payload);\n\nreturn out;",
        "outputs": 1,
        "noerr": 0,
        "x": 780,
        "y": 240,
        "wires": [
            [
                "4a58813.222648"
            ]
        ]
    },
    {
        "id": "6db55b42.cf462c",
        "type": "mqtt out",
        "z": "81c110d8.48675",
        "d": true,
        "name": "",
        "topic": "HANevse/control/data",
        "qos": "",
        "retain": "",
        "broker": "3609bd62.7b085a",
        "x": 580,
        "y": 420,
        "wires": []
    }
]